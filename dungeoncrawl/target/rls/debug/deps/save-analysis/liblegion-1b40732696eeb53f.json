{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1","program":"/Users/raylee/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","legion","--edition=2018","/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codegen\"","--cfg","feature=\"crossbeam-channel\"","--cfg","feature=\"crossbeam-events\"","--cfg","feature=\"default\"","--cfg","feature=\"erased-serde\"","--cfg","feature=\"legion_codegen\"","--cfg","feature=\"parallel\"","--cfg","feature=\"rayon\"","--cfg","feature=\"serde\"","--cfg","feature=\"serialize\"","-C","metadata=1b40732696eeb53f","-C","extra-filename=-1b40732696eeb53f","--out-dir","/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps","-L","dependency=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps","--extern","bit_set=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libbit_set-1004a2a02b2701a6.rmeta","--extern","crossbeam_channel=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libcrossbeam_channel-f47b58e440917480.rmeta","--extern","derivative=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libderivative-8687a4176ca6f950.dylib","--extern","downcast_rs=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libdowncast_rs-6b570c51d167c7f2.rmeta","--extern","erased_serde=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/liberased_serde-494a90327142324a.rmeta","--extern","itertools=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libitertools-e39f73264f5fcb9d.rmeta","--extern","legion_codegen=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/liblegion_codegen-698783aec0e483e1.dylib","--extern","parking_lot=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libparking_lot-d842fd06cf57cea9.rmeta","--extern","paste=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libpaste-d74bc33eb1a4e015.dylib","--extern","rayon=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/librayon-6ad764c1caa0d6a0.rmeta","--extern","serde=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libserde-abc4ae2c19ab4adb.rmeta","--extern","smallvec=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libsmallvec-e8b8cdf04346d083.rmeta","--extern","thiserror=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libthiserror-6f3a0b73b29813ca.rmeta","--extern","uuid=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libuuid-3c2f8fb4ae68334c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raylee/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/liblegion-1b40732696eeb53f.rmeta"},"prelude":{"crate_id":{"name":"legion","disambiguator":[17742356480610116857,6181263128051389258]},"crate_root":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src","external_crates":[{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8089372304544504840,2527656813180266519]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","num":2,"id":{"name":"core","disambiguator":[8996585198574955197,10064433740309368892]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11464076584146293375,1944750198668660233]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13665112390248177411,18026488694072058539]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4173548784217791313,6413716694370064316]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4417783556059781835,6377966464484580742]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16465050104586441903,11486803546517078730]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4077680908246514517,3259883106732070033]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1548350640775673346,17931765307891215690]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3115519341803559472,4584691163881866229]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8103449524405359139,17525483118853280774]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16653067590616142994,3376435367795585491]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[12324169339618228571,8193712517758892028]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[11110532902483564599,1367988466669347686]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9623270257962620076,7602523633458697349]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","num":16,"id":{"name":"thiserror","disambiguator":[3987072946053269214,157921342220462851]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","num":17,"id":{"name":"thiserror_impl","disambiguator":[14076729932522731297,10090981627212107116]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":18,"id":{"name":"rayon","disambiguator":[13965889101034499689,8880963099843402147]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":19,"id":{"name":"either","disambiguator":[8946026000090117890,143895433094683192]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":20,"id":{"name":"rayon_core","disambiguator":[7257278458088781656,3631893107611919275]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":21,"id":{"name":"crossbeam_channel","disambiguator":[14563943967111246333,7178815966918741292]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":22,"id":{"name":"cfg_if","disambiguator":[14450564791605029788,113709828964997141]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":23,"id":{"name":"crossbeam_utils","disambiguator":[8353845630783687070,8394744790924754535]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":24,"id":{"name":"once_cell","disambiguator":[16132929313450625360,6673490609048877202]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":25,"id":{"name":"crossbeam_deque","disambiguator":[17420060560223141751,16714074373905769609]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":26,"id":{"name":"crossbeam_epoch","disambiguator":[14838943252961605658,13441946862974726659]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":27,"id":{"name":"scopeguard","disambiguator":[5640782450401488257,2357455914816469932]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":28,"id":{"name":"memoffset","disambiguator":[17789376797747000994,17862723367763143364]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":29,"id":{"name":"num_cpus","disambiguator":[3159182432805494977,8727244898838549755]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","num":30,"id":{"name":"libc","disambiguator":[12952371630488800526,14955048637107875585]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","num":31,"id":{"name":"smallvec","disambiguator":[2418122795750571429,4695081943171041110]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","num":32,"id":{"name":"itertools","disambiguator":[10740652469790870234,4797450130222704303]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","num":33,"id":{"name":"parking_lot","disambiguator":[5438823326742587660,415009771695827181]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","num":34,"id":{"name":"instant","disambiguator":[2285498929138112897,11270732220149824785]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","num":35,"id":{"name":"lock_api","disambiguator":[7524742692048752381,12740423044269492895]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","num":36,"id":{"name":"parking_lot_core","disambiguator":[6652854830235168292,1785228081453406038]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","num":37,"id":{"name":"derivative","disambiguator":[14254775640651316915,18045473274039797317]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","num":38,"id":{"name":"serde","disambiguator":[3552593549491945464,15794979482657092724]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","num":39,"id":{"name":"serde_derive","disambiguator":[10076361997705709867,4197404627143576467]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","num":40,"id":{"name":"uuid","disambiguator":[17362475276063975341,13596929999591784300]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","num":41,"id":{"name":"getrandom","disambiguator":[10019223250132329179,18431066260479695408]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","num":42,"id":{"name":"downcast_rs","disambiguator":[14452937767812936204,14001615157652100988]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","num":43,"id":{"name":"bit_set","disambiguator":[3631696657292497180,7532665712283736368]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","num":44,"id":{"name":"bit_vec","disambiguator":[4792009775939748289,13421628661181848662]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","num":45,"id":{"name":"legion_codegen","disambiguator":[13468501161054163202,8009672728464040778]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","num":46,"id":{"name":"paste","disambiguator":[5272437494443230253,14909510909683193348]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","num":47,"id":{"name":"crossbeam_channel","disambiguator":[7720837805343485345,16058914065309109192]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","num":48,"id":{"name":"crossbeam_utils","disambiguator":[15009108723452589765,9843889597803276998]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","num":49,"id":{"name":"cfg_if","disambiguator":[7640424083748952209,18047585548760446411]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","num":50,"id":{"name":"lazy_static","disambiguator":[4218260612901546167,14219119242361064186]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","num":51,"id":{"name":"maybe_uninit","disambiguator":[15417383647926815544,8778947873730891941]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","num":52,"id":{"name":"erased_serde","disambiguator":[1080810585532182062,18054255950065922320]}}],"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":0,"byte_end":8427,"line_start":1,"line_end":212,"column_start":1,"column_end":36}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8832},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487803,"byte_end":487806,"line_start":85,"line_end":85,"column_start":14,"column_end":17},"alias_span":null,"name":"And","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":9433},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487821,"byte_end":487824,"line_start":86,"line_end":86,"column_start":14,"column_end":17},"alias_span":null,"name":"Any","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":9434},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487821,"byte_end":487824,"line_start":86,"line_end":86,"column_start":14,"column_end":17},"alias_span":null,"name":"Any","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":9441},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487845,"byte_end":487860,"line_start":87,"line_end":87,"column_start":20,"column_end":35},"alias_span":null,"name":"ComponentFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487883,"byte_end":487886,"line_start":88,"line_end":88,"column_start":22,"column_end":25},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487888,"byte_end":487897,"line_start":88,"line_end":88,"column_start":27,"column_end":36},"alias_span":null,"name":"component","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1328},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487899,"byte_end":487912,"line_start":88,"line_end":88,"column_start":38,"column_end":51},"alias_span":null,"name":"maybe_changed","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487914,"byte_end":487925,"line_start":88,"line_end":88,"column_start":53,"column_end":64},"alias_span":null,"name":"passthrough","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":9448},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487951,"byte_end":487973,"line_start":89,"line_end":89,"column_start":24,"column_end":46},"alias_span":null,"name":"ComponentChangedFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":9458},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487988,"byte_end":487991,"line_start":90,"line_end":90,"column_start":14,"column_end":17},"alias_span":null,"name":"Not","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":9470},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488005,"byte_end":488007,"line_start":91,"line_end":91,"column_start":13,"column_end":15},"alias_span":null,"name":"Or","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10071},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488030,"byte_end":488041,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"alias_span":null,"name":"Passthrough","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10072},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488030,"byte_end":488041,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"alias_span":null,"name":"Passthrough","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10079},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488066,"byte_end":488084,"line_start":93,"line_end":93,"column_start":24,"column_end":42},"alias_span":null,"name":"TryComponentFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488094,"byte_end":488107,"line_start":94,"line_end":94,"column_start":9,"column_end":22},"alias_span":null,"name":"DynamicFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488109,"byte_end":488121,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"alias_span":null,"name":"EntityFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488123,"byte_end":488135,"line_start":94,"line_end":94,"column_start":38,"column_end":50},"alias_span":null,"name":"FilterResult","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488137,"byte_end":488149,"line_start":94,"line_end":94,"column_start":52,"column_end":64},"alias_span":null,"name":"GroupMatcher","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":1348},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488151,"byte_end":488163,"line_start":94,"line_end":94,"column_start":66,"column_end":78},"alias_span":null,"name":"LayoutFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10099},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488198,"byte_end":488202,"line_start":97,"line_end":97,"column_start":15,"column_end":19},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10114},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488214,"byte_end":488221,"line_start":97,"line_end":97,"column_start":31,"column_end":38},"alias_span":null,"name":"TryRead","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10129},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488234,"byte_end":488242,"line_start":97,"line_end":97,"column_start":51,"column_end":59},"alias_span":null,"name":"TryWrite","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":10144},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488251,"byte_end":488256,"line_start":97,"line_end":97,"column_start":68,"column_end":73},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2311},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488258,"byte_end":488271,"line_start":97,"line_end":97,"column_start":75,"column_end":88},"alias_span":null,"name":"DefaultFilter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488273,"byte_end":488278,"line_start":97,"line_end":97,"column_start":90,"column_end":95},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2330},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488288,"byte_end":488305,"line_start":98,"line_end":98,"column_start":9,"column_end":26},"alias_span":null,"name":"IntoIndexableIter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488307,"byte_end":488315,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadOnly","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2313},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488317,"byte_end":488321,"line_start":98,"line_end":98,"column_start":38,"column_end":42},"alias_span":null,"name":"View","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2555},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488334,"byte_end":488343,"line_start":100,"line_end":100,"column_start":5,"column_end":14},"alias_span":null,"name":"ChunkIter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2522},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488345,"byte_end":488354,"line_start":100,"line_end":100,"column_start":16,"column_end":25},"alias_span":null,"name":"ChunkView","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2358},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488356,"byte_end":488365,"line_start":100,"line_end":100,"column_start":27,"column_end":36},"alias_span":null,"name":"IntoQuery","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2373},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488367,"byte_end":488372,"line_start":100,"line_end":100,"column_start":38,"column_end":43},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2594},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488451,"byte_end":488455,"line_start":104,"line_end":104,"column_start":45,"column_end":49},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":2612},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":488457,"byte_end":488469,"line_start":104,"line_end":104,"column_start":51,"column_end":63},"alias_span":null,"name":"ParChunkIter","value":"","parent":{"krate":0,"index":5369}},{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492424,"byte_end":492434,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"alias_span":null,"name":"ConsAppend","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492436,"byte_end":492447,"line_start":78,"line_end":78,"column_start":24,"column_end":35},"alias_span":null,"name":"ConsFlatten","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":6368},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492461,"byte_end":492482,"line_start":79,"line_end":79,"column_start":12,"column_end":33},"alias_span":null,"name":"ComponentTypeIdHasher","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":6373},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492484,"byte_end":492493,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"alias_span":null,"name":"U64Hasher","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492518,"byte_end":492533,"line_start":81,"line_end":81,"column_start":9,"column_end":24},"alias_span":null,"name":"ArchetypeSource","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492535,"byte_end":492550,"line_start":81,"line_end":81,"column_start":26,"column_end":41},"alias_span":null,"name":"ArchetypeWriter","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492552,"byte_end":492567,"line_start":81,"line_end":81,"column_start":43,"column_end":58},"alias_span":null,"name":"ComponentSource","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492569,"byte_end":492584,"line_start":81,"line_end":81,"column_start":60,"column_end":75},"alias_span":null,"name":"ComponentWriter","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492586,"byte_end":492605,"line_start":81,"line_end":81,"column_start":77,"column_end":96},"alias_span":null,"name":"IntoComponentSource","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492615,"byte_end":492622,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"alias_span":null,"name":"IntoSoa","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492624,"byte_end":492646,"line_start":82,"line_end":82,"column_start":18,"column_end":40},"alias_span":null,"name":"UnknownComponentWriter","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11179},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492690,"byte_end":492699,"line_start":85,"line_end":85,"column_start":21,"column_end":30},"alias_span":null,"name":"Archetype","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11136},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492701,"byte_end":492715,"line_start":85,"line_end":85,"column_start":32,"column_end":46},"alias_span":null,"name":"ArchetypeIndex","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11137},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492701,"byte_end":492715,"line_start":85,"line_end":85,"column_start":32,"column_end":46},"alias_span":null,"name":"ArchetypeIndex","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11186},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492717,"byte_end":492729,"line_start":85,"line_end":85,"column_start":48,"column_end":60},"alias_span":null,"name":"EntityLayout","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":3888},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492752,"byte_end":492761,"line_start":86,"line_end":86,"column_start":21,"column_end":30},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11195},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492763,"byte_end":492778,"line_start":86,"line_end":86,"column_start":32,"column_end":47},"alias_span":null,"name":"ComponentTypeId","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11229},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492797,"byte_end":492802,"line_start":87,"line_end":87,"column_start":17,"column_end":22},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11210},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492804,"byte_end":492812,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"alias_span":null,"name":"GroupDef","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":3943},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492814,"byte_end":492825,"line_start":87,"line_end":87,"column_start":34,"column_end":45},"alias_span":null,"name":"GroupSource","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11298},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492843,"byte_end":492854,"line_start":88,"line_end":88,"column_start":16,"column_end":27},"alias_span":null,"name":"SearchIndex","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11325},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492872,"byte_end":492885,"line_start":89,"line_end":89,"column_start":17,"column_end":30},"alias_span":null,"name":"PackedStorage","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11367},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492895,"byte_end":492909,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"alias_span":null,"name":"ComponentIndex","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11368},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492895,"byte_end":492909,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"alias_span":null,"name":"ComponentIndex","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11356},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492911,"byte_end":492924,"line_start":90,"line_end":90,"column_start":25,"column_end":38},"alias_span":null,"name":"ComponentMeta","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4189},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492926,"byte_end":492940,"line_start":90,"line_end":90,"column_start":40,"column_end":54},"alias_span":null,"name":"ComponentSlice","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4213},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492942,"byte_end":492959,"line_start":90,"line_end":90,"column_start":56,"column_end":73},"alias_span":null,"name":"ComponentSliceMut","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4237},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492961,"byte_end":492977,"line_start":90,"line_end":90,"column_start":75,"column_end":91},"alias_span":null,"name":"ComponentStorage","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11400},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492987,"byte_end":492997,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4171},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492999,"byte_end":493004,"line_start":91,"line_end":91,"column_start":21,"column_end":26},"alias_span":null,"name":"Epoch","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4274},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":493006,"byte_end":493014,"line_start":91,"line_end":91,"column_start":28,"column_end":36},"alias_span":null,"name":"MultiMut","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":11404},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":493016,"byte_end":493027,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"alias_span":null,"name":"PackOptions","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4175},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":493029,"byte_end":493052,"line_start":91,"line_end":91,"column_start":51,"column_end":74},"alias_span":null,"name":"UnknownComponentStorage","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4172},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":493054,"byte_end":493061,"line_start":91,"line_end":91,"column_start":76,"column_end":83},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":5471}},{"kind":"Use","ref_id":{"krate":0,"index":4515},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493274,"byte_end":493287,"line_start":4,"line_end":4,"column_start":15,"column_end":28},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4451},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493289,"byte_end":493302,"line_start":4,"line_end":4,"column_start":30,"column_end":43},"alias_span":null,"name":"WorldWritable","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4638},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493330,"byte_end":493335,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4613},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493337,"byte_end":493345,"line_start":6,"line_end":6,"column_start":16,"column_end":24},"alias_span":null,"name":"Resource","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4616},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493347,"byte_end":493358,"line_start":6,"line_end":6,"column_start":26,"column_end":37},"alias_span":null,"name":"ResourceSet","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":11466},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493360,"byte_end":493374,"line_start":6,"line_end":6,"column_start":39,"column_end":53},"alias_span":null,"name":"ResourceTypeId","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":11564},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493376,"byte_end":493385,"line_start":6,"line_end":6,"column_start":55,"column_end":64},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4733},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493387,"byte_end":493400,"line_start":6,"line_end":6,"column_start":66,"column_end":79},"alias_span":null,"name":"SyncResources","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":11560},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493402,"byte_end":493417,"line_start":6,"line_end":6,"column_start":81,"column_end":96},"alias_span":null,"name":"UnsafeResources","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4847},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493441,"byte_end":493448,"line_start":8,"line_end":8,"column_start":16,"column_end":23},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4811},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493450,"byte_end":493458,"line_start":8,"line_end":8,"column_start":25,"column_end":33},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4799},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493460,"byte_end":493476,"line_start":8,"line_end":8,"column_start":35,"column_end":51},"alias_span":null,"name":"ParallelRunnable","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4802},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493478,"byte_end":493486,"line_start":8,"line_end":8,"column_start":53,"column_end":61},"alias_span":null,"name":"Runnable","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4874},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493488,"byte_end":493496,"line_start":8,"line_end":8,"column_start":63,"column_end":71},"alias_span":null,"name":"Schedule","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493498,"byte_end":493502,"line_start":8,"line_end":8,"column_start":73,"column_end":77},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":4997},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493518,"byte_end":493526,"line_start":9,"line_end":9,"column_start":14,"column_end":22},"alias_span":null,"name":"QuerySet","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493528,"byte_end":493534,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":11628},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493536,"byte_end":493548,"line_start":9,"line_end":9,"column_start":32,"column_end":44},"alias_span":null,"name":"SystemAccess","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":5055},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493550,"byte_end":493563,"line_start":9,"line_end":9,"column_start":46,"column_end":59},"alias_span":null,"name":"SystemBuilder","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":5046},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493565,"byte_end":493573,"line_start":9,"line_end":9,"column_start":61,"column_end":69},"alias_span":null,"name":"SystemFn","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":11635},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493575,"byte_end":493583,"line_start":9,"line_end":9,"column_start":71,"column_end":79},"alias_span":null,"name":"SystemId","value":"","parent":{"krate":0,"index":5576}},{"kind":"Use","ref_id":{"krate":0,"index":6281},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498668,"byte_end":498676,"line_start":145,"line_end":145,"column_start":14,"column_end":22},"alias_span":null,"name":"Allocate","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":6261},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498678,"byte_end":498684,"line_start":145,"line_end":145,"column_start":24,"column_end":30},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498686,"byte_end":498698,"line_start":145,"line_end":145,"column_start":32,"column_end":44},"alias_span":null,"name":"EntityHasher","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":6286},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498700,"byte_end":498714,"line_start":145,"line_end":145,"column_start":46,"column_end":60},"alias_span":null,"name":"EntityLocation","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498700,"byte_end":498714,"line_start":145,"line_end":145,"column_start":46,"column_end":60},"alias_span":null,"name":"EntityLocation","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":6295},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498716,"byte_end":498727,"line_start":145,"line_end":145,"column_start":62,"column_end":73},"alias_span":null,"name":"LocationMap","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":6303},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498742,"byte_end":498756,"line_start":146,"line_end":146,"column_start":13,"column_end":27},"alias_span":null,"name":"ComponentError","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498758,"byte_end":498763,"line_start":146,"line_end":146,"column_start":29,"column_end":34},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498765,"byte_end":498773,"line_start":146,"line_end":146,"column_start":36,"column_end":44},"alias_span":null,"name":"EntryMut","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498775,"byte_end":498783,"line_start":146,"line_end":146,"column_start":46,"column_end":54},"alias_span":null,"name":"EntryRef","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":6341},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498798,"byte_end":498803,"line_start":147,"line_end":147,"column_start":13,"column_end":18},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498805,"byte_end":498816,"line_start":147,"line_end":147,"column_start":20,"column_end":31},"alias_span":null,"name":"EventSender","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":8823},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498836,"byte_end":498847,"line_start":148,"line_end":148,"column_start":18,"column_end":29},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":4347},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498864,"byte_end":498879,"line_start":149,"line_end":149,"column_start":16,"column_end":31},"alias_span":null,"name":"ArchetypeAccess","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11413},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498881,"byte_end":498896,"line_start":149,"line_end":149,"column_start":33,"column_end":48},"alias_span":null,"name":"ComponentAccess","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11426},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498898,"byte_end":498906,"line_start":149,"line_end":149,"column_start":50,"column_end":58},"alias_span":null,"name":"SubWorld","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11719},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498930,"byte_end":498939,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"alias_span":null,"name":"Duplicate","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11652},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498941,"byte_end":498958,"line_start":151,"line_end":151,"column_start":20,"column_end":37},"alias_span":null,"name":"EntityAccessError","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":5335},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498960,"byte_end":498973,"line_start":151,"line_end":151,"column_start":39,"column_end":52},"alias_span":null,"name":"EntityRewrite","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":5230},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498975,"byte_end":498986,"line_start":151,"line_end":151,"column_start":54,"column_end":65},"alias_span":null,"name":"EntityStore","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":5329},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498988,"byte_end":498994,"line_start":151,"line_end":151,"column_start":67,"column_end":73},"alias_span":null,"name":"Merger","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11705},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498996,"byte_end":499011,"line_start":151,"line_end":151,"column_start":75,"column_end":90},"alias_span":null,"name":"StorageAccessor","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11693},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":499013,"byte_end":499018,"line_start":151,"line_end":151,"column_start":92,"column_end":97},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11671},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":499028,"byte_end":499035,"line_start":152,"line_end":152,"column_start":9,"column_end":16},"alias_span":null,"name":"WorldId","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":11689},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":499037,"byte_end":499049,"line_start":152,"line_end":152,"column_start":18,"column_end":30},"alias_span":null,"name":"WorldOptions","value":"","parent":{"krate":0,"index":5645}},{"kind":"Use","ref_id":{"krate":0,"index":3160},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500821,"byte_end":500838,"line_start":36,"line_end":36,"column_start":9,"column_end":26},"alias_span":null,"name":"WorldDeserializer","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":11070},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500849,"byte_end":500854,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"alias_span":null,"name":"Canon","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3485},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500856,"byte_end":500866,"line_start":37,"line_end":37,"column_start":17,"column_end":27},"alias_span":null,"name":"EntityName","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3465},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500868,"byte_end":500884,"line_start":37,"line_end":37,"column_start":29,"column_end":45},"alias_span":null,"name":"EntitySerializer","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3553},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500897,"byte_end":500914,"line_start":38,"line_end":38,"column_start":11,"column_end":28},"alias_span":null,"name":"SerializableWorld","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500916,"byte_end":500931,"line_start":38,"line_end":38,"column_start":30,"column_end":45},"alias_span":null,"name":"WorldSerializer","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3582},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500938,"byte_end":500949,"line_start":39,"line_end":39,"column_start":5,"column_end":16},"alias_span":null,"name":"AutoTypeKey","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3692},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500951,"byte_end":500971,"line_start":39,"line_end":39,"column_start":18,"column_end":38},"alias_span":null,"name":"DeserializeIntoWorld","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3693},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500951,"byte_end":500971,"line_start":39,"line_end":39,"column_start":18,"column_end":38},"alias_span":null,"name":"DeserializeIntoWorld","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3705},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500973,"byte_end":500992,"line_start":39,"line_end":39,"column_start":40,"column_end":59},"alias_span":null,"name":"DeserializeNewWorld","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500973,"byte_end":500992,"line_start":39,"line_end":39,"column_start":40,"column_end":59},"alias_span":null,"name":"DeserializeNewWorld","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3594},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500994,"byte_end":501002,"line_start":39,"line_end":39,"column_start":61,"column_end":69},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":501004,"byte_end":501011,"line_start":39,"line_end":39,"column_start":71,"column_end":78},"alias_span":null,"name":"TypeKey","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":11078},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":501013,"byte_end":501024,"line_start":39,"line_end":39,"column_start":80,"column_end":91},"alias_span":null,"name":"UnknownType","value":"","parent":{"krate":0,"index":5724}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8045,"byte_end":8048,"line_start":200,"line_end":200,"column_start":9,"column_end":12},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8050,"byte_end":8059,"line_start":200,"line_end":200,"column_start":14,"column_end":23},"alias_span":null,"name":"component","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1328},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8061,"byte_end":8074,"line_start":200,"line_end":200,"column_start":25,"column_end":38},"alias_span":null,"name":"maybe_changed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8076,"byte_end":8087,"line_start":200,"line_end":200,"column_start":40,"column_end":51},"alias_span":null,"name":"passthrough","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8089,"byte_end":8094,"line_start":200,"line_end":200,"column_start":53,"column_end":58},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2358},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8096,"byte_end":8105,"line_start":200,"line_end":200,"column_start":60,"column_end":69},"alias_span":null,"name":"IntoQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10099},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8107,"byte_end":8111,"line_start":200,"line_end":200,"column_start":71,"column_end":75},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10114},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8113,"byte_end":8120,"line_start":200,"line_end":200,"column_start":77,"column_end":84},"alias_span":null,"name":"TryRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10129},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8122,"byte_end":8130,"line_start":200,"line_end":200,"column_start":86,"column_end":94},"alias_span":null,"name":"TryWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10144},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8140,"byte_end":8145,"line_start":201,"line_end":201,"column_start":9,"column_end":14},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3943},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8168,"byte_end":8179,"line_start":203,"line_end":203,"column_start":15,"column_end":26},"alias_span":null,"name":"GroupSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8181,"byte_end":8188,"line_start":203,"line_end":203,"column_start":28,"column_end":35},"alias_span":null,"name":"IntoSoa","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11564},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8205,"byte_end":8214,"line_start":204,"line_end":204,"column_start":15,"column_end":24},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4874},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8216,"byte_end":8224,"line_start":204,"line_end":204,"column_start":26,"column_end":34},"alias_span":null,"name":"Schedule","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5055},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8226,"byte_end":8239,"line_start":204,"line_end":204,"column_start":36,"column_end":49},"alias_span":null,"name":"SystemBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6261},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8254,"byte_end":8260,"line_start":205,"line_end":205,"column_start":13,"column_end":19},"alias_span":null,"name":"Entity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5230},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8262,"byte_end":8273,"line_start":205,"line_end":205,"column_start":21,"column_end":32},"alias_span":null,"name":"EntityStore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11693},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8275,"byte_end":8280,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11689},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8282,"byte_end":8294,"line_start":205,"line_end":205,"column_start":41,"column_end":53},"alias_span":null,"name":"WorldOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":45,"index":66},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8353,"byte_end":8359,"line_start":209,"line_end":209,"column_start":25,"column_end":31},"alias_span":null,"name":"system","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3594},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":8418,"byte_end":8426,"line_start":212,"line_end":212,"column_start":27,"column_end":35},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":0,"byte_end":8427,"line_start":1,"line_end":212,"column_start":1,"column_end":36},"name":"","qualname":"::","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5369},{"krate":0,"index":5471},{"krate":0,"index":5576},{"krate":0,"index":5645},{"krate":0,"index":5724},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5769},{"krate":0,"index":5772},{"krate":0,"index":5775},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5790},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5807},{"krate":0,"index":5810},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5817},{"krate":0,"index":5820},{"krate":0,"index":5823},{"krate":0,"index":5826},{"krate":0,"index":5829}],"decl_id":null,"docs":" Legion aims to be a feature rich high performance ECS library for Rust game projects with minimal boilerplate.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ Legion aims to be a feature rich high performance ECS library for Rust game projects with minimal boilerplate.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":24,"byte_end":138,"line_start":3,"line_end":3,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":139,"byte_end":142,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":143,"byte_end":164,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":165,"byte_end":168,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Worlds","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":169,"byte_end":182,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":183,"byte_end":186,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [Worlds](world/struct.World.html) are collections of [entities](world/struct.Entity.html), where each entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":187,"byte_end":299,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ can have an arbitrary collection of [components](storage/trait.Component.html) attached.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":300,"byte_end":392,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":393,"byte_end":396,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":397,"byte_end":404,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":405,"byte_end":423,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ let world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":424,"byte_end":457,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":458,"byte_end":465,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":466,"byte_end":469,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Entities can be inserted via either `push` (for a single entity) or `extend` (for a collection of entities with","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":470,"byte_end":585,"line_start":17,"line_end":17,"column_start":1,"column_end":116}},{"value":"/ the same component types). The world will create a unique ID for each entity upon insertion that you can use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":586,"byte_end":698,"line_start":18,"line_end":18,"column_start":1,"column_end":113}},{"value":"/ to refer to that entity later.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":699,"byte_end":733,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":734,"byte_end":737,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":738,"byte_end":745,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":746,"byte_end":766,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":767,"byte_end":806,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ // a component is any type that is 'static, sized, send and sync","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":807,"byte_end":875,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ #[derive(Clone, Copy, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":876,"byte_end":920,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ struct Position {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":921,"byte_end":942,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     x: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":943,"byte_end":958,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     y: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":959,"byte_end":974,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":975,"byte_end":980,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":981,"byte_end":984,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Copy, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":985,"byte_end":1029,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ struct Velocity {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1030,"byte_end":1051,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     dx: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1052,"byte_end":1068,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/     dy: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1069,"byte_end":1085,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1086,"byte_end":1091,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1092,"byte_end":1095,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // push a component tuple into the world to create an entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1096,"byte_end":1160,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ let entity: Entity = world.push((Position { x: 0.0, y: 0.0 }, Velocity { dx: 0.0, dy: 0.0 }));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1161,"byte_end":1259,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // or extend via an IntoIterator of tuples to add many at once (this is faster)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1264,"byte_end":1347,"line_start":40,"line_end":40,"column_start":1,"column_end":84}},{"value":"/ let entities: &[Entity] = world.extend(vec![","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1348,"byte_end":1396,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/     (Position { x: 0.0, y: 0.0 }, Velocity { dx: 0.0, dy: 0.0 }),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1397,"byte_end":1466,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/     (Position { x: 1.0, y: 1.0 }, Velocity { dx: 0.0, dy: 0.0 }),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1467,"byte_end":1536,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/     (Position { x: 2.0, y: 2.0 }, Velocity { dx: 0.0, dy: 0.0 }),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1537,"byte_end":1606,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1607,"byte_end":1614,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1615,"byte_end":1622,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1623,"byte_end":1626,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ You can access entities via [entries](world/struct.Entry.html). Entries allow you to query an entity to find","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1627,"byte_end":1739,"line_start":48,"line_end":48,"column_start":1,"column_end":113}},{"value":"/ out what types of components are attached to it, to get component references, or to add and remove components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1740,"byte_end":1854,"line_start":49,"line_end":49,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1855,"byte_end":1858,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1859,"byte_end":1866,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1867,"byte_end":1887,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1888,"byte_end":1927,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/ # let entity = world.push((false,));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1928,"byte_end":1968,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ // entries return `None` if the entity does not exist","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":1969,"byte_end":2026,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ if let Some(mut entry) = world.entry(entity) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2027,"byte_end":2077,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/     // access information about the entity's archetype","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2078,"byte_end":2136,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"/     println!(\"{:?} has {:?}\", entity, entry.archetype().layout().component_types());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2137,"byte_end":2225,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2226,"byte_end":2229,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // add an extra component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2230,"byte_end":2263,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/     entry.add_component(12f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2264,"byte_end":2299,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2300,"byte_end":2303,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     // access the entity's components, returns `None` if the entity does not have the component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2304,"byte_end":2403,"line_start":63,"line_end":63,"column_start":1,"column_end":100}},{"value":"/     assert_eq!(entry.get_component::<f32>().unwrap(), &12f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2404,"byte_end":2470,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2471,"byte_end":2476,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2477,"byte_end":2484,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2485,"byte_end":2488,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ See the [world module](world/index.html) for more information.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2489,"byte_end":2555,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2556,"byte_end":2559,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Queries","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2560,"byte_end":2574,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2575,"byte_end":2578,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Entries are not the most convenient or performant way to search or bulk-access a world. [Queries](query/index.html)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2579,"byte_end":2698,"line_start":72,"line_end":72,"column_start":1,"column_end":120}},{"value":"/ allow for high performance and expressive iteration through the entities in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2699,"byte_end":2787,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2788,"byte_end":2791,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2792,"byte_end":2799,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2800,"byte_end":2820,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/ # let world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2821,"byte_end":2856,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2857,"byte_end":2879,"line_start":78,"line_end":78,"column_start":1,"column_end":23}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2880,"byte_end":2902,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ // you define a query be declaring what components you want to find, and how you will access them","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":2903,"byte_end":3004,"line_start":80,"line_end":80,"column_start":1,"column_end":102}},{"value":"/ let mut query = Read::<Position>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3005,"byte_end":3051,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3052,"byte_end":3055,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // you can then iterate through the components found in the world","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3056,"byte_end":3125,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ for position in query.iter(&world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3126,"byte_end":3166,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", position);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3167,"byte_end":3202,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3203,"byte_end":3208,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3209,"byte_end":3216,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3217,"byte_end":3220,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ You can search for entities which have all of a set of components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3221,"byte_end":3291,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3292,"byte_end":3295,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3296,"byte_end":3303,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3304,"byte_end":3324,"line_start":92,"line_end":92,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3325,"byte_end":3364,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ # struct Position { x: f32, y: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3365,"byte_end":3405,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/ # struct Velocity { x: f32, y: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3406,"byte_end":3446,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/ // construct a query from a \"view tuple\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3447,"byte_end":3491,"line_start":96,"line_end":96,"column_start":1,"column_end":45}},{"value":"/ let mut query = <(&Velocity, &mut Position)>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3492,"byte_end":3550,"line_start":97,"line_end":97,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3551,"byte_end":3554,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // this time we have &Velocity and &mut Position","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3555,"byte_end":3607,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ for (velocity, position) in query.iter_mut(&mut world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3608,"byte_end":3668,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/     position.x += velocity.x;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3669,"byte_end":3702,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/     position.y += velocity.y;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3703,"byte_end":3736,"line_start":102,"line_end":102,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3737,"byte_end":3742,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3743,"byte_end":3750,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3751,"byte_end":3754,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ You can augment a basic query with additional filters. For example, you can choose to exclude","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3755,"byte_end":3852,"line_start":106,"line_end":106,"column_start":1,"column_end":98}},{"value":"/ entities which also have a certain component, or only include entities for which a certain","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3853,"byte_end":3947,"line_start":107,"line_end":107,"column_start":1,"column_end":95}},{"value":"/ component has changed since the last time the query ran (this filtering is conservative and course-grained)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":3948,"byte_end":4059,"line_start":108,"line_end":108,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4060,"byte_end":4063,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4064,"byte_end":4071,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4072,"byte_end":4092,"line_start":111,"line_end":111,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4093,"byte_end":4132,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/ # struct Position { x: f32, y: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4133,"byte_end":4173,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/ # struct Velocity { dx: f32, dy: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4174,"byte_end":4216,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"/ # struct Ignore;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4217,"byte_end":4237,"line_start":115,"line_end":115,"column_start":1,"column_end":21}},{"value":"/ // you can use boolean expressions when adding filters","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4238,"byte_end":4296,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/ let mut query = <(&Velocity, &mut Position)>::query()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4297,"byte_end":4354,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"/     .filter(!component::<Ignore>() & maybe_changed::<Position>());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4355,"byte_end":4425,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4426,"byte_end":4429,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ for (velocity, position) in query.iter_mut(&mut world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4430,"byte_end":4490,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/     position.x += velocity.dx;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4491,"byte_end":4525,"line_start":121,"line_end":121,"column_start":1,"column_end":35}},{"value":"/     position.y += velocity.dy;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4526,"byte_end":4560,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4561,"byte_end":4566,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4567,"byte_end":4574,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4575,"byte_end":4578,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ There is much more than can be done with queries. See [query](query/struct.Query.html) for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4579,"byte_end":4673,"line_start":126,"line_end":126,"column_start":1,"column_end":95}},{"value":"/ more information.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4674,"byte_end":4695,"line_start":127,"line_end":127,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4696,"byte_end":4699,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Systems","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4700,"byte_end":4714,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4715,"byte_end":4718,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ You may have noticed that when we wanted to write to a component, we needed to use `iter_mut` to iterate through our query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4719,"byte_end":4846,"line_start":131,"line_end":131,"column_start":1,"column_end":128}},{"value":"/ But perhaps your application wants to be able to process different components on different entities, perhaps even at the same","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4847,"byte_end":4976,"line_start":132,"line_end":132,"column_start":1,"column_end":130}},{"value":"/ time in parallel? While it is possible to do this manually (see [World](world/struct.World.html)::split), this is very difficult","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":4977,"byte_end":5109,"line_start":133,"line_end":133,"column_start":1,"column_end":133}},{"value":"/ to do when the different pieces of the application don't know what components each other need, or might or might not even have","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5110,"byte_end":5240,"line_start":134,"line_end":134,"column_start":1,"column_end":131}},{"value":"/ conflicting access requirements.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5241,"byte_end":5277,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5278,"byte_end":5281,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Systems and the [Schedule](systems/struct.Schedule.html) automates this process, and can","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5282,"byte_end":5374,"line_start":137,"line_end":137,"column_start":1,"column_end":93}},{"value":"/ even schedule work at a more granular level than you can otherwise do manually.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5375,"byte_end":5458,"line_start":138,"line_end":138,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5459,"byte_end":5462,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ A system is a unit of work. Each system is defined as a function which is provided access to queries and shared","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5463,"byte_end":5578,"line_start":140,"line_end":140,"column_start":1,"column_end":116}},{"value":"/ [resources](systems/struct.Resources.html). These systems can then be appended to a schedule, which is a linear","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5579,"byte_end":5694,"line_start":141,"line_end":141,"column_start":1,"column_end":116}},{"value":"/ sequence of systems, ordered by when side effects (such as writes to components) should be observed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5695,"byte_end":5799,"line_start":142,"line_end":142,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5800,"byte_end":5803,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ The schedule will automatically parallelize the execution of all systems whilst maintaining the apparent order of execution from","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5804,"byte_end":5936,"line_start":144,"line_end":144,"column_start":1,"column_end":133}},{"value":"/ the perspective of each system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5937,"byte_end":5972,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5973,"byte_end":5976,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5977,"byte_end":5984,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"codegen\")] {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":5985,"byte_end":6020,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6021,"byte_end":6041,"line_start":149,"line_end":149,"column_start":1,"column_end":21}},{"value":"/ # struct Position { x: f32, y: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6042,"byte_end":6082,"line_start":150,"line_end":150,"column_start":1,"column_end":41}},{"value":"/ # struct Velocity { dx: f32, dy: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6083,"byte_end":6125,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/ # struct Time { elapsed_seconds: f32 }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6126,"byte_end":6168,"line_start":152,"line_end":152,"column_start":1,"column_end":43}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6169,"byte_end":6208,"line_start":153,"line_end":153,"column_start":1,"column_end":40}},{"value":"/ # let mut resources = Resources::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6209,"byte_end":6256,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/ # resources.insert(Time { elapsed_seconds: 0.0 });","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6257,"byte_end":6311,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/ // a system fn which loops through Position and Velocity components, and reads","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6312,"byte_end":6394,"line_start":156,"line_end":156,"column_start":1,"column_end":83}},{"value":"/ // the Time shared resource.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6395,"byte_end":6427,"line_start":157,"line_end":157,"column_start":1,"column_end":33}},{"value":"/ #[system(for_each)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6428,"byte_end":6451,"line_start":158,"line_end":158,"column_start":1,"column_end":24}},{"value":"/ fn update_positions(pos: &mut Position, vel: &Velocity, #[resource] time: &Time) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6452,"byte_end":6538,"line_start":159,"line_end":159,"column_start":1,"column_end":87}},{"value":"/     pos.x += vel.dx * time.elapsed_seconds;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6539,"byte_end":6586,"line_start":160,"line_end":160,"column_start":1,"column_end":48}},{"value":"/     pos.y += vel.dy * time.elapsed_seconds;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6587,"byte_end":6634,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6635,"byte_end":6640,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6641,"byte_end":6644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ // construct a schedule (you should do this on init)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6645,"byte_end":6701,"line_start":164,"line_end":164,"column_start":1,"column_end":57}},{"value":"/ let mut schedule = Schedule::builder()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6702,"byte_end":6744,"line_start":165,"line_end":165,"column_start":1,"column_end":43}},{"value":"/     .add_system(update_positions_system())","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6745,"byte_end":6791,"line_start":166,"line_end":166,"column_start":1,"column_end":47}},{"value":"/     .build();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6792,"byte_end":6809,"line_start":167,"line_end":167,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6810,"byte_end":6813,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ // run our schedule (you should do this each update)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6814,"byte_end":6870,"line_start":169,"line_end":169,"column_start":1,"column_end":57}},{"value":"/ schedule.execute(&mut world, &mut resources);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6871,"byte_end":6920,"line_start":170,"line_end":170,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6921,"byte_end":6928,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6929,"byte_end":6936,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6937,"byte_end":6940,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ See the [systems module](systems/index.html) and the [system proc macro](attr.system.html) for more information.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":6941,"byte_end":7057,"line_start":174,"line_end":174,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7058,"byte_end":7061,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ # Feature Flags","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7062,"byte_end":7081,"line_start":176,"line_end":176,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7082,"byte_end":7085,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Legion provides a few feature flags:  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7086,"byte_end":7128,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/ * `parallel` - Enables parallel iterators and parallel schedule execution via the rayon library. Enabled by default.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7129,"byte_end":7249,"line_start":179,"line_end":179,"column_start":1,"column_end":121}},{"value":"/ * `extended-tuple-impls` - Extends the maximum size of view and component tuples from 8 to 24, at the cost of increased compile times. Off by default.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7250,"byte_end":7404,"line_start":180,"line_end":180,"column_start":1,"column_end":155}},{"value":"/ * `serialize` - Enables the serde serialization module and associated functionality. Enabled by default.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7405,"byte_end":7513,"line_start":181,"line_end":181,"column_start":1,"column_end":109}},{"value":"/ * `crossbeam-events` - Implements the `EventSender` trait for crossbeam `Sender` channels, allowing them to be used for event subscriptions. Enabled by default.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7514,"byte_end":7678,"line_start":182,"line_end":182,"column_start":1,"column_end":165}},{"value":"/ * `codegen` - Enables the `#[system]` procedural macro. Enabled by default.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7679,"byte_end":7758,"line_start":183,"line_end":183,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":7},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":9976,"byte_end":9982,"line_start":32,"line_end":32,"column_start":10,"column_end":16},"name":"Output","qualname":"::internals::cons::ConsPrepend::Output","value":"type Output;","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Result of prepend\n","sig":null,"attributes":[{"value":"/ Result of prepend","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":9945,"byte_end":9966,"line_start":31,"line_end":31,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10395,"byte_end":10405,"line_start":52,"line_end":52,"column_start":11,"column_end":21},"name":"ConsAppend","qualname":"::internals::cons::ConsAppend","value":"ConsAppend<T>","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" Prepend a new type into a cons list\n","sig":null,"attributes":[{"value":"/ Prepend a new type into a cons list","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10345,"byte_end":10384,"line_start":51,"line_end":51,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10445,"byte_end":10451,"line_start":54,"line_end":54,"column_start":10,"column_end":16},"name":"Output","qualname":"::internals::cons::ConsAppend::Output","value":"type Output;","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Result of append\n","sig":null,"attributes":[{"value":"/ Result of append","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10415,"byte_end":10435,"line_start":53,"line_end":53,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10498,"byte_end":10504,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"append","qualname":"::internals::cons::ConsAppend::append","value":"pub fn append(Self, T) -> Self::Output","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Prepend to runtime cons value\n","sig":null,"attributes":[{"value":"/ Prepend to runtime cons value","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10457,"byte_end":10490,"line_start":55,"line_end":55,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10932,"byte_end":10943,"line_start":75,"line_end":75,"column_start":11,"column_end":22},"name":"ConsFlatten","qualname":"::internals::cons::ConsFlatten","value":"ConsFlatten","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" transform cons list into a flat tuple\n","sig":null,"attributes":[{"value":"/ transform cons list into a flat tuple","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10880,"byte_end":10921,"line_start":74,"line_end":74,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10979,"byte_end":10985,"line_start":77,"line_end":77,"column_start":10,"column_end":16},"name":"Output","qualname":"::internals::cons::ConsFlatten::Output","value":"type Output;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Flattened tuple\n","sig":null,"attributes":[{"value":"/ Flattened tuple","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10950,"byte_end":10969,"line_start":76,"line_end":76,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":11029,"byte_end":11036,"line_start":79,"line_end":79,"column_start":8,"column_end":15},"name":"flatten","qualname":"::internals::cons::ConsFlatten::flatten","value":"pub fn flatten(Self) -> Self::Output","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Flatten runtime cons value\n","sig":null,"attributes":[{"value":"/ Flatten runtime cons value","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/cons.rs","byte_start":10991,"byte_end":11021,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6261},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":13493,"byte_end":13499,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Entity","qualname":"::internals::entity::Entity","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque identifier for an entity.\n","sig":null,"attributes":[{"value":"/ An opaque identifier for an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":13377,"byte_end":13416,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":13461,"byte_end":13481,"line_start":15,"line_end":15,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":6281},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14044,"byte_end":14052,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"Allocate","qualname":"::internals::entity::Allocate","value":"Allocate {  }","parent":null,"children":[{"krate":0,"index":6282},{"krate":0,"index":6283}],"decl_id":null,"docs":" An iterator which yields new entity IDs.\n","sig":null,"attributes":[{"value":"/ An iterator which yields new entity IDs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":13971,"byte_end":14015,"line_start":36,"line_end":36,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14170,"byte_end":14173,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Allocate>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new enity ID allocator iterator.\n","sig":null,"attributes":[{"value":"/ Constructs a new enity ID allocator iterator.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14109,"byte_end":14158,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6286},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14762,"byte_end":14776,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"EntityLocation","qualname":"::internals::entity::EntityLocation","value":"","parent":null,"children":[],"decl_id":null,"docs":" The storage location of an entity's data.\n","sig":null,"attributes":[{"value":"/ The storage location of an entity's data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14675,"byte_end":14720,"line_start":71,"line_end":71,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14908,"byte_end":14911,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<EntityLocation>::new","value":"pub fn new(ArchetypeIndex, ComponentIndex) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new entity location.\n","sig":null,"attributes":[{"value":"/ Constructs a new entity location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14859,"byte_end":14896,"line_start":76,"line_end":76,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15085,"byte_end":15094,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"archetype","qualname":"<EntityLocation>::archetype","value":"pub fn archetype(&Self) -> ArchetypeIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's archetype index.\n","sig":null,"attributes":[{"value":"/ Returns the entity's archetype index.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15032,"byte_end":15073,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15222,"byte_end":15231,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"component","qualname":"<EntityLocation>::component","value":"pub fn component(&Self) -> ComponentIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's component index within its archetype.\n","sig":null,"attributes":[{"value":"/ Returns the entity's component index within its archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15148,"byte_end":15210,"line_start":86,"line_end":86,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15331,"byte_end":15343,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"name":"EntityHasher","qualname":"::internals::entity::EntityHasher","value":"BuildHasherDefault<U64Hasher>","parent":null,"children":[],"decl_id":null,"docs":" A hasher optimized for entity IDs.\n","sig":null,"attributes":[{"value":"/ A hasher optimized for entity IDs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15283,"byte_end":15321,"line_start":92,"line_end":92,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6295},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15467,"byte_end":15478,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"LocationMap","qualname":"::internals::entity::LocationMap","value":"LocationMap {  }","parent":null,"children":[{"krate":0,"index":6296},{"krate":0,"index":6297}],"decl_id":null,"docs":" A map of entity IDs to their storage locations.\n","sig":null,"attributes":[{"value":"/ A map of entity IDs to their storage locations.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15378,"byte_end":15429,"line_start":95,"line_end":95,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16053,"byte_end":16056,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"len","qualname":"<LocationMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entities in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of entities in the map.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15995,"byte_end":16041,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16163,"byte_end":16171,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LocationMap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the location map is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the location map is empty.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16103,"byte_end":16151,"line_start":119,"line_end":119,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16301,"byte_end":16309,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"contains","qualname":"<LocationMap>::contains","value":"pub fn contains(&Self, Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the location map contains the given entity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the location map contains the given entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16224,"byte_end":16289,"line_start":124,"line_end":124,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16470,"byte_end":16476,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"insert","qualname":"<LocationMap>::insert","value":"pub fn insert(&mut Self, &[Entity], ArchetypeIndex, ComponentIndex)\n-> Vec<EntityLocation>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an collection of adjacent entities into the location map.\n","sig":null,"attributes":[{"value":"/ Inserts an collection of adjacent entities into the location map.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":16389,"byte_end":16458,"line_start":129,"line_end":129,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":17581,"byte_end":17584,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"set","qualname":"<LocationMap>::set","value":"pub fn set(&mut Self, Entity, EntityLocation)","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates the location of an entity.\n","sig":null,"attributes":[{"value":"/ Inserts or updates the location of an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":17520,"byte_end":17569,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":17777,"byte_end":17780,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"get","qualname":"<LocationMap>::get","value":"pub fn get(&Self, Entity) -> Option<EntityLocation>","parent":null,"children":[],"decl_id":null,"docs":" Returns the location of an entity.\n","sig":null,"attributes":[{"value":"/ Returns the location of an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":17727,"byte_end":17765,"line_start":166,"line_end":166,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":18147,"byte_end":18153,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"remove","qualname":"<LocationMap>::remove","value":"pub fn remove(&mut Self, Entity) -> Option<EntityLocation>","parent":null,"children":[],"decl_id":null,"docs":" Removes an entity from the location map.\n","sig":null,"attributes":[{"value":"/ Removes an entity from the location map.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":18091,"byte_end":18135,"line_start":177,"line_end":177,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6304},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19499,"byte_end":19507,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::internals::entry::ComponentError::NotFound","value":"ComponentError::NotFound { component_type, component_name }","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" The component was not found on the entity.\n","sig":null,"attributes":[{"value":"/ The component was not found on the entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19373,"byte_end":19419,"line_start":19,"line_end":19,"column_start":5,"column_end":51}},{"value":"error(\"the component {component_name} was not found on the entity\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19424,"byte_end":19494,"line_start":20,"line_end":20,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":6307},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20045,"byte_end":20051,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Denied","qualname":"::internals::entry::ComponentError::Denied","value":"ComponentError::Denied { component_type, component_name }","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" The world does not allow access to the component.\n","sig":null,"attributes":[{"value":"/ The world does not allow access to the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19687,"byte_end":19740,"line_start":28,"line_end":28,"column_start":5,"column_end":58}},{"value":"error(\"the world does not declare appropriate access to {component_name}, \\\n            consider adding a query which contains `{component_name}` and this entity in its result set to the system, \\\n            or use `SystemBuilder::read_component` to declare global access over all entities\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19745,"byte_end":20040,"line_start":29,"line_end":31,"column_start":5,"column_end":97}}]},{"kind":"Enum","id":{"krate":0,"index":6303},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19352,"byte_end":19366,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"ComponentError","qualname":"::internals::entry::ComponentError","value":"pub enum ComponentError {\n    NotFound {\n        component_type: ComponentTypeId,\n        component_name: &'static str,\n    },\n    Denied {\n        component_type: ComponentTypeId,\n        component_name: &'static str,\n    },\n}","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6307}],"decl_id":null,"docs":" An error type which describes why an attempt to retrieve a component failed.\n","sig":null,"attributes":[{"value":"/ An error type which describes why an attempt to retrieve a component failed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":19208,"byte_end":19288,"line_start":16,"line_end":16,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20302,"byte_end":20310,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"EntryRef","qualname":"::internals::entry::EntryRef","value":"EntryRef {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" Provides safe read-only access to an entity's components.\n","sig":null,"attributes":[{"value":"/ Provides safe read-only access to an entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20229,"byte_end":20290,"line_start":40,"line_end":40,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20908,"byte_end":20917,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"archetype","qualname":"<EntryRef>::archetype","value":"pub fn archetype(&Self) -> &Archetype","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's archetype.\n","sig":null,"attributes":[{"value":"/ Returns the entity's archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20861,"byte_end":20896,"line_start":63,"line_end":63,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":21050,"byte_end":21058,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"location","qualname":"<EntryRef>::location","value":"pub fn location(&Self) -> EntityLocation","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's location.\n","sig":null,"attributes":[{"value":"/ Returns the entity's location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":21004,"byte_end":21038,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":21189,"byte_end":21203,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"into_component","qualname":"<EntryRef>::into_component","value":"pub fn into_component<T: Component>(Self) -> Result<&'a T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":21119,"byte_end":21177,"line_start":73,"line_end":73,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":22267,"byte_end":22291,"line_start":100,"line_end":100,"column_start":19,"column_end":43},"name":"into_component_unchecked","qualname":"<EntryRef>::into_component_unchecked","value":"pub unsafe fn into_component_unchecked<T: Component>(Self)\n-> Result<&'a mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":22013,"byte_end":22079,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":22084,"byte_end":22087,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":22092,"byte_end":22104,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/ This function bypasses static borrow checking. The caller must ensure that the component reference","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":22109,"byte_end":22211,"line_start":98,"line_end":98,"column_start":5,"column_end":107}},{"value":"/ will not be mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":22216,"byte_end":22248,"line_start":99,"line_end":99,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":23199,"byte_end":23212,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"get_component","qualname":"<EntryRef>::get_component","value":"pub fn get_component<T: Component>(&Self) -> Result<&T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":23129,"byte_end":23187,"line_start":123,"line_end":123,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":24274,"byte_end":24297,"line_start":150,"line_end":150,"column_start":19,"column_end":42},"name":"get_component_unchecked","qualname":"<EntryRef>::get_component_unchecked","value":"pub unsafe fn get_component_unchecked<T: Component>(&Self)\n-> Result<&mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":24020,"byte_end":24086,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":24091,"byte_end":24094,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":24099,"byte_end":24111,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/ This function bypasses static borrow checking. The caller must ensure that the component reference","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":24116,"byte_end":24218,"line_start":148,"line_end":148,"column_start":5,"column_end":107}},{"value":"/ will not be mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":24223,"byte_end":24255,"line_start":149,"line_end":149,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":191},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25194,"byte_end":25202,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"EntryMut","qualname":"::internals::entry::EntryMut","value":"EntryMut {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" Provides safe read and write access to an entity's components.\n","sig":null,"attributes":[{"value":"/ Provides safe read and write access to an entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25116,"byte_end":25182,"line_start":172,"line_end":172,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25807,"byte_end":25816,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"archetype","qualname":"<EntryMut>::archetype","value":"pub fn archetype(&Self) -> &Archetype","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's archetype.\n","sig":null,"attributes":[{"value":"/ Returns the entity's archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25760,"byte_end":25795,"line_start":195,"line_end":195,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25949,"byte_end":25957,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"location","qualname":"<EntryMut>::location","value":"pub fn location(&Self) -> EntityLocation","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's location.\n","sig":null,"attributes":[{"value":"/ Returns the entity's location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25903,"byte_end":25937,"line_start":200,"line_end":200,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":26088,"byte_end":26102,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"into_component","qualname":"<EntryMut>::into_component","value":"pub fn into_component<T: Component>(Self) -> Result<&'a T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":26018,"byte_end":26076,"line_start":205,"line_end":205,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":27166,"byte_end":27190,"line_start":232,"line_end":232,"column_start":19,"column_end":43},"name":"into_component_unchecked","qualname":"<EntryMut>::into_component_unchecked","value":"pub unsafe fn into_component_unchecked<T: Component>(Self)\n-> Result<&'a mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":26912,"byte_end":26978,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":26983,"byte_end":26986,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":26991,"byte_end":27003,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/ This function bypasses static borrow checking. The caller must ensure that the component reference","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":27008,"byte_end":27110,"line_start":230,"line_end":230,"column_start":5,"column_end":107}},{"value":"/ will not be mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":27115,"byte_end":27147,"line_start":231,"line_end":231,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":28106,"byte_end":28124,"line_start":256,"line_end":256,"column_start":12,"column_end":30},"name":"into_component_mut","qualname":"<EntryMut>::into_component_mut","value":"pub fn into_component_mut<T: Component>(Self)\n-> Result<&'a mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":28028,"byte_end":28094,"line_start":255,"line_end":255,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":28446,"byte_end":28459,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"get_component","qualname":"<EntryMut>::get_component","value":"pub fn get_component<T: Component>(&Self) -> Result<&T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":28376,"byte_end":28434,"line_start":262,"line_end":262,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":29512,"byte_end":29535,"line_start":291,"line_end":291,"column_start":19,"column_end":42},"name":"get_component_unchecked","qualname":"<EntryMut>::get_component_unchecked","value":"pub unsafe fn get_component_unchecked<T: Component>(&Self)\n-> Result<&mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":29313,"byte_end":29379,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":29384,"byte_end":29387,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":29392,"byte_end":29404,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ The caller must ensure that the component reference will not be mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":29409,"byte_end":29493,"line_start":290,"line_end":290,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":30480,"byte_end":30497,"line_start":316,"line_end":316,"column_start":12,"column_end":29},"name":"get_component_mut","qualname":"<EntryMut>::get_component_mut","value":"pub fn get_component_mut<T: Component>(&mut Self)\n-> Result<&mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":30402,"byte_end":30468,"line_start":315,"line_end":315,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":30864,"byte_end":30869,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"Entry","qualname":"::internals::entry::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" Provides safe read and write access to an entity's components, and the ability to modify the entity.\n","sig":null,"attributes":[{"value":"/ Provides safe read and write access to an entity's components, and the ability to modify the entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":30748,"byte_end":30852,"line_start":323,"line_end":323,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31127,"byte_end":31136,"line_start":335,"line_end":335,"column_start":12,"column_end":21},"name":"archetype","qualname":"<Entry>::archetype","value":"pub fn archetype(&Self) -> &Archetype","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's archetype.\n","sig":null,"attributes":[{"value":"/ Returns the entity's archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31080,"byte_end":31115,"line_start":334,"line_end":334,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31277,"byte_end":31285,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"location","qualname":"<Entry>::location","value":"pub fn location(&Self) -> EntityLocation","parent":null,"children":[],"decl_id":null,"docs":" Returns the entity's location.\n","sig":null,"attributes":[{"value":"/ Returns the entity's location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31231,"byte_end":31265,"line_start":339,"line_end":339,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31416,"byte_end":31430,"line_start":345,"line_end":345,"column_start":12,"column_end":26},"name":"into_component","qualname":"<Entry>::into_component","value":"pub fn into_component<T: Component>(Self) -> Result<&'a T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31346,"byte_end":31404,"line_start":344,"line_end":344,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32077,"byte_end":32095,"line_start":360,"line_end":360,"column_start":12,"column_end":30},"name":"into_component_mut","qualname":"<Entry>::into_component_mut","value":"pub fn into_component_mut<T: Component>(Self)\n-> Result<&'a mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":31999,"byte_end":32065,"line_start":359,"line_end":359,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32547,"byte_end":32571,"line_start":370,"line_end":370,"column_start":19,"column_end":43},"name":"into_component_unchecked","qualname":"<Entry>::into_component_unchecked","value":"pub unsafe fn into_component_unchecked<T: Component>(Self)\n-> Result<&'a mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32293,"byte_end":32359,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32364,"byte_end":32367,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32372,"byte_end":32384,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/ This function bypasses static borrow checking. The caller must ensure that the component reference","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32389,"byte_end":32491,"line_start":368,"line_end":368,"column_start":5,"column_end":107}},{"value":"/ will not be mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":32496,"byte_end":32528,"line_start":369,"line_end":369,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":33237,"byte_end":33250,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"get_component","qualname":"<Entry>::get_component","value":"pub fn get_component<T: Component>(&Self) -> Result<&T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":33167,"byte_end":33225,"line_start":386,"line_end":386,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":33895,"byte_end":33912,"line_start":402,"line_end":402,"column_start":12,"column_end":29},"name":"get_component_mut","qualname":"<Entry>::get_component_mut","value":"pub fn get_component_mut<T: Component>(&mut Self)\n-> Result<&mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":33817,"byte_end":33883,"line_start":401,"line_end":401,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34365,"byte_end":34388,"line_start":412,"line_end":412,"column_start":19,"column_end":42},"name":"get_component_unchecked","qualname":"<Entry>::get_component_unchecked","value":"pub unsafe fn get_component_unchecked<T: Component>(&Self)\n-> Result<&mut T, ComponentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to one of the entity's components.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one of the entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34111,"byte_end":34177,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34182,"byte_end":34185,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34190,"byte_end":34202,"line_start":409,"line_end":409,"column_start":5,"column_end":17}},{"value":"/ This function bypasses static borrow checking. The caller must ensure that the component reference","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34207,"byte_end":34309,"line_start":410,"line_end":410,"column_start":5,"column_end":107}},{"value":"/ will not be mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34314,"byte_end":34346,"line_start":411,"line_end":411,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":35087,"byte_end":35100,"line_start":428,"line_end":428,"column_start":12,"column_end":25},"name":"add_component","qualname":"<Entry>::add_component","value":"pub fn add_component<T: Component>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Adds a new component to the entity.\n If the component already exists, its value will be replaced.\n","sig":null,"attributes":[{"value":"/ Adds a new component to the entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":34967,"byte_end":35006,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/ If the component already exists, its value will be replaced.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":35011,"byte_end":35075,"line_start":427,"line_end":427,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":36359,"byte_end":36375,"line_start":463,"line_end":463,"column_start":12,"column_end":28},"name":"remove_component","qualname":"<Entry>::remove_component","value":"pub fn remove_component<T: Component>(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes a component from the entity.\n Does nothing if the entity does not have the component.\n","sig":null,"attributes":[{"value":"/ Removes a component from the entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":36243,"byte_end":36283,"line_start":461,"line_end":461,"column_start":5,"column_end":45}},{"value":"/ Does nothing if the entity does not have the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":36288,"byte_end":36347,"line_start":462,"line_end":462,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6342},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41386,"byte_end":41402,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"ArchetypeCreated","qualname":"::internals::event::Event::ArchetypeCreated","value":"Event::ArchetypeCreated(ArchetypeIndex)","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":" A new archetype has been created.\n","sig":null,"attributes":[{"value":"/ A new archetype has been created.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41344,"byte_end":41381,"line_start":13,"line_end":13,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6345},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41479,"byte_end":41493,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"EntityInserted","qualname":"::internals::event::Event::EntityInserted","value":"Event::EntityInserted(Entity, ArchetypeIndex)","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":" An entity has been inserted into an archetype.\n","sig":null,"attributes":[{"value":"/ An entity has been inserted into an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41424,"byte_end":41474,"line_start":15,"line_end":15,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6349},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41577,"byte_end":41590,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"EntityRemoved","qualname":"::internals::event::Event::EntityRemoved","value":"Event::EntityRemoved(Entity, ArchetypeIndex)","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":" An entity has been removed from an archetype.\n","sig":null,"attributes":[{"value":"/ An entity has been removed from an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41523,"byte_end":41572,"line_start":17,"line_end":17,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":6341},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41332,"byte_end":41337,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Event","qualname":"::internals::event::Event","value":"pub enum Event {\n    ArchetypeCreated(ArchetypeIndex),\n    EntityInserted(Entity, ArchetypeIndex),\n    EntityRemoved(Entity, ArchetypeIndex),\n}","parent":null,"children":[{"krate":0,"index":6342},{"krate":0,"index":6345},{"krate":0,"index":6349}],"decl_id":null,"docs":" Events emitted by a world to subscribers. See `World.subscribe(Sender, EntityFilter)`.\n","sig":null,"attributes":[{"value":"/ Events emitted by a world to subscribers. See `World.subscribe(Sender, EntityFilter)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41208,"byte_end":41298,"line_start":10,"line_end":10,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41680,"byte_end":41691,"line_start":22,"line_end":22,"column_start":11,"column_end":22},"name":"EventSender","qualname":"::internals::event::EventSender","value":"EventSender: Send + Sync","parent":null,"children":[{"krate":0,"index":304}],"decl_id":null,"docs":" Describes a type which can send entity events.\n","sig":null,"attributes":[{"value":"/ Describes a type which can send entity events.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41619,"byte_end":41669,"line_start":21,"line_end":21,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41815,"byte_end":41819,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"send","qualname":"::internals::event::EventSender::send","value":"pub fn send(&Self, Event) -> bool","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Sends the given event to all listeners.\n Returns `true` if the sender is still alive.\n","sig":null,"attributes":[{"value":"/ Sends the given event to all listeners.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41711,"byte_end":41754,"line_start":23,"line_end":23,"column_start":5,"column_end":48}},{"value":"/ Returns `true` if the sender is still alive.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41759,"byte_end":41807,"line_start":24,"line_end":24,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6368},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44045,"byte_end":44066,"line_start":5,"line_end":5,"column_start":12,"column_end":33},"name":"ComponentTypeIdHasher","qualname":"::internals::hash::ComponentTypeIdHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" A hasher optimized for hashing component type IDs.\n","sig":null,"attributes":[{"value":"/ A hasher optimized for hashing component type IDs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":43960,"byte_end":44014,"line_start":3,"line_end":3,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6373},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44417,"byte_end":44426,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"U64Hasher","qualname":"::internals::hash::U64Hasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" A hasher optimized for hashing types that are represented as a u64.\n","sig":null,"attributes":[{"value":"/ A hasher optimized for hashing types that are represented as a u64.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44315,"byte_end":44386,"line_start":18,"line_end":18,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":45999,"byte_end":46014,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"ArchetypeWriter","qualname":"::internals::insert::ArchetypeWriter","value":"ArchetypeWriter {  }","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" Provides access to writers for writing new entities into an archetype in a world.","sig":null,"attributes":[{"value":"/ Provides access to writers for writing new entities into an archetype in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":45735,"byte_end":45820,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":45821,"byte_end":45824,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Users must claim all components contained in the archetype and write an equal number","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":45825,"byte_end":45913,"line_start":14,"line_end":14,"column_start":1,"column_end":89}},{"value":"/ of components to each as the number of entities pushed to the writer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":45914,"byte_end":45987,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":46250,"byte_end":46253,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<ArchetypeWriter>::new","value":"pub fn new(ArchetypeIndex, &'a mut Archetype, MultiMut) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new archetype writer.\n","sig":null,"attributes":[{"value":"/ Constructs a new archetype writer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":46200,"byte_end":46238,"line_start":25,"line_end":25,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":46648,"byte_end":46657,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"archetype","qualname":"<ArchetypeWriter>::archetype","value":"pub fn archetype(&Self) -> &Archetype","parent":null,"children":[],"decl_id":null,"docs":" Returns the archetype being written to.\n","sig":null,"attributes":[{"value":"/ Returns the archetype being written to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":46593,"byte_end":46636,"line_start":41,"line_end":41,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47389,"byte_end":47405,"line_start":64,"line_end":64,"column_start":12,"column_end":28},"name":"claim_components","qualname":"<ArchetypeWriter>::claim_components","value":"pub fn claim_components<T: Component>(&mut Self) -> ComponentWriter","parent":null,"children":[],"decl_id":null,"docs":" Claims a component storage for a given component.","sig":null,"attributes":[{"value":"/ Claims a component storage for a given component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47167,"byte_end":47220,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47225,"byte_end":47228,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47233,"byte_end":47245,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/ Panics if the storage for the requested component type has already been claimed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47250,"byte_end":47333,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ or does not exist in the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47338,"byte_end":47377,"line_start":63,"line_end":63,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47929,"byte_end":47953,"line_start":79,"line_end":79,"column_start":12,"column_end":36},"name":"claim_components_unknown","qualname":"<ArchetypeWriter>::claim_components_unknown","value":"pub fn claim_components_unknown(&mut Self, ComponentTypeId)\n-> UnknownComponentWriter","parent":null,"children":[],"decl_id":null,"docs":" Claims a component storage for a given component.","sig":null,"attributes":[{"value":"/ Claims a component storage for a given component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47707,"byte_end":47760,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47765,"byte_end":47768,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47773,"byte_end":47785,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/ Panics if the storage for the requested component type has already been claimed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47790,"byte_end":47873,"line_start":77,"line_end":77,"column_start":5,"column_end":88}},{"value":"/ or does not exist in the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":47878,"byte_end":47917,"line_start":78,"line_end":78,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48316,"byte_end":48320,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"push","qualname":"<ArchetypeWriter>::push","value":"pub fn push(&mut Self, Entity)","parent":null,"children":[],"decl_id":null,"docs":" Pushes an entity ID into the archetype.\n","sig":null,"attributes":[{"value":"/ Pushes an entity ID into the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48261,"byte_end":48304,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48492,"byte_end":48499,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"reserve","qualname":"<ArchetypeWriter>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` extra entity IDs in the archetype.\n","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` extra entity IDs in the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48398,"byte_end":48480,"line_start":96,"line_end":96,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48708,"byte_end":48716,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"inserted","qualname":"<ArchetypeWriter>::inserted","value":"pub fn inserted(&Self) -> (ComponentIndex, &[Entity])","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of entities inserted by this writer, and the component index of the first inserted entity.\n","sig":null,"attributes":[{"value":"/ Returns a slice of entities inserted by this writer, and the component index of the first inserted entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48586,"byte_end":48696,"line_start":101,"line_end":101,"column_start":5,"column_end":115}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49182,"byte_end":49197,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"ComponentWriter","qualname":"::internals::insert::ComponentWriter","value":"ComponentWriter {  }","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"decl_id":null,"docs":" Provides the ability to append new components to the entities in an archetype.\n","sig":null,"attributes":[{"value":"/ Provides the ability to append new components to the entities in an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49088,"byte_end":49170,"line_start":117,"line_end":117,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49864,"byte_end":49878,"line_start":132,"line_end":132,"column_start":19,"column_end":33},"name":"extend_memcopy","qualname":"<ComponentWriter>::extend_memcopy","value":"pub unsafe fn extend_memcopy(&mut Self, *const T, usize)","parent":null,"children":[],"decl_id":null,"docs":" Writes the given components into the component storage.","sig":null,"attributes":[{"value":"/ Writes the given components into the component storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49340,"byte_end":49399,"line_start":124,"line_end":124,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49404,"byte_end":49407,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49412,"byte_end":49424,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/ `ptr` must point to a valid array of `T` of length at least as long as `len`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49429,"byte_end":49510,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"/ The data in this array will be memcopied into the world's internal storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49515,"byte_end":49594,"line_start":128,"line_end":128,"column_start":5,"column_end":84}},{"value":"/ If the component type is not `Copy`, then the caller must ensure that the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49599,"byte_end":49683,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ copied is not accessed until it is re-initialized. It is recommended to immediately","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49688,"byte_end":49775,"line_start":130,"line_end":130,"column_start":5,"column_end":92}},{"value":"/ `std::mem::forget` the source after calling `extend_memcopy`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49780,"byte_end":49845,"line_start":131,"line_end":131,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50221,"byte_end":50236,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"ensure_capacity","qualname":"<ComponentWriter>::ensure_capacity","value":"pub fn ensure_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the given spare capacity is available in the target storage location.\n Calling this function before calling `extend_memcopy` is not required, but may\n avoid additional vector resizes.\n","sig":null,"attributes":[{"value":"/ Ensures that the given spare capacity is available in the target storage location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49995,"byte_end":50081,"line_start":136,"line_end":136,"column_start":5,"column_end":91}},{"value":"/ Calling this function before calling `extend_memcopy` is not required, but may","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50086,"byte_end":50168,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ avoid additional vector resizes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50173,"byte_end":50209,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50431,"byte_end":50453,"line_start":145,"line_end":145,"column_start":12,"column_end":34},"name":"UnknownComponentWriter","qualname":"::internals::insert::UnknownComponentWriter","value":"UnknownComponentWriter {  }","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" Provides the ability to append new components to the entities in an archetype.\n","sig":null,"attributes":[{"value":"/ Provides the ability to append new components to the entities in an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50337,"byte_end":50419,"line_start":144,"line_end":144,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51144,"byte_end":51162,"line_start":160,"line_end":160,"column_start":19,"column_end":37},"name":"extend_memcopy_raw","qualname":"<UnknownComponentWriter>::extend_memcopy_raw","value":"pub unsafe fn extend_memcopy_raw(&mut Self, *const u8, usize)","parent":null,"children":[],"decl_id":null,"docs":" Writes the given components into the component storage.","sig":null,"attributes":[{"value":"/ Writes the given components into the component storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50589,"byte_end":50648,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50653,"byte_end":50656,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50661,"byte_end":50673,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ `ptr` must point to a valid array of the correct component type of length at least as","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50678,"byte_end":50767,"line_start":154,"line_end":154,"column_start":5,"column_end":94}},{"value":"/ long as `len`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50772,"byte_end":50790,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ The data in this array will be memcopied into the world's internal storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50795,"byte_end":50874,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ If the component type is not `Copy`, then the caller must ensure that the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50879,"byte_end":50963,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ copied is not accessed until it is re-initialized. It is recommended to immediately","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50968,"byte_end":51055,"line_start":158,"line_end":158,"column_start":5,"column_end":92}},{"value":"/ `std::mem::forget` the source after calling `extend_memcopy`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51060,"byte_end":51125,"line_start":159,"line_end":159,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51510,"byte_end":51525,"line_start":167,"line_end":167,"column_start":12,"column_end":27},"name":"ensure_capacity","qualname":"<UnknownComponentWriter>::ensure_capacity","value":"pub fn ensure_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the given spare capacity is available in the target storage location.\n Calling this function before calling `extend_memcopy` is not required, but may\n avoid additional vector resizes.\n","sig":null,"attributes":[{"value":"/ Ensures that the given spare capacity is available in the target storage location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51284,"byte_end":51370,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/ Calling this function before calling `extend_memcopy` is not required, but may","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51375,"byte_end":51457,"line_start":165,"line_end":165,"column_start":5,"column_end":87}},{"value":"/ avoid additional vector resizes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51462,"byte_end":51498,"line_start":166,"line_end":166,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51731,"byte_end":51750,"line_start":172,"line_end":172,"column_start":12,"column_end":31},"name":"move_archetype_from","qualname":"<UnknownComponentWriter>::move_archetype_from","value":"pub fn move_archetype_from(&mut Self, ArchetypeIndex,\n                           &mut dyn UnknownComponentStorage)","parent":null,"children":[],"decl_id":null,"docs":" Moves all of the components from the given storage location into this writer's storage.\n","sig":null,"attributes":[{"value":"/ Moves all of the components from the given storage location into this writer's storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51628,"byte_end":51719,"line_start":171,"line_end":171,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52056,"byte_end":52075,"line_start":181,"line_end":181,"column_start":12,"column_end":31},"name":"move_component_from","qualname":"<UnknownComponentWriter>::move_component_from","value":"pub fn move_component_from(&mut Self, ArchetypeIndex, ComponentIndex,\n                           &mut dyn UnknownComponentStorage)","parent":null,"children":[],"decl_id":null,"docs":" Moves a single component from the given storage location into this writer's storage.\n","sig":null,"attributes":[{"value":"/ Moves a single component from the given storage location into this writer's storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":51956,"byte_end":52044,"line_start":180,"line_end":180,"column_start":5,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":422},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52468,"byte_end":52483,"line_start":197,"line_end":197,"column_start":11,"column_end":26},"name":"ArchetypeSource","qualname":"::internals::insert::ArchetypeSource","value":"ArchetypeSource","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"decl_id":null,"docs":" Defines a type which can describe the layout of an archetype.\n","sig":null,"attributes":[{"value":"/ Defines a type which can describe the layout of an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52392,"byte_end":52457,"line_start":196,"line_end":196,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":423},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52568,"byte_end":52574,"line_start":199,"line_end":199,"column_start":10,"column_end":16},"name":"Filter","qualname":"::internals::insert::ArchetypeSource::Filter","value":"type Filter: LayoutFilter;","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":" A filter which finds existing archetypes which match the layout.\n","sig":null,"attributes":[{"value":"/ A filter which finds existing archetypes which match the layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52490,"byte_end":52558,"line_start":198,"line_end":198,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52645,"byte_end":52651,"line_start":202,"line_end":202,"column_start":8,"column_end":14},"name":"filter","qualname":"::internals::insert::ArchetypeSource::filter","value":"pub fn filter(&Self) -> Self::Filter","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":" Returns the archetype source's filter.\n","sig":null,"attributes":[{"value":"/ Returns the archetype source's filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52595,"byte_end":52637,"line_start":201,"line_end":201,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52724,"byte_end":52730,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"layout","qualname":"::internals::insert::ArchetypeSource::layout","value":"pub fn layout(&mut Self) -> EntityLayout","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":" Constructs a new entity layout.\n","sig":null,"attributes":[{"value":"/ Constructs a new entity layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52681,"byte_end":52716,"line_start":204,"line_end":204,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":426},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52841,"byte_end":52856,"line_start":209,"line_end":209,"column_start":11,"column_end":26},"name":"ComponentSource","qualname":"::internals::insert::ComponentSource","value":"ComponentSource: ArchetypeSource","parent":null,"children":[{"krate":0,"index":427}],"decl_id":null,"docs":" Describes a type which can write entity components into a world.\n","sig":null,"attributes":[{"value":"/ Describes a type which can write entity components into a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52762,"byte_end":52830,"line_start":208,"line_end":208,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52945,"byte_end":52960,"line_start":211,"line_end":211,"column_start":8,"column_end":23},"name":"push_components","qualname":"::internals::insert::ComponentSource::push_components","value":"pub fn push_components<'a, impl Iterator<Item = Entity>: Iterator<Item =\n                       Entity>>(&mut Self, &mut ArchetypeWriter,\n                                impl Iterator<Item = Entity>)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Writes components for new entities into an archetype.\n","sig":null,"attributes":[{"value":"/ Writes components for new entities into an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52880,"byte_end":52937,"line_start":210,"line_end":210,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":430},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53133,"byte_end":53144,"line_start":219,"line_end":219,"column_start":11,"column_end":22},"name":"KnownLength","qualname":"::internals::insert::KnownLength","value":"KnownLength","parent":null,"children":[{"krate":0,"index":431}],"decl_id":null,"docs":" A collection with a known length.\n","sig":null,"attributes":[{"value":"/ A collection with a known length.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53085,"byte_end":53122,"line_start":218,"line_end":218,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53154,"byte_end":53157,"line_start":220,"line_end":220,"column_start":8,"column_end":11},"name":"len","qualname":"::internals::insert::KnownLength::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53262,"byte_end":53281,"line_start":224,"line_end":224,"column_start":11,"column_end":30},"name":"IntoComponentSource","qualname":"::internals::insert::IntoComponentSource","value":"IntoComponentSource","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"decl_id":null,"docs":" Converts a type into a [ComponentSource](trait.ComponentSource.html).\n","sig":null,"attributes":[{"value":"/ Converts a type into a [ComponentSource](trait.ComponentSource.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53178,"byte_end":53251,"line_start":223,"line_end":223,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":433},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53330,"byte_end":53336,"line_start":226,"line_end":226,"column_start":10,"column_end":16},"name":"Source","qualname":"::internals::insert::IntoComponentSource::Source","value":"type Source: ComponentSource;","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" The output component source.\n","sig":null,"attributes":[{"value":"/ The output component source.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53288,"byte_end":53320,"line_start":225,"line_end":225,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53420,"byte_end":53424,"line_start":229,"line_end":229,"column_start":8,"column_end":12},"name":"into","qualname":"::internals::insert::IntoComponentSource::into","value":"pub fn into(Self) -> Self::Source","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Converts this structure into a component source.\n","sig":null,"attributes":[{"value":"/ Converts this structure into a component source.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53360,"byte_end":53412,"line_start":228,"line_end":228,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53539,"byte_end":53542,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"name":"Soa","qualname":"::internals::insert::Soa","value":"Soa {  }","parent":null,"children":[{"krate":0,"index":437}],"decl_id":null,"docs":" A wrapper for a Structure of Arrays used for efficient entity insertion.\n","sig":null,"attributes":[{"value":"/ A wrapper for a Structure of Arrays used for efficient entity insertion.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53451,"byte_end":53527,"line_start":232,"line_end":232,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53620,"byte_end":53630,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"SoaElement","qualname":"::internals::insert::SoaElement","value":"SoaElement {  }","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":" A single vector component inside an SoA.\n","sig":null,"attributes":[{"value":"/ A single vector component inside an SoA.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53564,"byte_end":53608,"line_start":237,"line_end":237,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":451},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54196,"byte_end":54203,"line_start":259,"line_end":259,"column_start":11,"column_end":18},"name":"IntoSoa","qualname":"::internals::insert::IntoSoa","value":"IntoSoa","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" Desribes a type which can convert itself into an [SoA](trait.Soa.html)\n representation for entity intertion.\n","sig":null,"attributes":[{"value":"/ Desribes a type which can convert itself into an [SoA](trait.Soa.html)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54070,"byte_end":54144,"line_start":257,"line_end":257,"column_start":1,"column_end":75}},{"value":"/ representation for entity intertion.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54145,"byte_end":54185,"line_start":258,"line_end":258,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":452},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54249,"byte_end":54255,"line_start":261,"line_end":261,"column_start":10,"column_end":16},"name":"Source","qualname":"::internals::insert::IntoSoa::Source","value":"type Source;","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" The output entity source.\n","sig":null,"attributes":[{"value":"/ The output entity source.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54210,"byte_end":54239,"line_start":260,"line_end":260,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54317,"byte_end":54325,"line_start":264,"line_end":264,"column_start":8,"column_end":16},"name":"into_soa","qualname":"::internals::insert::IntoSoa::into_soa","value":"pub fn into_soa(Self) -> Self::Source","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" Converts this into an SoA component source.\n","sig":null,"attributes":[{"value":"/ Converts this into an SoA component source.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54262,"byte_end":54309,"line_start":263,"line_end":263,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54432,"byte_end":54435,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"Aos","qualname":"::internals::insert::Aos","value":"Aos {  }","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"decl_id":null,"docs":" A wrapper for an Array of Structures used for entity intertions.\n","sig":null,"attributes":[{"value":"/ A wrapper for an Array of Structures used for entity intertions.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54352,"byte_end":54420,"line_start":267,"line_end":267,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55096,"byte_end":55117,"line_start":300,"line_end":300,"column_start":12,"column_end":33},"name":"ComponentSourceFilter","qualname":"::internals::insert::ComponentSourceFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A layout filter used to select the appropriate archetype for interting\n entities from a component source into a world.\n","sig":null,"attributes":[{"value":"/ A layout filter used to select the appropriate archetype for interting","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54959,"byte_end":55033,"line_start":298,"line_end":298,"column_start":1,"column_end":75}},{"value":"/ entities from a component source into a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55034,"byte_end":55084,"line_start":299,"line_end":299,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":500},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":64908,"byte_end":64927,"line_start":3,"line_end":3,"column_start":18,"column_end":37},"name":"TrustedRandomAccess","qualname":"::internals::iter::indexed::TrustedRandomAccess","value":"TrustedRandomAccess: Sized","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":501},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":64946,"byte_end":64950,"line_start":4,"line_end":4,"column_start":10,"column_end":14},"name":"Item","qualname":"::internals::iter::indexed::TrustedRandomAccess::Item","value":"type Item;","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":64960,"byte_end":64963,"line_start":6,"line_end":6,"column_start":8,"column_end":11},"name":"len","qualname":"::internals::iter::indexed::TrustedRandomAccess::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":64995,"byte_end":65008,"line_start":7,"line_end":7,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::internals::iter::indexed::TrustedRandomAccess::get_unchecked","value":"pub unsafe fn get_unchecked(&mut Self, usize) -> Self::Item","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":65052,"byte_end":65060,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"split_at","qualname":"::internals::iter::indexed::TrustedRandomAccess::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7078},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":66052,"byte_end":66063,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"IndexedIter","qualname":"::internals::iter::indexed::IndexedIter","value":"IndexedIter {  }","parent":null,"children":[{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":7082}],"decl_id":null,"docs":" An iterator over an indexable slice.\n","sig":null,"attributes":[{"value":"/ An iterator over an indexable slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":65887,"byte_end":65927,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":65967,"byte_end":66040,"line_start":52,"line_end":52,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":66177,"byte_end":66180,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedIter<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":70949,"byte_end":70952,"line_start":236,"line_end":236,"column_start":16,"column_end":19},"name":"Par","qualname":"::internals::iter::indexed::par_iter::Par","value":"Par {  }","parent":null,"children":[{"krate":0,"index":589}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71073,"byte_end":71076,"line_start":241,"line_end":241,"column_start":16,"column_end":19},"name":"new","qualname":"<Par<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":625},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":75883,"byte_end":75887,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"name":"From","qualname":"::internals::iter::map::From","value":"From<T>","parent":null,"children":[{"krate":0,"index":627}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":75900,"byte_end":75904,"line_start":4,"line_end":4,"column_start":8,"column_end":12},"name":"from","qualname":"::internals::iter::map::From::from","value":"pub fn from(T) -> Self","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7570},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76283,"byte_end":76290,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"MapInto","qualname":"::internals::iter::map::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":7573},{"krate":0,"index":7574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76384,"byte_end":76387,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<MapInto<I, T>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7579},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/zip.rs","byte_start":79669,"byte_end":79672,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"Zip","qualname":"::internals::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":7581}],"decl_id":null,"docs":" An iterator which zips a tuple of iterators.\n","sig":null,"attributes":[{"value":"/ An iterator which zips a tuple of iterators.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/zip.rs","byte_start":79511,"byte_end":79559,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/zip.rs","byte_start":79584,"byte_end":79657,"line_start":45,"line_end":45,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8823},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83363,"byte_end":83374,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"Permissions","qualname":"::internals::permissions::Permissions","value":"Permissions {  }","parent":null,"children":[{"krate":0,"index":8825},{"krate":0,"index":8827},{"krate":0,"index":8828}],"decl_id":null,"docs":" Describes read and write access to resources.\n","sig":null,"attributes":[{"value":"/ Describes read and write access to resources.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83285,"byte_end":83334,"line_start":7,"line_end":7,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83615,"byte_end":83618,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Permissions<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new empty permissions set.\n","sig":null,"attributes":[{"value":"/ Constructs a new empty permissions set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83560,"byte_end":83603,"line_start":16,"line_end":16,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83942,"byte_end":83946,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"push","qualname":"<Permissions<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Adds a resource to the permissions set as both readable and writable.\n","sig":null,"attributes":[{"value":"/ Adds a resource to the permissions set as both readable and writable.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83857,"byte_end":83930,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":84762,"byte_end":84771,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"push_read","qualname":"<Permissions<T>>::push_read","value":"pub fn push_read(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Adds a resource to the permissions set as readable.\n","sig":null,"attributes":[{"value":"/ Adds a resource to the permissions set as readable.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":84695,"byte_end":84750,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":85699,"byte_end":85709,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"push_write","qualname":"<Permissions<T>>::push_write","value":"pub fn push_write(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Adds a resource to the permissions set as writable.\n","sig":null,"attributes":[{"value":"/ Adds a resource to the permissions set as writable.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":85632,"byte_end":85687,"line_start":79,"line_end":79,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":86144,"byte_end":86150,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"remove","qualname":"<Permissions<T>>::remove","value":"pub fn remove(&mut Self, &T)","parent":null,"children":[],"decl_id":null,"docs":" Removes a resource from the permissions set.\n","sig":null,"attributes":[{"value":"/ Removes a resource from the permissions set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":86084,"byte_end":86132,"line_start":93,"line_end":93,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":86809,"byte_end":86820,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"remove_read","qualname":"<Permissions<T>>::remove_read","value":"pub fn remove_read(&mut Self, &T)","parent":null,"children":[],"decl_id":null,"docs":" Removes read access to a resource from the permissions set.\n","sig":null,"attributes":[{"value":"/ Removes read access to a resource from the permissions set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":86734,"byte_end":86797,"line_start":114,"line_end":114,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":87548,"byte_end":87560,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"remove_write","qualname":"<Permissions<T>>::remove_write","value":"pub fn remove_write(&mut Self, &T)","parent":null,"children":[],"decl_id":null,"docs":" Removes write access to a resource from the permissions set.\n","sig":null,"attributes":[{"value":"/ Removes write access to a resource from the permissions set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":87472,"byte_end":87536,"line_start":136,"line_end":136,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":88041,"byte_end":88044,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"add","qualname":"<Permissions<T>>::add","value":"pub fn add(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds all of the permissions contained in the given set to this permission set.\n","sig":null,"attributes":[{"value":"/ Adds all of the permissions contained in the given set to this permission set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":87947,"byte_end":88029,"line_start":150,"line_end":150,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":88495,"byte_end":88503,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"subtract","qualname":"<Permissions<T>>::subtract","value":"pub fn subtract(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts all of the permissions contained in the given set from this permission set.\n","sig":null,"attributes":[{"value":"/ Subtracts all of the permissions contained in the given set from this permission set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":88394,"byte_end":88483,"line_start":165,"line_end":165,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":88880,"byte_end":88885,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"reads","qualname":"<Permissions<T>>::reads","value":"pub fn reads(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets a slice of resources which are afforded read access.\n","sig":null,"attributes":[{"value":"/ Gets a slice of resources which are afforded read access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":88807,"byte_end":88868,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89022,"byte_end":89028,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"writes","qualname":"<Permissions<T>>::writes","value":"pub fn writes(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets a slice of resources which are afforded write access.\n","sig":null,"attributes":[{"value":"/ Gets a slice of resources which are afforded write access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":88948,"byte_end":89010,"line_start":185,"line_end":185,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89186,"byte_end":89196,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"reads_only","qualname":"<Permissions<T>>::reads_only","value":"pub fn reads_only(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets a slice of resources which are afforded read access but not write access.\n","sig":null,"attributes":[{"value":"/ Gets a slice of resources which are afforded read access but not write access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89092,"byte_end":89174,"line_start":190,"line_end":190,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89354,"byte_end":89365,"line_start":196,"line_end":196,"column_start":12,"column_end":23},"name":"writes_only","qualname":"<Permissions<T>>::writes_only","value":"pub fn writes_only(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets a slice of resources which are afforded write access but not read access.\n","sig":null,"attributes":[{"value":"/ Gets a slice of resources which are afforded write access but not read access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89260,"byte_end":89342,"line_start":195,"line_end":195,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89516,"byte_end":89525,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"readwrite","qualname":"<Permissions<T>>::readwrite","value":"pub fn readwrite(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Gets a slice of resources which are afforded both read and write access.\n","sig":null,"attributes":[{"value":"/ Gets a slice of resources which are afforded both read and write access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89428,"byte_end":89504,"line_start":200,"line_end":200,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89699,"byte_end":89710,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<Permissions<T>>::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all of the permissions in the given set are contained in this set.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all of the permissions in the given set are contained in this set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":89599,"byte_end":89687,"line_start":205,"line_end":205,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":90703,"byte_end":90714,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<Permissions<T>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if none of the permissions in the given set are contained in this set.\n","sig":null,"attributes":[{"value":"/ Returns `true` if none of the permissions in the given set are contained in this set.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":90602,"byte_end":90691,"line_start":235,"line_end":235,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":8832},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/and.rs","byte_start":148487,"byte_end":148490,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"And","qualname":"::internals::query::filter::and::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":8834}],"decl_id":null,"docs":" A filter which requires all filters within `T` match.\n","sig":null,"attributes":[{"value":"/ A filter which requires all filters within `T` match.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/and.rs","byte_start":148394,"byte_end":148451,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9433},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":152800,"byte_end":152803,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Any","qualname":"::internals::query::filter::any::Any","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter which always matches `true`.\n","sig":null,"attributes":[{"value":"/ A filter which always matches `true`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":152714,"byte_end":152755,"line_start":7,"line_end":7,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9441},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154505,"byte_end":154520,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ComponentFilter","qualname":"::internals::query::filter::component::ComponentFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter which matches `true` when the given component exists in the archetype.\n","sig":null,"attributes":[{"value":"/ A filter which matches `true` when the given component exists in the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154393,"byte_end":154476,"line_start":8,"line_end":8,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":9448},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":156928,"byte_end":156950,"line_start":12,"line_end":12,"column_start":12,"column_end":34},"name":"ComponentChangedFilter","qualname":"::internals::query::filter::maybe_changed::ComponentChangedFilter","value":"ComponentChangedFilter {  }","parent":null,"children":[{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9452},{"krate":0,"index":9453},{"krate":0,"index":9454}],"decl_id":null,"docs":" A filter which performs course-grained change detection.","sig":null,"attributes":[{"value":"/ A filter which performs course-grained change detection.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":156743,"byte_end":156803,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":156804,"byte_end":156807,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This filter will reject _most_ components which have not","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":156808,"byte_end":156868,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/ been changed, but not all.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":156869,"byte_end":156899,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":9458},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":159957,"byte_end":159960,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Not","qualname":"::internals::query::filter::not::Not","value":"Not {  }","parent":null,"children":[{"krate":0,"index":9460}],"decl_id":null,"docs":" A filter which negates `F`.\n","sig":null,"attributes":[{"value":"/ A filter which negates `F`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":159881,"byte_end":159912,"line_start":7,"line_end":7,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":9470},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/or.rs","byte_start":162156,"byte_end":162158,"line_start":9,"line_end":9,"column_start":12,"column_end":14},"name":"Or","qualname":"::internals::query::filter::or::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":9472}],"decl_id":null,"docs":" A filter which requires any filter within `T` match.\n","sig":null,"attributes":[{"value":"/ A filter which requires any filter within `T` match.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/or.rs","byte_start":162064,"byte_end":162120,"line_start":7,"line_end":7,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":10071},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166221,"byte_end":166232,"line_start":6,"line_end":6,"column_start":12,"column_end":23},"name":"Passthrough","qualname":"::internals::query::filter::passthrough::Passthrough","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter which always defers.\n","sig":null,"attributes":[{"value":"/ A filter which always defers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166143,"byte_end":166176,"line_start":4,"line_end":4,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":10079},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167599,"byte_end":167617,"line_start":11,"line_end":11,"column_start":12,"column_end":30},"name":"TryComponentFilter","qualname":"::internals::query::filter::try_component::TryComponentFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter which matches `true` if the entity has the given component,\n else it will defer.\n","sig":null,"attributes":[{"value":"/ A filter which matches `true` if the entity has the given component,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167474,"byte_end":167546,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ else it will defer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167547,"byte_end":167570,"line_start":9,"line_end":9,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140546,"byte_end":140555,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"component","qualname":"::internals::query::filter::filter_fns::component","value":"pub fn component<T: Component>()\n-> EntityFilterTuple<ComponentFilter<T>, Passthrough>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a filter which requires that the entities have the given component.\n","sig":null,"attributes":[{"value":"/ Constructs a filter which requires that the entities have the given component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140452,"byte_end":140534,"line_start":22,"line_end":22,"column_start":5,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140985,"byte_end":140998,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"maybe_changed","qualname":"::internals::query::filter::filter_fns::maybe_changed","value":"pub fn maybe_changed<T: Component>()\n-> EntityFilterTuple<TryComponentFilter<T>, ComponentChangedFilter<T>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a filter which requires that the component cannot be certain to have not changed.","sig":null,"attributes":[{"value":"/ Constructs a filter which requires that the component cannot be certain to have not changed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140666,"byte_end":140762,"line_start":27,"line_end":27,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140767,"byte_end":140770,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This check is course grained and should be used to reject the majority of entities which have","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140775,"byte_end":140872,"line_start":29,"line_end":29,"column_start":5,"column_end":102}},{"value":"/ not changed, but not all entities passed by the filter are guarenteed to have been modified.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":140877,"byte_end":140973,"line_start":30,"line_end":30,"column_start":5,"column_end":101}}]},{"kind":"Function","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141193,"byte_end":141196,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"any","qualname":"::internals::query::filter::filter_fns::any","value":"pub fn any() -> EntityFilterTuple<Any, Any>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a filter which passes all entities.\n","sig":null,"attributes":[{"value":"/ Constructs a filter which passes all entities.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141131,"byte_end":141181,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141375,"byte_end":141386,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"passthrough","qualname":"::internals::query::filter::filter_fns::passthrough","value":"pub fn passthrough() -> EntityFilterTuple<Passthrough, Passthrough>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a filter which performs a no-op and defers to any filters it is combined with.\n","sig":null,"attributes":[{"value":"/ Constructs a filter which performs a no-op and defers to any filters it is combined with.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141270,"byte_end":141363,"line_start":41,"line_end":41,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141646,"byte_end":141651,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Match","qualname":"::internals::query::filter::FilterResult::Match","value":"FilterResult::Match(bool)","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" The filter has made a decision, `true` for accept, `false` for reject.\n","sig":null,"attributes":[{"value":"/ The filter has made a decision, `true` for accept, `false` for reject.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141567,"byte_end":141641,"line_start":49,"line_end":49,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141731,"byte_end":141736,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Defer","qualname":"::internals::query::filter::FilterResult::Defer","value":"FilterResult::Defer","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" The filter has not made a decision, defer to other filters.\n","sig":null,"attributes":[{"value":"/ The filter has not made a decision, defer to other filters.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141663,"byte_end":141726,"line_start":51,"line_end":51,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141548,"byte_end":141560,"line_start":48,"line_end":48,"column_start":10,"column_end":22},"name":"FilterResult","qualname":"::internals::query::filter::FilterResult","value":"pub enum FilterResult { Match(bool), Defer, }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1336}],"decl_id":null,"docs":" Indicates if an an archetype should be accepted or rejected.\n","sig":null,"attributes":[{"value":"/ Indicates if an an archetype should be accepted or rejected.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141474,"byte_end":141538,"line_start":47,"line_end":47,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141843,"byte_end":141855,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"coalesce_and","qualname":"<FilterResult>::coalesce_and","value":"pub fn coalesce_and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combines the result with a logical and operator.\n","sig":null,"attributes":[{"value":"/ Combines the result with a logical and operator.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141765,"byte_end":141817,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141822,"byte_end":141831,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142241,"byte_end":142252,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"coalesce_or","qualname":"<FilterResult>::coalesce_or","value":"pub fn coalesce_or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combines the result with a logical or operator.\n","sig":null,"attributes":[{"value":"/ Combines the result with a logical or operator.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142164,"byte_end":142215,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142220,"byte_end":142229,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142642,"byte_end":142649,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"is_pass","qualname":"<FilterResult>::is_pass","value":"pub fn is_pass(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the archetype should be accepted.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the archetype should be accepted.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142561,"byte_end":142616,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142621,"byte_end":142630,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143314,"byte_end":143326,"line_start":107,"line_end":107,"column_start":11,"column_end":23},"name":"LayoutFilter","qualname":"::internals::query::filter::LayoutFilter","value":"LayoutFilter","parent":null,"children":[{"krate":0,"index":1349}],"decl_id":null,"docs":" A filter which selects based upon which component types are attached to an entity.","sig":null,"attributes":[{"value":"/ A filter which selects based upon which component types are attached to an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143159,"byte_end":143245,"line_start":104,"line_end":104,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143246,"byte_end":143249,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ These filters should be idempotent and immutable.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143250,"byte_end":143303,"line_start":106,"line_end":106,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143404,"byte_end":143418,"line_start":109,"line_end":109,"column_start":8,"column_end":22},"name":"matches_layout","qualname":"::internals::query::filter::LayoutFilter::matches_layout","value":"pub fn matches_layout(&Self, &[ComponentTypeId]) -> FilterResult","parent":{"krate":0,"index":1348},"children":[],"decl_id":null,"docs":" Calculates the filter's result for the given entity layout.\n","sig":null,"attributes":[{"value":"/ Calculates the filter's result for the given entity layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143333,"byte_end":143396,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143563,"byte_end":143576,"line_start":113,"line_end":113,"column_start":11,"column_end":24},"name":"DynamicFilter","qualname":"::internals::query::filter::DynamicFilter","value":"DynamicFilter: Default + Send + Sync","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352}],"decl_id":null,"docs":" A filter which selects based upon the data available in the archetype.\n","sig":null,"attributes":[{"value":"/ A filter which selects based upon the data available in the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143478,"byte_end":143552,"line_start":112,"line_end":112,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143645,"byte_end":143652,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"prepare","qualname":"::internals::query::filter::DynamicFilter::prepare","value":"pub fn prepare(&mut Self, WorldId)","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Prepares the filter to run.\n","sig":null,"attributes":[{"value":"/ Prepares the filter to run.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143606,"byte_end":143637,"line_start":114,"line_end":114,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143758,"byte_end":143775,"line_start":118,"line_end":118,"column_start":8,"column_end":25},"name":"matches_archetype","qualname":"::internals::query::filter::DynamicFilter::matches_archetype","value":"pub fn matches_archetype<F: Fetch>(&mut Self, &F) -> FilterResult","parent":{"krate":0,"index":1350},"children":[],"decl_id":null,"docs":" Calculates the filter's result for the given archetype data.\n","sig":null,"attributes":[{"value":"/ Calculates the filter's result for the given archetype data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143686,"byte_end":143750,"line_start":117,"line_end":117,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143890,"byte_end":143902,"line_start":122,"line_end":122,"column_start":11,"column_end":23},"name":"ActiveFilter","qualname":"::internals::query::filter::ActiveFilter","value":"ActiveFilter","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for filters that are not no-ops.\n","sig":null,"attributes":[{"value":"/ A marker trait for filters that are not no-ops.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143828,"byte_end":143879,"line_start":121,"line_end":121,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144043,"byte_end":144055,"line_start":126,"line_end":126,"column_start":11,"column_end":23},"name":"GroupMatcher","qualname":"::internals::query::filter::GroupMatcher","value":"GroupMatcher","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357}],"decl_id":null,"docs":" Allows a filter to determine if component optimization groups can\n be used to accelerate queries that use this filter.\n","sig":null,"attributes":[{"value":"/ Allows a filter to determine if component optimization groups can","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143907,"byte_end":143976,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/ be used to accelerate queries that use this filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143977,"byte_end":144032,"line_start":125,"line_end":125,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144133,"byte_end":144148,"line_start":128,"line_end":128,"column_start":8,"column_end":23},"name":"can_match_group","qualname":"::internals::query::filter::GroupMatcher::can_match_group","value":"pub fn can_match_group() -> bool","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Returns `true` if the filter may potentially match a group.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the filter may potentially match a group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144062,"byte_end":144125,"line_start":127,"line_end":127,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144243,"byte_end":144259,"line_start":131,"line_end":131,"column_start":8,"column_end":24},"name":"group_components","qualname":"::internals::query::filter::GroupMatcher::group_components","value":"pub fn group_components() -> Vec<ComponentTypeId>","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Returns the components that are requried to be present in a group.\n","sig":null,"attributes":[{"value":"/ Returns the components that are requried to be present in a group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144165,"byte_end":144235,"line_start":130,"line_end":130,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144416,"byte_end":144428,"line_start":136,"line_end":136,"column_start":11,"column_end":23},"name":"EntityFilter","qualname":"::internals::query::filter::EntityFilter","value":"EntityFilter: Default + Send + Sync","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362}],"decl_id":null,"docs":" A combination of a [LayoutFilter](trait.LayoutFilter.html) and a\n [DynamicFilter](trait.DynamicFilter.html).\n","sig":null,"attributes":[{"value":"/ A combination of a [LayoutFilter](trait.LayoutFilter.html) and a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144290,"byte_end":144358,"line_start":134,"line_end":134,"column_start":1,"column_end":69}},{"value":"/ [DynamicFilter](trait.DynamicFilter.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144359,"byte_end":144405,"line_start":135,"line_end":135,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144495,"byte_end":144501,"line_start":138,"line_end":138,"column_start":10,"column_end":16},"name":"Layout","qualname":"::internals::query::filter::EntityFilter::Layout","value":"type Layout: LayoutFilter + GroupMatcher + Default + Send + Sync;","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" The layout filter type.\n","sig":null,"attributes":[{"value":"/ The layout filter type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144458,"byte_end":144485,"line_start":137,"line_end":137,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144598,"byte_end":144605,"line_start":140,"line_end":140,"column_start":10,"column_end":17},"name":"Dynamic","qualname":"::internals::query::filter::EntityFilter::Dynamic","value":"type Dynamic: DynamicFilter;","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" The dynamic filter type.\n","sig":null,"attributes":[{"value":"/ The dynamic filter type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144560,"byte_end":144588,"line_start":139,"line_end":139,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144680,"byte_end":144693,"line_start":143,"line_end":143,"column_start":8,"column_end":21},"name":"layout_filter","qualname":"::internals::query::filter::EntityFilter::layout_filter","value":"pub fn layout_filter(&Self) -> &Self::Layout","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Returns a reference to the layout filter.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the layout filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144627,"byte_end":144672,"line_start":142,"line_end":142,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144786,"byte_end":144793,"line_start":146,"line_end":146,"column_start":8,"column_end":15},"name":"filters","qualname":"::internals::query::filter::EntityFilter::filters","value":"pub fn filters(&mut Self) -> (&Self::Layout, &mut Self::Dynamic)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Returns a tuple of the layout and dynamic filters.\n","sig":null,"attributes":[{"value":"/ Returns a tuple of the layout and dynamic filters.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144724,"byte_end":144778,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":10086},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145677,"byte_end":145694,"line_start":178,"line_end":178,"column_start":12,"column_end":29},"name":"EntityFilterTuple","qualname":"::internals::query::filter::EntityFilterTuple","value":"EntityFilterTuple { layout_filter, dynamic_filter }","parent":null,"children":[{"krate":0,"index":10089},{"krate":0,"index":10090}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10089},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145740,"byte_end":145753,"line_start":179,"line_end":179,"column_start":9,"column_end":22},"name":"layout_filter","qualname":"::internals::query::filter::EntityFilterTuple::layout_filter","value":"L","parent":{"krate":0,"index":10086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10090},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145766,"byte_end":145780,"line_start":180,"line_end":180,"column_start":9,"column_end":23},"name":"dynamic_filter","qualname":"::internals::query::filter::EntityFilterTuple::dynamic_filter","value":"F","parent":{"krate":0,"index":10086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":184681,"byte_end":184685,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"Iter","qualname":"::internals::query::view::entity::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185103,"byte_end":185114,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"EntityFetch","qualname":"::internals::query::view::entity::EntityFetch","value":"EntityFetch {  }","parent":null,"children":[{"krate":0,"index":1563}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10099},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187160,"byte_end":187164,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Read","qualname":"::internals::query::view::read::Read","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reads a single entity data component type from a chunk.\n","sig":null,"attributes":[{"value":"/ Reads a single entity data component type from a chunk.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187012,"byte_end":187071,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"derivative(Default(bound = \"\"))","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187114,"byte_end":187148,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189272,"byte_end":189279,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::internals::query::view::read::ReadIter::Indexed","value":"ReadIter::Indexed { components, archetypes }","parent":{"krate":0,"index":1704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189375,"byte_end":189382,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Grouped","qualname":"::internals::query::view::read::ReadIter::Grouped","value":"ReadIter::Grouped { slices }","parent":{"krate":0,"index":1704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189459,"byte_end":189464,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Empty","qualname":"::internals::query::view::read::ReadIter::Empty","value":"ReadIter::Empty","parent":{"krate":0,"index":1704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189239,"byte_end":189247,"line_start":109,"line_end":109,"column_start":10,"column_end":18},"name":"ReadIter","qualname":"::internals::query::view::read::ReadIter","value":"pub enum ReadIter<'a, T: Component> {\n    Indexed {\n        components: &'a T::Storage,\n        archetypes: Iter,\n    },\n    Grouped {\n        slices: <T::Storage as ComponentStorage>::Iter,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1712}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189991,"byte_end":190000,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"ReadFetch","qualname":"::internals::query::view::read::ReadFetch","value":"ReadFetch {  }","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10114},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":192900,"byte_end":192907,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"TryRead","qualname":"::internals::query::view::try_read::TryRead","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reads a single entity data component type from a chunk.\n","sig":null,"attributes":[{"value":"/ Reads a single entity data component type from a chunk.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":192752,"byte_end":192811,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"derivative(Default(bound = \"\"))","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":192854,"byte_end":192888,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":194675,"byte_end":194686,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"TryReadIter","qualname":"::internals::query::view::try_read::TryReadIter","value":"TryReadIter {  }","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195421,"byte_end":195429,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::internals::query::view::try_read::Slice::Occupied","value":"Slice::Occupied { version, components }","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195498,"byte_end":195503,"line_start":126,"line_end":126,"column_start":5,"column_end":10},"name":"Empty","qualname":"::internals::query::view::try_read::Slice::Empty","value":"Slice::Empty(usize)","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195391,"byte_end":195396,"line_start":121,"line_end":121,"column_start":10,"column_end":15},"name":"Slice","qualname":"::internals::query::view::try_read::Slice","value":"pub enum Slice<'a, T: Component> {\n    Occupied {\n        version: &'a u64,\n        components: &'a [T],\n    },\n    Empty(usize),\n}","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1897}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":197941,"byte_end":197949,"line_start":218,"line_end":218,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::internals::query::view::try_read::Data::Occupied","value":"Data::Occupied(&'a [T])","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":197964,"byte_end":197969,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"Empty","qualname":"::internals::query::view::try_read::Data::Empty","value":"Data::Empty(usize)","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":197912,"byte_end":197916,"line_start":217,"line_end":217,"column_start":10,"column_end":14},"name":"Data","qualname":"::internals::query::view::try_read::Data","value":"pub enum Data<'a, T: Component> { Occupied(&'a [T]), Empty(usize), }","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10129},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":199959,"byte_end":199967,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"TryWrite","qualname":"::internals::query::view::try_write::TryWrite","value":"","parent":null,"children":[],"decl_id":null,"docs":" Writes a single entity data component type from a chunk.\n","sig":null,"attributes":[{"value":"/ Writes a single entity data component type from a chunk.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":199810,"byte_end":199870,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"derivative(Default(bound = \"\"))","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":199913,"byte_end":199947,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":201755,"byte_end":201767,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"TryWriteIter","qualname":"::internals::query::view::try_write::TryWriteIter","value":"TryWriteIter {  }","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202514,"byte_end":202522,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::internals::query::view::try_write::Slice::Occupied","value":"Slice::Occupied { version, components, next_version }","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202626,"byte_end":202631,"line_start":126,"line_end":126,"column_start":5,"column_end":10},"name":"Empty","qualname":"::internals::query::view::try_write::Slice::Empty","value":"Slice::Empty(usize)","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202484,"byte_end":202489,"line_start":120,"line_end":120,"column_start":10,"column_end":15},"name":"Slice","qualname":"::internals::query::view::try_write::Slice","value":"pub enum Slice<'a, T: Component> {\n    Occupied {\n        version: &'a mut u64,\n        components: &'a mut [T],\n        next_version: u64,\n    },\n    Empty(usize),\n}","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2082}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":205531,"byte_end":205539,"line_start":232,"line_end":232,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::internals::query::view::try_write::Data::Occupied","value":"Data::Occupied(&'a mut [T])","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":205558,"byte_end":205563,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"Empty","qualname":"::internals::query::view::try_write::Data::Empty","value":"Data::Empty(usize)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":205502,"byte_end":205506,"line_start":231,"line_end":231,"column_start":10,"column_end":14},"name":"Data","qualname":"::internals::query::view::try_write::Data","value":"pub enum Data<'a, T: Component> { Occupied(&'a mut [T]), Empty(usize), }","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2119}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10144},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207486,"byte_end":207491,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Write","qualname":"::internals::query::view::write::Write","value":"","parent":null,"children":[],"decl_id":null,"docs":" Writes a single mutable entity data component type from a chunk.\n","sig":null,"attributes":[{"value":"/ Writes a single mutable entity data component type from a chunk.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207329,"byte_end":207397,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"derivative(Default(bound = \"\"))","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207440,"byte_end":207474,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":209631,"byte_end":209638,"line_start":109,"line_end":109,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::internals::query::view::write::WriteIter::Indexed","value":"WriteIter::Indexed { components, archetypes }","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":209734,"byte_end":209741,"line_start":113,"line_end":113,"column_start":5,"column_end":12},"name":"Grouped","qualname":"::internals::query::view::write::WriteIter::Grouped","value":"WriteIter::Grouped { slices }","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":209821,"byte_end":209826,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"Empty","qualname":"::internals::query::view::write::WriteIter::Empty","value":"WriteIter::Empty","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":209597,"byte_end":209606,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"name":"WriteIter","qualname":"::internals::query::view::write::WriteIter","value":"pub enum WriteIter<'a, T: Component> {\n    Indexed {\n        components: &'a T::Storage,\n        archetypes: Iter,\n    },\n    Grouped {\n        slices: <T::Storage as ComponentStorage>::IterMut,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2248}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":210370,"byte_end":210380,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"WriteFetch","qualname":"::internals::query::view::write::WriteFetch","value":"WriteFetch {  }","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170335,"byte_end":170343,"line_start":29,"line_end":29,"column_start":11,"column_end":19},"name":"IntoView","qualname":"::internals::query::view::IntoView","value":"IntoView","parent":null,"children":[{"krate":0,"index":2293}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170355,"byte_end":170359,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"View","qualname":"::internals::query::view::IntoView::View","value":"type View: for<'a> View<'a> + 'static;","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171028,"byte_end":171041,"line_start":54,"line_end":54,"column_start":11,"column_end":24},"name":"DefaultFilter","qualname":"::internals::query::view::DefaultFilter","value":"DefaultFilter","parent":null,"children":[{"krate":0,"index":2312}],"decl_id":null,"docs":" Declares the default filter type used by a view when it is converted into a query.\n","sig":null,"attributes":[{"value":"/ Declares the default filter type used by a view when it is converted into a query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170931,"byte_end":171017,"line_start":53,"line_end":53,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171085,"byte_end":171091,"line_start":56,"line_end":56,"column_start":10,"column_end":16},"name":"Filter","qualname":"::internals::query::view::DefaultFilter::Filter","value":"type Filter: EntityFilter + 'static;","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" The filter constructed.\n","sig":null,"attributes":[{"value":"/ The filter constructed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171048,"byte_end":171075,"line_start":55,"line_end":55,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171185,"byte_end":171189,"line_start":60,"line_end":60,"column_start":11,"column_end":15},"name":"View","qualname":"::internals::query::view::View","value":"View<'data>: DefaultFilter + Sized","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2329}],"decl_id":null,"docs":" A type which can pull entitiy data out of a world.\n","sig":null,"attributes":[{"value":"/ A type which can pull entitiy data out of a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171120,"byte_end":171174,"line_start":59,"line_end":59,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171282,"byte_end":171289,"line_start":62,"line_end":62,"column_start":10,"column_end":17},"name":"Element","qualname":"::internals::query::view::View::Element","value":"type Element: Send + Sync + 'data;","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" The type of component references returned.\n","sig":null,"attributes":[{"value":"/ The type of component references returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171226,"byte_end":171272,"line_start":61,"line_end":61,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171372,"byte_end":171377,"line_start":64,"line_end":64,"column_start":10,"column_end":15},"name":"Fetch","qualname":"::internals::query::view::View::Fetch","value":"type Fetch: Fetch + IntoIndexableIter<Item = Self::Element> + 'data;","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" The fetch type yielded for each archetype.\n","sig":null,"attributes":[{"value":"/ The fetch type yielded for each archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171316,"byte_end":171362,"line_start":63,"line_end":63,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171511,"byte_end":171515,"line_start":66,"line_end":66,"column_start":10,"column_end":14},"name":"Iter","qualname":"::internals::query::view::View::Iter","value":"type Iter: Iterator<Item = Option<Self::Fetch>> + 'data;","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" The iterator type which pulls entity data out of a world.\n","sig":null,"attributes":[{"value":"/ The iterator type which pulls entity data out of a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171440,"byte_end":171501,"line_start":65,"line_end":65,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171620,"byte_end":171624,"line_start":68,"line_end":68,"column_start":10,"column_end":14},"name":"Read","qualname":"::internals::query::view::View::Read","value":"type Read: AsRef<[ComponentTypeId]>;","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Contains the type IDs read by the view.\n","sig":null,"attributes":[{"value":"/ Contains the type IDs read by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171567,"byte_end":171610,"line_start":67,"line_end":67,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171712,"byte_end":171717,"line_start":70,"line_end":70,"column_start":10,"column_end":15},"name":"Write","qualname":"::internals::query::view::View::Write","value":"type Write: AsRef<[ComponentTypeId]>;","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Contains the type IDs written by the view.\n","sig":null,"attributes":[{"value":"/ Contains the type IDs written by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171656,"byte_end":171702,"line_start":69,"line_end":69,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172140,"byte_end":172145,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"name":"fetch","qualname":"::internals::query::view::View::fetch","value":"pub unsafe fn fetch(&'data Components, &'data [Archetype], QueryResult)\n-> Self::Iter","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Creates an iterator which will yield slices of entity data for each archetype.","sig":null,"attributes":[{"value":"/ Creates an iterator which will yield slices of entity data for each archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171750,"byte_end":171832,"line_start":72,"line_end":72,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171837,"byte_end":171840,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171845,"byte_end":171857,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171862,"byte_end":171865,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method may return mutable references to entity data via shared world references.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171870,"byte_end":171959,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ The caller must ensure that no two view iterators are alive at the same time which access","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171964,"byte_end":172057,"line_start":77,"line_end":77,"column_start":5,"column_end":98}},{"value":"/ any components in a manor which may cause mutable aliasing.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172062,"byte_end":172125,"line_start":78,"line_end":78,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172360,"byte_end":172368,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"validate","qualname":"::internals::query::view::View::validate","value":"pub fn validate()","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Determines if this view type is valid. Panics if checks fail.\n","sig":null,"attributes":[{"value":"/ Determines if this view type is valid. Panics if checks fail.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172287,"byte_end":172352,"line_start":85,"line_end":85,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172480,"byte_end":172495,"line_start":89,"line_end":89,"column_start":8,"column_end":23},"name":"validate_access","qualname":"::internals::query::view::View::validate_access","value":"pub fn validate_access(&ComponentAccess) -> bool","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Returns `true` if the given component access includes all permissions required by the view.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given component access includes all permissions required by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172377,"byte_end":172472,"line_start":88,"line_end":88,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172593,"byte_end":172604,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"reads_types","qualname":"::internals::query::view::View::reads_types","value":"pub fn reads_types() -> Self::Read","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Returns the component types read by the view.\n","sig":null,"attributes":[{"value":"/ Returns the component types read by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172536,"byte_end":172585,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172690,"byte_end":172702,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"writes_types","qualname":"::internals::query::view::View::writes_types","value":"pub fn writes_types() -> Self::Write","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Returns the component types written to by the view.\n","sig":null,"attributes":[{"value":"/ Returns the component types written to by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172627,"byte_end":172682,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172795,"byte_end":172800,"line_start":98,"line_end":98,"column_start":8,"column_end":13},"name":"reads","qualname":"::internals::query::view::View::reads","value":"pub fn reads<T: Component>() -> bool","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Returns `true` if the view reads the specified data type.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the view reads the specified data type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172726,"byte_end":172787,"line_start":97,"line_end":97,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172904,"byte_end":172910,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"writes","qualname":"::internals::query::view::View::writes","value":"pub fn writes<T: Component>() -> bool","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Returns `true` if the view writes to the specified data type.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the view writes to the specified data type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172831,"byte_end":172896,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173036,"byte_end":173056,"line_start":104,"line_end":104,"column_start":8,"column_end":28},"name":"requires_permissions","qualname":"::internals::query::view::View::requires_permissions","value":"pub fn requires_permissions() -> Permissions<ComponentTypeId>","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" Returns a permissions struct declaring the component accesses required by the view.\n","sig":null,"attributes":[{"value":"/ Returns a permissions struct declaring the component accesses required by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":172941,"byte_end":173028,"line_start":103,"line_end":103,"column_start":5,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173120,"byte_end":173137,"line_start":108,"line_end":108,"column_start":11,"column_end":28},"name":"IntoIndexableIter","qualname":"::internals::query::view::IntoIndexableIter","value":"IntoIndexableIter","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173149,"byte_end":173153,"line_start":109,"line_end":109,"column_start":10,"column_end":14},"name":"Item","qualname":"::internals::query::view::IntoIndexableIter::Item","value":"type Item: Send + Sync;","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173177,"byte_end":173185,"line_start":110,"line_end":110,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::internals::query::view::IntoIndexableIter::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item>\n        + TrustedRandomAccess<Item = Self::Item>\n        + Send\n        + Sync;","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173303,"byte_end":173322,"line_start":115,"line_end":115,"column_start":8,"column_end":27},"name":"into_indexable_iter","qualname":"::internals::query::view::IntoIndexableIter::into_indexable_iter","value":"pub fn into_indexable_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173448,"byte_end":173453,"line_start":119,"line_end":119,"column_start":11,"column_end":16},"name":"Fetch","qualname":"::internals::query::view::Fetch","value":"Fetch: IntoIndexableIter + Send + Sync","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2343}],"decl_id":null,"docs":" A type which holds onto a slice of entitiy data retrieved from a single archetype.\n","sig":null,"attributes":[{"value":"/ A type which holds onto a slice of entitiy data retrieved from a single archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173351,"byte_end":173437,"line_start":118,"line_end":118,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173593,"byte_end":173597,"line_start":121,"line_end":121,"column_start":10,"column_end":14},"name":"Data","qualname":"::internals::query::view::Fetch::Data","value":"type Data;","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" The inner data representation fetched from the archetype. Typically a slice reference.\n","sig":null,"attributes":[{"value":"/ The inner data representation fetched from the archetype. Typically a slice reference.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173493,"byte_end":173583,"line_start":120,"line_end":120,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173670,"byte_end":173685,"line_start":124,"line_end":124,"column_start":8,"column_end":23},"name":"into_components","qualname":"::internals::query::view::Fetch::into_components","value":"pub fn into_components(Self) -> Self::Data","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Converts the fetch into the retrieved component slices\n","sig":null,"attributes":[{"value":"/ Converts the fetch into the retrieved component slices","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173604,"byte_end":173662,"line_start":123,"line_end":123,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173821,"byte_end":173825,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"find","qualname":"::internals::query::view::Fetch::find","value":"pub fn find<T: 'static>(&Self) -> Option<&[T]>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Tries to find a slice of components, if this fetch contains the\n requested component type.\n","sig":null,"attributes":[{"value":"/ Tries to find a slice of components, if this fetch contains the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173712,"byte_end":173779,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ requested component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173784,"byte_end":173813,"line_start":127,"line_end":127,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173984,"byte_end":173992,"line_start":132,"line_end":132,"column_start":8,"column_end":16},"name":"find_mut","qualname":"::internals::query::view::Fetch::find_mut","value":"pub fn find_mut<T: 'static>(&mut Self) -> Option<&mut [T]>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Tries to find a mutable slice of components, if this fetch contains\n the requested component type.\n","sig":null,"attributes":[{"value":"/ Tries to find a mutable slice of components, if this fetch contains","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173867,"byte_end":173938,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ the requested component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173943,"byte_end":173976,"line_start":131,"line_end":131,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174172,"byte_end":174179,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"version","qualname":"::internals::query::view::Fetch::version","value":"pub fn version<T: Component>(&Self) -> Option<u64>","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Tries to find the component slice version of a component,\n if this fetch contains the requested component type.\n","sig":null,"attributes":[{"value":"/ Tries to find the component slice version of a component,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174042,"byte_end":174103,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ if this fetch contains the requested component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174108,"byte_end":174164,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174354,"byte_end":174362,"line_start":140,"line_end":140,"column_start":8,"column_end":16},"name":"accepted","qualname":"::internals::query::view::Fetch::accepted","value":"pub fn accepted(&mut Self)","parent":{"krate":0,"index":2334},"children":[],"decl_id":null,"docs":" Indicates that the archetype is going to be provided to the user.\n Component slice versions are incremented here.\n","sig":null,"attributes":[{"value":"/ Indicates that the archetype is going to be provided to the user.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174222,"byte_end":174291,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ Component slice versions are incremented here.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174296,"byte_end":174346,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174465,"byte_end":174478,"line_start":144,"line_end":144,"column_start":18,"column_end":31},"name":"ReadOnlyFetch","qualname":"::internals::query::view::ReadOnlyFetch","value":"ReadOnlyFetch: Fetch","parent":null,"children":[{"krate":0,"index":2345}],"decl_id":null,"docs":" A fetch which only retrieves shared references to component data.\n","sig":null,"attributes":[{"value":"/ A fetch which only retrieves shared references to component data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174378,"byte_end":174447,"line_start":143,"line_end":143,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174550,"byte_end":174564,"line_start":146,"line_end":146,"column_start":8,"column_end":22},"name":"get_components","qualname":"::internals::query::view::ReadOnlyFetch::get_components","value":"pub fn get_components(&Self) -> Self::Data","parent":{"krate":0,"index":2344},"children":[],"decl_id":null,"docs":" Returns the fetch's retrieved component slices\n","sig":null,"attributes":[{"value":"/ Returns the fetch's retrieved component slices","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174492,"byte_end":174542,"line_start":145,"line_end":145,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174690,"byte_end":174698,"line_start":151,"line_end":151,"column_start":18,"column_end":26},"name":"ReadOnly","qualname":"::internals::query::view::ReadOnly","value":"ReadOnly","parent":null,"children":[],"decl_id":null,"docs":" A marker trait which marks types which only perform data reads.\n","sig":null,"attributes":[{"value":"/ A marker trait which marks types which only perform data reads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174590,"byte_end":174657,"line_start":149,"line_end":149,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174806,"byte_end":174816,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"MultiFetch","qualname":"::internals::query::view::MultiFetch","value":"MultiFetch {  }","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97049,"byte_end":97058,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"IntoQuery","qualname":"::internals::query::IntoQuery","value":"IntoQuery: IntoView + Sized","parent":null,"children":[{"krate":0,"index":2359}],"decl_id":null,"docs":" A type (typically a view) which can construct a query.\n","sig":null,"attributes":[{"value":"/ A type (typically a view) which can construct a query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":96980,"byte_end":97038,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97114,"byte_end":97119,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"query","qualname":"::internals::query::IntoQuery::query","value":"pub fn query() -> Query<Self, <Self::View as DefaultFilter>::Filter>","parent":{"krate":0,"index":2358},"children":[],"decl_id":null,"docs":" Constructs a query.\n","sig":null,"attributes":[{"value":"/ Constructs a query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97083,"byte_end":97106,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10991},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97647,"byte_end":97658,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"QueryResult","qualname":"::internals::query::QueryResult","value":"QueryResult {  }","parent":null,"children":[{"krate":0,"index":10993},{"krate":0,"index":10994},{"krate":0,"index":10995}],"decl_id":null,"docs":" Contains the result of an entity layout filter.\n","sig":null,"attributes":[{"value":"/ Contains the result of an entity layout filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97560,"byte_end":97611,"line_start":38,"line_end":38,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98437,"byte_end":98442,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"index","qualname":"<QueryResult>::index","value":"pub fn index(&Self) -> &'a [ArchetypeIndex]","parent":null,"children":[],"decl_id":null,"docs":" Gets the archetype index containing the archetypes which match the filter.\n","sig":null,"attributes":[{"value":"/ Gets the archetype index containing the archetypes which match the filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98347,"byte_end":98425,"line_start":66,"line_end":66,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98693,"byte_end":98698,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"range","qualname":"<QueryResult>::range","value":"pub fn range(&Self) -> &Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" The sub-range of archetypes which should be accessed.\n","sig":null,"attributes":[{"value":"/ The sub-range of archetypes which should be accessed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98624,"byte_end":98681,"line_start":73,"line_end":73,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98856,"byte_end":98866,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"is_ordered","qualname":"<QueryResult>::is_ordered","value":"pub fn is_ordered(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if components can be assumed to be stored in the same order as given.\n","sig":null,"attributes":[{"value":"/ Returns `true` if components can be assumed to be stored in the same order as given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98756,"byte_end":98844,"line_start":78,"line_end":78,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98984,"byte_end":98987,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"len","qualname":"<QueryResult>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of archetypes that matches the filter.\n","sig":null,"attributes":[{"value":"/ The number of archetypes that matches the filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":98919,"byte_end":98972,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":99109,"byte_end":99117,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<QueryResult>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if no archetypes matched the filter.\n","sig":null,"attributes":[{"value":"/ Returns `true` if no archetypes matched the filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":99042,"byte_end":99097,"line_start":88,"line_end":88,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100005,"byte_end":100010,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"Query","qualname":"::internals::query::Query","value":"Query {  }","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"decl_id":null,"docs":" Provides efficient means to iterate and filter entities in a world.","sig":null,"attributes":[{"value":"/ Provides efficient means to iterate and filter entities in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":99832,"byte_end":99903,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":99904,"byte_end":99907,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](./index.html) for more details and examples.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":99908,"byte_end":99993,"line_start":124,"line_end":124,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100424,"byte_end":100427,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Query<V, F>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consructs a new Query\n","sig":null,"attributes":[{"value":"/ Consructs a new Query","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100387,"byte_end":100412,"line_start":139,"line_end":139,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100723,"byte_end":100729,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"filter","qualname":"<Query<V, F>>::filter","value":"pub fn filter<T: EntityFilter>(Self, T)\n-> Query<V, <F as std::ops::BitAnd<T>>::Output> where F: std::ops::BitAnd<T>,\n<F as std::ops::BitAnd<T>>::Output: EntityFilter","parent":null,"children":[],"decl_id":null,"docs":" Adds an additional filter to the query.\n","sig":null,"attributes":[{"value":"/ Adds an additional filter to the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100668,"byte_end":100711,"line_start":151,"line_end":151,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":104346,"byte_end":104359,"line_start":249,"line_end":249,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Query<V, F>>::get_unchecked","value":"pub unsafe fn get_unchecked<'query, 'world,\n                            T>(&'query mut Self, &'world T, Entity)\n-> Result<<V::View as View>::Element, EntityAccessError> where T: EntityStore","parent":null,"children":[],"decl_id":null,"docs":" Returns the components for a single entity.","sig":null,"attributes":[{"value":"/ Returns the components for a single entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":103810,"byte_end":103857,"line_start":240,"line_end":240,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":103862,"byte_end":103865,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This function will not evaluate the query's dynamic filters. This means, for example, that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":103870,"byte_end":103964,"line_start":242,"line_end":242,"column_start":5,"column_end":99}},{"value":"/ calling `get` on all entities in an archetype will not prevent `maybe_changed` from returning","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":103969,"byte_end":104066,"line_start":243,"line_end":243,"column_start":5,"column_end":102}},{"value":"/ those entities the next time the query is iterated.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":104071,"byte_end":104126,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":104131,"byte_end":104134,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":104139,"byte_end":104151,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":104156,"byte_end":104255,"line_start":247,"line_end":247,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":104260,"byte_end":104327,"line_start":248,"line_end":248,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":106566,"byte_end":106573,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Query<V, F>>::get_mut","value":"pub fn get_mut<'query, 'world, T>(&'query mut Self, &'world mut T, Entity)\n-> Result<<V::View as View>::Element, EntityAccessError> where T: EntityStore","parent":null,"children":[],"decl_id":null,"docs":" Returns the components for a single entity.\n","sig":null,"attributes":[{"value":"/ Returns the components for a single entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":106507,"byte_end":106554,"line_start":298,"line_end":298,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":106961,"byte_end":106964,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"get","qualname":"<Query<V, F>>::get","value":"pub fn get<'query, 'world, T>(&'query mut Self, &'world T, Entity)\n-> Result<<V::View as View>::Element, EntityAccessError> where T: EntityStore,\n<V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Returns the components for a single entity.\n","sig":null,"attributes":[{"value":"/ Returns the components for a single entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":106902,"byte_end":106949,"line_start":311,"line_end":311,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107853,"byte_end":107874,"line_start":336,"line_end":336,"column_start":19,"column_end":40},"name":"iter_chunks_unchecked","qualname":"<Query<V, F>>::iter_chunks_unchecked","value":"pub unsafe fn iter_chunks_unchecked<'query, 'world,\n                                    T: EntityStore>(&'query mut Self,\n                                                    &'world T) -> ChunkIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which will yield all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Returns an iterator which will yield all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107440,"byte_end":107521,"line_start":329,"line_end":329,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107526,"byte_end":107529,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107534,"byte_end":107633,"line_start":331,"line_end":331,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107638,"byte_end":107641,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107646,"byte_end":107658,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107663,"byte_end":107762,"line_start":334,"line_end":334,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":107767,"byte_end":107834,"line_start":335,"line_end":335,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111148,"byte_end":111173,"line_start":401,"line_end":401,"column_start":19,"column_end":44},"name":"par_iter_chunks_unchecked","qualname":"<Query<V, F>>::par_iter_chunks_unchecked","value":"pub unsafe fn par_iter_chunks_unchecked<'a,\n                                        T: EntityStore>(&'a mut Self, &'a T)\n-> par_iter::ParChunkIter","parent":null,"children":[],"decl_id":null,"docs":" Returns a parallel iterator which will yield all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator which will yield all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":110690,"byte_end":110779,"line_start":393,"line_end":393,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":110784,"byte_end":110787,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":110792,"byte_end":110891,"line_start":395,"line_end":395,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":110896,"byte_end":110899,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":110904,"byte_end":110916,"line_start":397,"line_end":397,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":110921,"byte_end":111020,"line_start":398,"line_end":398,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.    ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111025,"byte_end":111096,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111101,"byte_end":111129,"line_start":400,"line_end":400,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111724,"byte_end":111739,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"iter_chunks_mut","qualname":"<Query<V, F>>::iter_chunks_mut","value":"pub fn iter_chunks_mut<'query, 'world,\n                       T: EntityStore>(&'query mut Self, &'world mut T)\n-> ChunkIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which will yield all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Returns an iterator which will yield all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111499,"byte_end":111580,"line_start":410,"line_end":410,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111585,"byte_end":111588,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.      ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111593,"byte_end":111698,"line_start":412,"line_end":412,"column_start":5,"column_end":110}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111703,"byte_end":111712,"line_start":413,"line_end":413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112255,"byte_end":112274,"line_start":427,"line_end":427,"column_start":12,"column_end":31},"name":"par_iter_chunks_mut","qualname":"<Query<V, F>>::par_iter_chunks_mut","value":"pub fn par_iter_chunks_mut<'a, T: EntityStore>(&'a mut Self, &'a mut T)\n-> par_iter::ParChunkIter","parent":null,"children":[],"decl_id":null,"docs":" Returns a parallel iterator which will yield all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator which will yield all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":111995,"byte_end":112084,"line_start":422,"line_end":422,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112089,"byte_end":112092,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112097,"byte_end":112196,"line_start":424,"line_end":424,"column_start":5,"column_end":104}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112201,"byte_end":112229,"line_start":425,"line_end":425,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112234,"byte_end":112243,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112796,"byte_end":112807,"line_start":440,"line_end":440,"column_start":12,"column_end":23},"name":"iter_chunks","qualname":"<Query<V, F>>::iter_chunks","value":"pub fn iter_chunks<'query, 'world,\n                   T: EntityStore>(&'query mut Self, &'world T) -> ChunkIter\nwhere <V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which will yield all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Returns an iterator which will yield all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112515,"byte_end":112596,"line_start":435,"line_end":435,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112601,"byte_end":112604,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112609,"byte_end":112710,"line_start":437,"line_end":437,"column_start":5,"column_end":106}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112715,"byte_end":112770,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":112775,"byte_end":112784,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113472,"byte_end":113487,"line_start":457,"line_end":457,"column_start":12,"column_end":27},"name":"par_iter_chunks","qualname":"<Query<V, F>>::par_iter_chunks","value":"pub fn par_iter_chunks<'a, T: EntityStore>(&'a mut Self, &'a T)\n-> par_iter::ParChunkIter where <V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Returns a parallel iterator which will yield all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator which will yield all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113152,"byte_end":113241,"line_start":451,"line_end":451,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113246,"byte_end":113249,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113254,"byte_end":113353,"line_start":453,"line_end":453,"column_start":5,"column_end":104}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113358,"byte_end":113413,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113418,"byte_end":113446,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113451,"byte_end":113460,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114275,"byte_end":114289,"line_start":480,"line_end":480,"column_start":19,"column_end":33},"name":"iter_unchecked","qualname":"<Query<V, F>>::iter_unchecked","value":"pub unsafe fn iter_unchecked<'query, 'world,\n                             T: EntityStore>(&'query mut Self, &'world T)\n-> std::iter::Flatten<ChunkIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which will yield all components which match the query.","sig":null,"attributes":[{"value":"/ Returns an iterator which will yield all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113886,"byte_end":113964,"line_start":472,"line_end":472,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113969,"byte_end":113972,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Prefer `for_each_unchecked` as it offers better performance.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":113977,"byte_end":114041,"line_start":474,"line_end":474,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114046,"byte_end":114049,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114054,"byte_end":114066,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114071,"byte_end":114170,"line_start":477,"line_end":477,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114175,"byte_end":114242,"line_start":478,"line_end":478,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114247,"byte_end":114256,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114860,"byte_end":114878,"line_start":494,"line_end":494,"column_start":19,"column_end":37},"name":"par_iter_unchecked","qualname":"<Query<V, F>>::par_iter_unchecked","value":"pub unsafe fn par_iter_unchecked<'a, T: EntityStore>(&'a mut Self, &'a T)\n-> rayon::iter::Flatten<par_iter::ParChunkIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parallel iterator which will yield all components which match the query.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator which will yield all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114507,"byte_end":114593,"line_start":487,"line_end":487,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114598,"byte_end":114601,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114606,"byte_end":114618,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114623,"byte_end":114722,"line_start":490,"line_end":490,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114727,"byte_end":114794,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114799,"byte_end":114827,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":114832,"byte_end":114841,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115301,"byte_end":115309,"line_start":506,"line_end":506,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Query<V, F>>::iter_mut","value":"pub fn iter_mut<'query, 'world,\n                T: EntityStore>(&'query mut Self, &'world mut T)\n-> std::iter::Flatten<ChunkIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which will yield all components which match the query.","sig":null,"attributes":[{"value":"/ Returns an iterator which will yield all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115126,"byte_end":115204,"line_start":502,"line_end":502,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115209,"byte_end":115212,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Prefer `for_each_mut` as it yields better performance.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115217,"byte_end":115275,"line_start":504,"line_end":504,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115280,"byte_end":115289,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115723,"byte_end":115735,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"name":"par_iter_mut","qualname":"<Query<V, F>>::par_iter_mut","value":"pub fn par_iter_mut<'a, T: EntityStore>(&'a mut Self, &'a mut T)\n-> rayon::iter::Flatten<par_iter::ParChunkIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parallel iterator which will yield all components which match the query.\n","sig":null,"attributes":[{"value":"/ Returns a parallel iterator which will yield all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115578,"byte_end":115664,"line_start":514,"line_end":514,"column_start":5,"column_end":91}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115669,"byte_end":115697,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115702,"byte_end":115711,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116224,"byte_end":116228,"line_start":530,"line_end":530,"column_start":12,"column_end":16},"name":"iter","qualname":"<Query<V, F>>::iter","value":"pub fn iter<'query, 'world, T: EntityStore>(&'query mut Self, &'world T)\n-> std::iter::Flatten<ChunkIter> where <V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which will yield all components which match the query.","sig":null,"attributes":[{"value":"/ Returns an iterator which will yield all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":115991,"byte_end":116069,"line_start":525,"line_end":525,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116074,"byte_end":116077,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Prefer `for_each` as it yields better performance.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116082,"byte_end":116138,"line_start":527,"line_end":527,"column_start":5,"column_end":61}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116143,"byte_end":116198,"line_start":528,"line_end":528,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116203,"byte_end":116212,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116799,"byte_end":116807,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"name":"par_iter","qualname":"<Query<V, F>>::par_iter","value":"pub fn par_iter<'a, T: EntityStore>(&'a mut Self, &'a T)\n-> rayon::iter::Flatten<par_iter::ParChunkIter> where\n<V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Returns a parallel iterator which will yield all components which match the query.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator which will yield all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116586,"byte_end":116672,"line_start":541,"line_end":541,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116677,"byte_end":116680,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116685,"byte_end":116740,"line_start":543,"line_end":543,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116745,"byte_end":116773,"line_start":544,"line_end":544,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":116778,"byte_end":116787,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117628,"byte_end":117652,"line_start":569,"line_end":569,"column_start":19,"column_end":43},"name":"for_each_chunk_unchecked","qualname":"<Query<V, F>>::for_each_chunk_unchecked","value":"pub unsafe fn for_each_chunk_unchecked<'query, 'world, T: EntityStore,\n                                       Body>(&'query mut Self, &'world T,\n                                             Body) where\nBody: FnMut(ChunkView<, <V::View as View>::Fetch>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Iterates through all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117219,"byte_end":117280,"line_start":561,"line_end":561,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117285,"byte_end":117288,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117293,"byte_end":117394,"line_start":563,"line_end":563,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117399,"byte_end":117402,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117407,"byte_end":117419,"line_start":565,"line_end":565,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117424,"byte_end":117523,"line_start":566,"line_end":566,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117528,"byte_end":117595,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117600,"byte_end":117609,"line_start":568,"line_end":568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118403,"byte_end":118431,"line_start":590,"line_end":590,"column_start":19,"column_end":47},"name":"par_for_each_chunk_unchecked","qualname":"<Query<V, F>>::par_for_each_chunk_unchecked","value":"pub unsafe fn par_for_each_chunk_unchecked<'a, T: EntityStore,\n                                           Body>(&'a mut Self, &'a T, Body)\nwhere Body: Fn(ChunkView<, <V::View as View>::Fetch>) -> () + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Iterates in parallel through all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Iterates in parallel through all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":117949,"byte_end":118022,"line_start":581,"line_end":581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118027,"byte_end":118030,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118035,"byte_end":118136,"line_start":583,"line_end":583,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118141,"byte_end":118144,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118149,"byte_end":118161,"line_start":585,"line_end":585,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118166,"byte_end":118265,"line_start":586,"line_end":586,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118270,"byte_end":118337,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118342,"byte_end":118370,"line_start":588,"line_end":588,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118375,"byte_end":118384,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118925,"byte_end":118943,"line_start":605,"line_end":605,"column_start":12,"column_end":30},"name":"for_each_chunk_mut","qualname":"<Query<V, F>>::for_each_chunk_mut","value":"pub fn for_each_chunk_mut<'query, 'world, T: EntityStore,\n                          Body>(&'query mut Self, &'world mut T, Body) where\nBody: FnMut(ChunkView<, <V::View as View>::Fetch>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Iterates through all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118724,"byte_end":118785,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118790,"byte_end":118793,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118798,"byte_end":118899,"line_start":603,"line_end":603,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":118904,"byte_end":118913,"line_start":604,"line_end":604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119504,"byte_end":119526,"line_start":620,"line_end":620,"column_start":12,"column_end":34},"name":"par_for_each_chunk_mut","qualname":"<Query<V, F>>::par_for_each_chunk_mut","value":"pub fn par_for_each_chunk_mut<'a, T: EntityStore,\n                              Body>(&'a mut Self, &'a mut T, Body) where\nBody: Fn(ChunkView<, <V::View as View>::Fetch>) -> () + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Iterates in parallel through all entity chunks which match the query.  \n Each chunk contains slices of components for entities which all have the same component layout.  \n","sig":null,"attributes":[{"value":"/ Iterates in parallel through all entity chunks which match the query.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119264,"byte_end":119339,"line_start":616,"line_end":616,"column_start":5,"column_end":80}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119344,"byte_end":119445,"line_start":617,"line_end":617,"column_start":5,"column_end":106}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119450,"byte_end":119478,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119483,"byte_end":119492,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120074,"byte_end":120088,"line_start":633,"line_end":633,"column_start":12,"column_end":26},"name":"for_each_chunk","qualname":"<Query<V, F>>::for_each_chunk","value":"pub fn for_each_chunk<'query, 'world, T: EntityStore,\n                      Body>(&'query mut Self, &'world T, Body) where\nBody: FnMut(ChunkView<, <V::View as View>::Fetch>) -> (),\n<V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all entity chunks which match the query.  ","sig":null,"attributes":[{"value":"/ Iterates through all entity chunks which match the query.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119811,"byte_end":119874,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119879,"byte_end":119882,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119887,"byte_end":119988,"line_start":630,"line_end":630,"column_start":5,"column_end":106}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":119993,"byte_end":120048,"line_start":631,"line_end":631,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120053,"byte_end":120062,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120790,"byte_end":120808,"line_start":651,"line_end":651,"column_start":12,"column_end":30},"name":"par_for_each_chunk","qualname":"<Query<V, F>>::par_for_each_chunk","value":"pub fn par_for_each_chunk<'a, T: EntityStore, Body>(&'a mut Self, &'a T, Body)\nwhere Body: Fn(ChunkView<, <V::View as View>::Fetch>) -> () + Send + Sync,\n<V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Iterates in parallel through all entity chunks which match the query.","sig":null,"attributes":[{"value":"/ Iterates in parallel through all entity chunks which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120484,"byte_end":120557,"line_start":645,"line_end":645,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120562,"byte_end":120565,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Each chunk contains slices of components for entities which all have the same component layout.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120570,"byte_end":120671,"line_start":647,"line_end":647,"column_start":5,"column_end":106}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120676,"byte_end":120731,"line_start":648,"line_end":648,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120736,"byte_end":120764,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":120769,"byte_end":120778,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121528,"byte_end":121546,"line_start":670,"line_end":670,"column_start":19,"column_end":37},"name":"for_each_unchecked","qualname":"<Query<V, F>>::for_each_unchecked","value":"pub unsafe fn for_each_unchecked<'query, 'world, T: EntityStore,\n                                 Body>(&'query mut Self, &'world T, Body)\nwhere Body: FnMut(<V::View as View>::Element) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all components which match the query.","sig":null,"attributes":[{"value":"/ Iterates through all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121236,"byte_end":121294,"line_start":664,"line_end":664,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121299,"byte_end":121302,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121307,"byte_end":121319,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121324,"byte_end":121423,"line_start":667,"line_end":667,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121428,"byte_end":121495,"line_start":668,"line_end":668,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121500,"byte_end":121509,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122311,"byte_end":122333,"line_start":692,"line_end":692,"column_start":19,"column_end":41},"name":"par_for_each_unchecked","qualname":"<Query<V, F>>::par_for_each_unchecked","value":"pub unsafe fn par_for_each_unchecked<'a, T: EntityStore,\n                                     Body>(&'a mut Self, &'a T, Body) where\nBody: Fn(<V::View as View>::Element) -> () + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Iterates in parallel through all components which match the query.","sig":null,"attributes":[{"value":"/ Iterates in parallel through all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":121974,"byte_end":122044,"line_start":685,"line_end":685,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122049,"byte_end":122052,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122057,"byte_end":122069,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/ This function allows mutable access via a shared world reference. The caller is responsible for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122074,"byte_end":122173,"line_start":688,"line_end":688,"column_start":5,"column_end":104}},{"value":"/ ensuring that no component accesses may create mutable aliases.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122178,"byte_end":122245,"line_start":689,"line_end":689,"column_start":5,"column_end":72}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122250,"byte_end":122278,"line_start":690,"line_end":690,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122283,"byte_end":122292,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122695,"byte_end":122707,"line_start":705,"line_end":705,"column_start":12,"column_end":24},"name":"for_each_mut","qualname":"<Query<V, F>>::for_each_mut","value":"pub fn for_each_mut<'query, 'world, T: EntityStore,\n                    Body>(&'query mut Self, &'world mut T, Body) where\nBody: FnMut(<V::View as View>::Element) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all components which match the query.\n","sig":null,"attributes":[{"value":"/ Iterates through all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122611,"byte_end":122669,"line_start":703,"line_end":703,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":122674,"byte_end":122683,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123142,"byte_end":123158,"line_start":719,"line_end":719,"column_start":12,"column_end":28},"name":"par_for_each_mut","qualname":"<Query<V, F>>::par_for_each_mut","value":"pub fn par_for_each_mut<'a, T: EntityStore,\n                        Body>(&'a mut Self, &'a mut T, Body) where\nBody: Fn(<V::View as View>::Element) -> () + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Iterates in parallel through all components which match the query.\n","sig":null,"attributes":[{"value":"/ Iterates in parallel through all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123013,"byte_end":123083,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123088,"byte_end":123116,"line_start":717,"line_end":717,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123121,"byte_end":123130,"line_start":718,"line_end":718,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123580,"byte_end":123588,"line_start":731,"line_end":731,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Query<V, F>>::for_each","value":"pub fn for_each<'query, 'world, T: EntityStore,\n                Body>(&'query mut Self, &'world T, Body) where\nBody: FnMut(<V::View as View>::Element) -> (),\n<V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all components which match the query.","sig":null,"attributes":[{"value":"/ Iterates through all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123428,"byte_end":123486,"line_start":727,"line_end":727,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123491,"byte_end":123494,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123499,"byte_end":123554,"line_start":729,"line_end":729,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123559,"byte_end":123568,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124166,"byte_end":124178,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"par_for_each","qualname":"<Query<V, F>>::par_for_each","value":"pub fn par_for_each<'a, T: EntityStore, Body>(&'a mut Self, &'a T, Body) where\nBody: Fn(<V::View as View>::Element) -> () + Send + Sync,\n<V::View as View>::Fetch: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Iterates in parallel through all components which match the query.","sig":null,"attributes":[{"value":"/ Iterates in parallel through all components which match the query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":123969,"byte_end":124039,"line_start":743,"line_end":743,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124044,"byte_end":124047,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Only usable with queries who's views are read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124052,"byte_end":124107,"line_start":745,"line_end":745,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124112,"byte_end":124140,"line_start":746,"line_end":746,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124145,"byte_end":124154,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124715,"byte_end":124724,"line_start":761,"line_end":761,"column_start":12,"column_end":21},"name":"ChunkView","qualname":"::internals::query::ChunkView","value":"ChunkView {  }","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526}],"decl_id":null,"docs":" Provides access to slices of components for entities which have the same component layout.","sig":null,"attributes":[{"value":"/ Provides access to slices of components for entities which have the same component layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124517,"byte_end":124611,"line_start":758,"line_end":758,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124612,"byte_end":124615,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ A single index in any of the slices contained in a chunk belong to the same entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124616,"byte_end":124703,"line_start":760,"line_end":760,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125007,"byte_end":125016,"line_start":772,"line_end":772,"column_start":12,"column_end":21},"name":"archetype","qualname":"<ChunkView>::archetype","value":"pub fn archetype(&Self) -> &Archetype","parent":null,"children":[],"decl_id":null,"docs":" Returns the archetype that all entities in the chunk belong to.\n","sig":null,"attributes":[{"value":"/ Returns the archetype that all entities in the chunk belong to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124928,"byte_end":124995,"line_start":771,"line_end":771,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125222,"byte_end":125237,"line_start":779,"line_end":779,"column_start":12,"column_end":27},"name":"component_slice","qualname":"<ChunkView>::component_slice","value":"pub fn component_slice<T: Component>(&Self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of components.","sig":null,"attributes":[{"value":"/ Returns a slice of components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125075,"byte_end":125109,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125114,"byte_end":125117,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ May return `None` if the chunk's view does not declare access to the component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125122,"byte_end":125210,"line_start":778,"line_end":778,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125474,"byte_end":125493,"line_start":786,"line_end":786,"column_start":12,"column_end":31},"name":"component_slice_mut","qualname":"<ChunkView>::component_slice_mut","value":"pub fn component_slice_mut<T: Component>(&mut Self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice of components.","sig":null,"attributes":[{"value":"/ Returns a mutable slice of components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125319,"byte_end":125361,"line_start":783,"line_end":783,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125366,"byte_end":125369,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ May return `None` if the chunk's view does not declare access to the component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125374,"byte_end":125462,"line_start":785,"line_end":785,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126138,"byte_end":126153,"line_start":806,"line_end":806,"column_start":12,"column_end":27},"name":"into_components","qualname":"<ChunkView>::into_components","value":"pub fn into_components(Self) -> F::Data","parent":null,"children":[],"decl_id":null,"docs":" Converts the chunk into a tuple of it's inner slices.","sig":null,"attributes":[{"value":"/ Converts the chunk into a tuple of it's inner slices.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125587,"byte_end":125644,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125649,"byte_end":125652,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125657,"byte_end":125671,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125676,"byte_end":125679,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125684,"byte_end":125691,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125696,"byte_end":125716,"line_start":795,"line_end":795,"column_start":5,"column_end":25}},{"value":"/ # struct A;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125721,"byte_end":125736,"line_start":796,"line_end":796,"column_start":5,"column_end":20}},{"value":"/ # struct B;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125741,"byte_end":125756,"line_start":797,"line_end":797,"column_start":5,"column_end":20}},{"value":"/ # struct C;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125761,"byte_end":125776,"line_start":798,"line_end":798,"column_start":5,"column_end":20}},{"value":"/ # struct D;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125781,"byte_end":125796,"line_start":799,"line_end":799,"column_start":5,"column_end":20}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125801,"byte_end":125840,"line_start":800,"line_end":800,"column_start":5,"column_end":44}},{"value":"/ let mut query = <(Entity, Read<A>, Write<B>, TryRead<C>, TryWrite<D>)>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125845,"byte_end":125929,"line_start":801,"line_end":801,"column_start":5,"column_end":89}},{"value":"/ for chunk in query.iter_chunks_mut(&mut world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125934,"byte_end":125986,"line_start":802,"line_end":802,"column_start":5,"column_end":57}},{"value":"/     let slices: (&[Entity], &[A], &mut [B], Option<&[C]>, Option<&mut [D]>) = chunk.into_components();       ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":125991,"byte_end":126104,"line_start":803,"line_end":803,"column_start":5,"column_end":118}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126109,"byte_end":126114,"line_start":804,"line_end":804,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126119,"byte_end":126126,"line_start":805,"line_end":805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126753,"byte_end":126767,"line_start":826,"line_end":826,"column_start":12,"column_end":26},"name":"get_components","qualname":"<ChunkView>::get_components","value":"pub fn get_components(&Self) -> F::Data where F: ReadOnlyFetch","parent":null,"children":[],"decl_id":null,"docs":" Converts the chunk into a tuple of it's inner slices.","sig":null,"attributes":[{"value":"/ Converts the chunk into a tuple of it's inner slices.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126221,"byte_end":126278,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126283,"byte_end":126286,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Only usable with views who's elements are all read-only.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126291,"byte_end":126351,"line_start":812,"line_end":812,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126356,"byte_end":126359,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126364,"byte_end":126378,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126383,"byte_end":126386,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126391,"byte_end":126398,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126403,"byte_end":126423,"line_start":817,"line_end":817,"column_start":5,"column_end":25}},{"value":"/ # struct A;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126428,"byte_end":126443,"line_start":818,"line_end":818,"column_start":5,"column_end":20}},{"value":"/ # struct B;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126448,"byte_end":126463,"line_start":819,"line_end":819,"column_start":5,"column_end":20}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126468,"byte_end":126507,"line_start":820,"line_end":820,"column_start":5,"column_end":44}},{"value":"/ let mut query = <(Entity, Read<A>, TryRead<B>)>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126512,"byte_end":126573,"line_start":821,"line_end":821,"column_start":5,"column_end":66}},{"value":"/ for chunk in query.iter_chunks_mut(&mut world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126578,"byte_end":126630,"line_start":822,"line_end":822,"column_start":5,"column_end":57}},{"value":"/     let slices: (&[Entity], &[A], Option<&[B]>) = chunk.get_components();       ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126635,"byte_end":126719,"line_start":823,"line_end":823,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126724,"byte_end":126729,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126734,"byte_end":126741,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126973,"byte_end":126991,"line_start":834,"line_end":834,"column_start":12,"column_end":30},"name":"into_iter_entities","qualname":"<ChunkView>::into_iter_entities","value":"pub fn into_iter_entities(Self) -> /*impl Trait*/ where\n<F as IntoIndexableIter>::IntoIter: 'a","parent":null,"children":[],"decl_id":null,"docs":" Converts the chunk into an iterator which yields tuples of `(Entity, components)`.\n","sig":null,"attributes":[{"value":"/ Converts the chunk into an iterator which yields tuples of `(Entity, components)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":126875,"byte_end":126961,"line_start":833,"line_end":833,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":128148,"byte_end":128157,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"ChunkIter","qualname":"::internals::query::ChunkIter","value":"ChunkIter {  }","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564}],"decl_id":null,"docs":" An iterator which yields entity chunks from a query.\n","sig":null,"attributes":[{"value":"/ An iterator which yields entity chunks from a query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":128006,"byte_end":128062,"line_start":863,"line_end":863,"column_start":1,"column_end":57}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":128063,"byte_end":128136,"line_start":864,"line_end":864,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":130302,"byte_end":130306,"line_start":936,"line_end":936,"column_start":16,"column_end":20},"name":"Iter","qualname":"::internals::query::par_iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603}],"decl_id":null,"docs":" An entity chunk iterator which internally locks its filter during iteration.\n","sig":null,"attributes":[{"value":"/ An entity chunk iterator which internally locks its filter during iteration.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":130128,"byte_end":130208,"line_start":934,"line_end":934,"column_start":5,"column_end":85}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":130213,"byte_end":130286,"line_start":935,"line_end":935,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":131528,"byte_end":131540,"line_start":975,"line_end":975,"column_start":16,"column_end":28},"name":"ParChunkIter","qualname":"::internals::query::par_iter::ParChunkIter","value":"ParChunkIter {  }","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"decl_id":null,"docs":" A parallel entity chunk iterator.\n","sig":null,"attributes":[{"value":"/ A parallel entity chunk iterator.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":131397,"byte_end":131434,"line_start":973,"line_end":973,"column_start":5,"column_end":42}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":131439,"byte_end":131512,"line_start":974,"line_end":974,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254385,"byte_end":254402,"line_start":20,"line_end":20,"column_start":11,"column_end":28},"name":"WorldDeserializer","qualname":"::internals::serialize::de::WorldDeserializer","value":"WorldDeserializer","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3169},{"krate":0,"index":3172}],"decl_id":null,"docs":" Describes a type which knows how to deserialize the components in a world.\n","sig":null,"attributes":[{"value":"/ Describes a type which knows how to deserialize the components in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254296,"byte_end":254374,"line_start":19,"line_end":19,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254502,"byte_end":254508,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"TypeId","qualname":"::internals::serialize::de::WorldDeserializer::TypeId","value":"type TypeId: for<'de> Deserialize<'de>;","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" The stable type ID used to identify each component type in the serialized data.\n","sig":null,"attributes":[{"value":"/ The stable type ID used to identify each component type in the serialized data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254409,"byte_end":254492,"line_start":21,"line_end":21,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254619,"byte_end":254627,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"unmap_id","qualname":"::internals::serialize::de::WorldDeserializer::unmap_id","value":"pub fn unmap_id(&Self, &Self::TypeId) -> Result<ComponentTypeId, UnknownType>","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Converts the serialized type ID into a runtime component type ID.\n","sig":null,"attributes":[{"value":"/ Converts the serialized type ID into a runtime component type ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254542,"byte_end":254611,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254773,"byte_end":254791,"line_start":28,"line_end":28,"column_start":8,"column_end":26},"name":"register_component","qualname":"::internals::serialize::de::WorldDeserializer::register_component","value":"pub fn register_component(&Self, Self::TypeId, &mut EntityLayout)","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Adds the specified component to the given entity layout.\n","sig":null,"attributes":[{"value":"/ Adds the specified component to the given entity layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254705,"byte_end":254765,"line_start":27,"line_end":27,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254942,"byte_end":254969,"line_start":31,"line_end":31,"column_start":8,"column_end":35},"name":"deserialize_component_slice","qualname":"::internals::serialize::de::WorldDeserializer::deserialize_component_slice","value":"pub fn deserialize_component_slice<'a, 'de,\n                                   D: Deserializer>(&Self, ComponentTypeId,\n                                                    UnknownComponentWriter, D)\n-> Result<(), D::Error>","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Deserializes a slice of components and inserts them into the given storage.\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of components and inserts them into the given storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":254855,"byte_end":254934,"line_start":30,"line_end":30,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":255236,"byte_end":255257,"line_start":39,"line_end":39,"column_start":8,"column_end":29},"name":"deserialize_component","qualname":"::internals::serialize::de::WorldDeserializer::deserialize_component","value":"pub fn deserialize_component<'de, D: Deserializer>(&Self, ComponentTypeId, D)\n-> Result<Box<[u8]>, D::Error>","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Deserializes a single component and returns it as a boxed u8 slice.\n","sig":null,"attributes":[{"value":"/ Deserializes a single component and returns it as a boxed u8 slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":255157,"byte_end":255228,"line_start":38,"line_end":38,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":255461,"byte_end":255483,"line_start":46,"line_end":46,"column_start":8,"column_end":30},"name":"with_entity_serializer","qualname":"::internals::serialize::de::WorldDeserializer::with_entity_serializer","value":"pub fn with_entity_serializer(&Self,\n                              &mut dyn FnMut(&dyn EntitySerializer) -> ())","parent":{"krate":0,"index":3160},"children":[],"decl_id":null,"docs":" Calls `callback` with the Entity ID serializer\n","sig":null,"attributes":[{"value":"/ Calls `callback` with the Entity ID serializer","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":255403,"byte_end":255453,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":271014,"byte_end":271030,"line_start":12,"line_end":12,"column_start":11,"column_end":27},"name":"EntitySerializer","qualname":"::internals::serialize::id::EntitySerializer","value":"EntitySerializer","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" Describes how to serialize and deserialize a runtime `Entity` ID.\n","sig":null,"attributes":[{"value":"/ Describes how to serialize and deserialize a runtime `Entity` ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":270934,"byte_end":271003,"line_start":11,"line_end":11,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":271163,"byte_end":271172,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"serialize","qualname":"::internals::serialize::id::EntitySerializer::serialize","value":"pub fn serialize(&Self, Entity,\n                 &mut dyn FnMut(&dyn erased_serde::Serialize) -> ())","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":" Serializes an `Entity` by constructing the serializable representation\n and passing it into `serialize_fn`.\n","sig":null,"attributes":[{"value":"/ Serializes an `Entity` by constructing the serializable representation","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":271037,"byte_end":271111,"line_start":13,"line_end":13,"column_start":5,"column_end":79}},{"value":"/ and passing it into `serialize_fn`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":271116,"byte_end":271155,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":271299,"byte_end":271310,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::internals::serialize::id::EntitySerializer::deserialize","value":"pub fn deserialize(&Self, &mut dyn erased_serde::Deserializer)\n-> Result<Entity, erased_serde::Error>","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":" Deserializes an `Entity`.\n","sig":null,"attributes":[{"value":"/ Deserializes an `Entity`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":271262,"byte_end":271291,"line_start":17,"line_end":17,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274370,"byte_end":274380,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"name":"EntityName","qualname":"::internals::serialize::id::EntityName","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" A 16 byte UUID which uniquely identifies an entity.\n","sig":null,"attributes":[{"value":"/ A 16 byte UUID which uniquely identifies an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274305,"byte_end":274360,"line_start":105,"line_end":105,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11047},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274661,"byte_end":274679,"line_start":113,"line_end":113,"column_start":5,"column_end":23},"name":"EntityAlreadyBound","qualname":"::internals::serialize::id::CanonizeError::EntityAlreadyBound","value":"CanonizeError::EntityAlreadyBound(Entity, EntityName)","parent":{"krate":0,"index":11046},"children":[],"decl_id":null,"docs":" The entity already exists bound to a different name.\n","sig":null,"attributes":[{"value":"/ The entity already exists bound to a different name.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274542,"byte_end":274598,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"error(\"the entity is already bound to name {0:?}\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274603,"byte_end":274656,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11051},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274830,"byte_end":274846,"line_start":116,"line_end":116,"column_start":5,"column_end":21},"name":"NameAlreadyBound","qualname":"::internals::serialize::id::CanonizeError::NameAlreadyBound","value":"CanonizeError::NameAlreadyBound(Entity, EntityName)","parent":{"krate":0,"index":11046},"children":[],"decl_id":null,"docs":" The name already exists bound to a different entity.\n","sig":null,"attributes":[{"value":"/ The name already exists bound to a different entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274705,"byte_end":274761,"line_start":114,"line_end":114,"column_start":5,"column_end":61}},{"value":"error(\"the name is already bound to a different entity\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274766,"byte_end":274825,"line_start":115,"line_end":115,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":11046},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274522,"byte_end":274535,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"CanonizeError","qualname":"::internals::serialize::id::CanonizeError","value":"pub enum CanonizeError {\n    EntityAlreadyBound(Entity, EntityName),\n    NameAlreadyBound(Entity, EntityName),\n}","parent":null,"children":[{"krate":0,"index":11047},{"krate":0,"index":11051}],"decl_id":null,"docs":" Error returned on unsucessful attempt to canonize an entity.\n","sig":null,"attributes":[{"value":"/ Error returned on unsucessful attempt to canonize an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274394,"byte_end":274458,"line_start":108,"line_end":108,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":11070},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274950,"byte_end":274955,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"Canon","qualname":"::internals::serialize::id::Canon","value":"Canon {  }","parent":null,"children":[{"krate":0,"index":11071},{"krate":0,"index":11072},{"krate":0,"index":11073}],"decl_id":null,"docs":" Contains the canon names of entities.\n","sig":null,"attributes":[{"value":"/ Contains the canon names of entities.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":274871,"byte_end":274912,"line_start":119,"line_end":119,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275222,"byte_end":275228,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"get_id","qualname":"<Canon>::get_id","value":"pub fn get_id(&Self, &EntityName) -> Option<Entity>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [Entity](struct.Entity.html) ID associated with the given [EntityName](struct.EntityName.html).\n","sig":null,"attributes":[{"value":"/ Returns the [Entity](struct.Entity.html) ID associated with the given [EntityName](struct.EntityName.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275099,"byte_end":275210,"line_start":128,"line_end":128,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275447,"byte_end":275455,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"get_name","qualname":"<Canon>::get_name","value":"pub fn get_name(&Self, Entity) -> Option<EntityName>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [EntityName](struct.EntityName.html) associated with the given [Entity](struct.Entity.html) ID.\n","sig":null,"attributes":[{"value":"/ Returns the [EntityName](struct.EntityName.html) associated with the given [Entity](struct.Entity.html) ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275324,"byte_end":275435,"line_start":133,"line_end":133,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275687,"byte_end":275700,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"canonize_name","qualname":"<Canon>::canonize_name","value":"pub fn canonize_name(&mut Self, &EntityName) -> Entity","parent":null,"children":[],"decl_id":null,"docs":" Canonizes a given [EntityName](struct.EntityName.html) and returns the associated [Entity](struct.Entity.html) ID.\n","sig":null,"attributes":[{"value":"/ Canonizes a given [EntityName](struct.EntityName.html) and returns the associated [Entity](struct.Entity.html) ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275557,"byte_end":275675,"line_start":138,"line_end":138,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":276220,"byte_end":276231,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"canonize_id","qualname":"<Canon>::canonize_id","value":"pub fn canonize_id(&mut Self, Entity) -> EntityName","parent":null,"children":[],"decl_id":null,"docs":" Canonizes a given [Entity](struct.Entity.html) ID and returns the associated [EntityName](struct.EntityName.html).\n","sig":null,"attributes":[{"value":"/ Canonizes a given [Entity](struct.Entity.html) ID and returns the associated [EntityName](struct.EntityName.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":276090,"byte_end":276208,"line_start":151,"line_end":151,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":276702,"byte_end":276710,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"canonize","qualname":"<Canon>::canonize","value":"pub fn canonize(&mut Self, Entity, EntityName) -> Result<(), CanonizeError>","parent":null,"children":[],"decl_id":null,"docs":" Canonizes the given entity and name pair.\n","sig":null,"attributes":[{"value":"/ Canonizes the given entity and name pair.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":276645,"byte_end":276690,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3545},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278645,"byte_end":278660,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"WorldSerializer","qualname":"::internals::serialize::ser::WorldSerializer","value":"WorldSerializer","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552}],"decl_id":null,"docs":" Describes a type which knows how to deserialize the components in a world.\n","sig":null,"attributes":[{"value":"/ Describes a type which knows how to deserialize the components in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278556,"byte_end":278634,"line_start":13,"line_end":13,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278760,"byte_end":278766,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"TypeId","qualname":"::internals::serialize::ser::WorldSerializer::TypeId","value":"type TypeId: Serialize + Ord;","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" The stable type ID used to identify each component type in the serialized data.\n","sig":null,"attributes":[{"value":"/ The stable type ID used to identify each component type in the serialized data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278667,"byte_end":278750,"line_start":15,"line_end":15,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278867,"byte_end":278873,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"map_id","qualname":"::internals::serialize::ser::WorldSerializer::map_id","value":"pub fn map_id(&Self, ComponentTypeId) -> Result<Self::TypeId, UnknownType>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Converts a runtime component type ID into the serialized type ID.\n","sig":null,"attributes":[{"value":"/ Converts a runtime component type ID into the serialized type ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278790,"byte_end":278859,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279149,"byte_end":279168,"line_start":26,"line_end":26,"column_start":15,"column_end":34},"name":"serialize_component","qualname":"::internals::serialize::ser::WorldSerializer::serialize_component","value":"pub unsafe fn serialize_component<S: Serializer>(&Self, ComponentTypeId,\n                                                 *const u8, S)\n-> Result<S::Ok, S::Error>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Serializes a single component.","sig":null,"attributes":[{"value":"/ Serializes a single component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278950,"byte_end":278984,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278989,"byte_end":278992,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":278997,"byte_end":279009,"line_start":23,"line_end":23,"column_start":5,"column_end":17}},{"value":"/ The pointer must point to a valid instance of the component type represented by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279014,"byte_end":279097,"line_start":24,"line_end":24,"column_start":5,"column_end":88}},{"value":"/ the given component type ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279102,"byte_end":279134,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279517,"byte_end":279542,"line_start":38,"line_end":38,"column_start":15,"column_end":40},"name":"serialize_component_slice","qualname":"::internals::serialize::ser::WorldSerializer::serialize_component_slice","value":"pub unsafe fn serialize_component_slice<S: Serializer>(&Self, ComponentTypeId,\n                                                       &dyn\n                                                        UnknownComponentStorage,\n                                                       ArchetypeIndex, S)\n-> Result<S::Ok, S::Error>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Serializes a slice of components.","sig":null,"attributes":[{"value":"/ Serializes a slice of components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279315,"byte_end":279352,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279357,"byte_end":279360,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279365,"byte_end":279377,"line_start":35,"line_end":35,"column_start":5,"column_end":17}},{"value":"/ The pointer must point to a valid instance of the component type represented by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279382,"byte_end":279465,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ the given component type ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279470,"byte_end":279502,"line_start":37,"line_end":37,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279805,"byte_end":279827,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"with_entity_serializer","qualname":"::internals::serialize::ser::WorldSerializer::with_entity_serializer","value":"pub fn with_entity_serializer(&Self,\n                              &mut dyn FnMut(&dyn EntitySerializer) -> ())","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":" Calls `callback` with the Entity ID serializer\n","sig":null,"attributes":[{"value":"/ Calls `callback` with the Entity ID serializer","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279747,"byte_end":279797,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3553},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279945,"byte_end":279962,"line_start":51,"line_end":51,"column_start":12,"column_end":29},"name":"SerializableWorld","qualname":"::internals::serialize::ser::SerializableWorld","value":"SerializableWorld {  }","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559}],"decl_id":null,"docs":" A serializable representation of a world.\n","sig":null,"attributes":[{"value":"/ A serializable representation of a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":279888,"byte_end":279933,"line_start":50,"line_end":50,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213660,"byte_end":213667,"line_start":30,"line_end":30,"column_start":11,"column_end":18},"name":"TypeKey","qualname":"::internals::serialize::TypeKey","value":"TypeKey: serde::Serialize + for<'de> serde::Deserialize + Ord + Clone + Hash","parent":null,"children":[],"decl_id":null,"docs":" A (de)serializable type which can represent a component type in a serialized world.","sig":null,"attributes":[{"value":"/ A (de)serializable type which can represent a component type in a serialized world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213498,"byte_end":213585,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213586,"byte_end":213589,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait has a blanket impl for all applicable types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213590,"byte_end":213649,"line_start":29,"line_end":29,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213956,"byte_end":213967,"line_start":40,"line_end":40,"column_start":11,"column_end":22},"name":"AutoTypeKey","qualname":"::internals::serialize::AutoTypeKey","value":"AutoTypeKey<T: Component>: TypeKey","parent":null,"children":[{"krate":0,"index":3584}],"decl_id":null,"docs":" A [TypeKey](trait.TypeKey.html) which can construct itself for a given type T.\n","sig":null,"attributes":[{"value":"/ A [TypeKey](trait.TypeKey.html) which can construct itself for a given type T.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213863,"byte_end":213945,"line_start":39,"line_end":39,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214056,"byte_end":214059,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"new","qualname":"::internals::serialize::AutoTypeKey::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":3582},"children":[],"decl_id":null,"docs":" Constructs the type key for component type `T`.\n","sig":null,"attributes":[{"value":"/ Constructs the type key for component type `T`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213997,"byte_end":214048,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11079},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214694,"byte_end":214700,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::internals::serialize::UnknownType::Ignore","value":"UnknownType::Ignore","parent":{"krate":0,"index":11078},"children":[],"decl_id":null,"docs":" Ignore the component.\n","sig":null,"attributes":[{"value":"/ Ignore the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214664,"byte_end":214689,"line_start":58,"line_end":58,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11081},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214754,"byte_end":214759,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Error","qualname":"::internals::serialize::UnknownType::Error","value":"UnknownType::Error","parent":{"krate":0,"index":11078},"children":[],"decl_id":null,"docs":" Abort (de)serialization wwith an error.\n","sig":null,"attributes":[{"value":"/ Abort (de)serialization wwith an error.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214706,"byte_end":214749,"line_start":60,"line_end":60,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":11078},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214646,"byte_end":214657,"line_start":57,"line_end":57,"column_start":10,"column_end":21},"name":"UnknownType","qualname":"::internals::serialize::UnknownType","value":"pub enum UnknownType { Ignore, Error, }","parent":null,"children":[{"krate":0,"index":11079},{"krate":0,"index":11081}],"decl_id":null,"docs":" An error type describing what to do when a component type is unrecognized.\n","sig":null,"attributes":[{"value":"/ An error type describing what to do when a component type is unrecognized.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214558,"byte_end":214636,"line_start":56,"line_end":56,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":3589},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214844,"byte_end":214866,"line_start":65,"line_end":65,"column_start":11,"column_end":33},"name":"CustomEntitySerializer","qualname":"::internals::serialize::CustomEntitySerializer","value":"CustomEntitySerializer","parent":null,"children":[{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3593}],"decl_id":null,"docs":" Describes how to serialize and deserialize a runtime `Entity` ID.\n","sig":null,"attributes":[{"value":"/ Describes how to serialize and deserialize a runtime `Entity` ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214764,"byte_end":214833,"line_start":64,"line_end":64,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214878,"byte_end":214890,"line_start":66,"line_end":66,"column_start":10,"column_end":22},"name":"SerializedID","qualname":"::internals::serialize::CustomEntitySerializer::SerializedID","value":"type SerializedID: serde::Serialize + for<'a> serde::Deserialize<'a>;","parent":{"krate":0,"index":3589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215013,"byte_end":215026,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"to_serialized","qualname":"::internals::serialize::CustomEntitySerializer::to_serialized","value":"pub fn to_serialized(&mut Self, Entity) -> Self::SerializedID","parent":{"krate":0,"index":3589},"children":[],"decl_id":null,"docs":" Constructs the serializable representation of `Entity`\n","sig":null,"attributes":[{"value":"/ Constructs the serializable representation of `Entity`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":214947,"byte_end":215005,"line_start":67,"line_end":67,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215138,"byte_end":215153,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"from_serialized","qualname":"::internals::serialize::CustomEntitySerializer::from_serialized","value":"pub fn from_serialized(&mut Self, Self::SerializedID) -> Entity","parent":{"krate":0,"index":3589},"children":[],"decl_id":null,"docs":" Convert a `SerializedEntity` to an `Entity`.\n","sig":null,"attributes":[{"value":"/ Convert a `SerializedEntity` to an `Entity`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215082,"byte_end":215130,"line_start":70,"line_end":70,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215689,"byte_end":215697,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"Registry","qualname":"::internals::serialize::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3602}],"decl_id":null,"docs":" A world (de)serializer which describes how to (de)serialize the component types in a world.","sig":null,"attributes":[{"value":"/ A world (de)serializer which describes how to (de)serialize the component types in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215211,"byte_end":215306,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215307,"byte_end":215310,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the key used in the serialized output to identify each","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215311,"byte_end":215403,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ component type. The type keys used must uniquely identify each component type, and be stable","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215404,"byte_end":215500,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/ between recompiles.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215501,"byte_end":215524,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215525,"byte_end":215528,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ See the [legion_typeuuid crate](https://github.com/TomGillen/legion_typeuuid) for an example","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215529,"byte_end":215625,"line_start":80,"line_end":80,"column_start":1,"column_end":97}},{"value":"/ of a type key which is stable between compiles.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":215626,"byte_end":215677,"line_start":81,"line_end":81,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216334,"byte_end":216337,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Registry<T, S>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new registry.\n","sig":null,"attributes":[{"value":"/ Constructs a new registry.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216292,"byte_end":216322,"line_start":109,"line_end":109,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216743,"byte_end":216753,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"on_unknown","qualname":"<Registry<T, S>>::on_unknown","value":"pub fn on_unknown(&mut Self, UnknownType)","parent":null,"children":[],"decl_id":null,"docs":" Sets the behavior to use when a component type is unknown.\n","sig":null,"attributes":[{"value":"/ Sets the behavior to use when a component type is unknown.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216669,"byte_end":216731,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216905,"byte_end":216913,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry<T, S>>::register","value":"pub fn register<C: Component + serde::Serialize +\n                for<'de> serde::Deserialize>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Registers a component type and its key with the registry.\n","sig":null,"attributes":[{"value":"/ Registers a component type and its key with the registry.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216832,"byte_end":216893,"line_start":126,"line_end":126,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219113,"byte_end":219133,"line_start":182,"line_end":182,"column_start":12,"column_end":32},"name":"register_auto_mapped","qualname":"<Registry<T, S>>::register_auto_mapped","value":"pub fn register_auto_mapped<C: Component + serde::Serialize +\n                            for<'de> serde::Deserialize>(&mut Self) where\nT: AutoTypeKey<C>","parent":null,"children":[],"decl_id":null,"docs":" Registers a component type and its key with the registry.\n","sig":null,"attributes":[{"value":"/ Registers a component type and its key with the registry.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219040,"byte_end":219101,"line_start":181,"line_end":181,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219448,"byte_end":219473,"line_start":193,"line_end":193,"column_start":12,"column_end":37},"name":"as_deserialize_into_world","qualname":"<Registry<T, S>>::as_deserialize_into_world","value":"pub fn as_deserialize_into_world<'a>(&'a Self, &'a mut World)\n-> DeserializeIntoWorld","parent":null,"children":[],"decl_id":null,"docs":" Constructs a serde::DeserializeSeed which will deserialize into an existing world.\n","sig":null,"attributes":[{"value":"/ Constructs a serde::DeserializeSeed which will deserialize into an existing world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219350,"byte_end":219436,"line_start":192,"line_end":192,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219715,"byte_end":219729,"line_start":201,"line_end":201,"column_start":12,"column_end":26},"name":"as_deserialize","qualname":"<Registry<T, S>>::as_deserialize","value":"pub fn as_deserialize(&Self) -> DeserializeNewWorld<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a serde::DeserializeSeed which will deserialize into a new world.\n","sig":null,"attributes":[{"value":"/ Constructs a serde::DeserializeSeed which will deserialize into a new world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219623,"byte_end":219703,"line_start":200,"line_end":200,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":226906,"byte_end":226926,"line_start":426,"line_end":426,"column_start":12,"column_end":32},"name":"DeserializeIntoWorld","qualname":"::internals::serialize::DeserializeIntoWorld","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps a [WorldDeserializer](de/trait.WorldDeserializer.html) and a world and implements\n `serde::DeserializeSeed` for deserializing into the world.\n","sig":null,"attributes":[{"value":"/ Wraps a [WorldDeserializer](de/trait.WorldDeserializer.html) and a world and implements","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":226740,"byte_end":226831,"line_start":424,"line_end":424,"column_start":1,"column_end":92}},{"value":"/ `serde::DeserializeSeed` for deserializing into the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":226832,"byte_end":226894,"line_start":425,"line_end":425,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":226953,"byte_end":226962,"line_start":426,"line_end":426,"column_start":59,"column_end":68},"name":"0","qualname":"::internals::serialize::DeserializeIntoWorld::0","value":"&'a T","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3697},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":226964,"byte_end":226981,"line_start":426,"line_end":426,"column_start":70,"column_end":87},"name":"1","qualname":"::internals::serialize::DeserializeIntoWorld::1","value":"&'a mut internals::world::World","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227539,"byte_end":227558,"line_start":444,"line_end":444,"column_start":12,"column_end":31},"name":"DeserializeNewWorld","qualname":"::internals::serialize::DeserializeNewWorld","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps a [WorldDeserializer](de/trait.WorldDeserializer.html) and a universe and implements\n `serde::DeserializeSeed` for deserializing into a new world.\n","sig":null,"attributes":[{"value":"/ Wraps a [WorldDeserializer](de/trait.WorldDeserializer.html) and a universe and implements","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227368,"byte_end":227462,"line_start":442,"line_end":442,"column_start":1,"column_end":95}},{"value":"/ `serde::DeserializeSeed` for deserializing into a new world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227463,"byte_end":227527,"line_start":443,"line_end":443,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227585,"byte_end":227594,"line_start":444,"line_end":444,"column_start":58,"column_end":67},"name":"0","qualname":"::internals::serialize::DeserializeNewWorld::0","value":"&'a T","parent":{"krate":0,"index":3705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11136},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":299835,"byte_end":299849,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"ArchetypeIndex","qualname":"::internals::storage::archetype::ArchetypeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" The index of an archetype in a world.\n","sig":null,"attributes":[{"value":"/ The index of an archetype in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":299629,"byte_end":299670,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":299803,"byte_end":299823,"line_start":29,"line_end":29,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":11138},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":299850,"byte_end":299857,"line_start":30,"line_end":30,"column_start":27,"column_end":34},"name":"0","qualname":"::internals::storage::archetype::ArchetypeIndex::0","value":"u32","parent":{"krate":0,"index":11136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11179},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300672,"byte_end":300681,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"Archetype","qualname":"::internals::storage::archetype::Archetype","value":"Archetype {  }","parent":null,"children":[{"krate":0,"index":11180},{"krate":0,"index":11181},{"krate":0,"index":11182},{"krate":0,"index":11183}],"decl_id":null,"docs":" An archetype is a collection of entities which all have identical component types.\n","sig":null,"attributes":[{"value":"/ An archetype is a collection of entities which all have identical component types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300557,"byte_end":300643,"line_start":60,"line_end":60,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301218,"byte_end":301223,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"index","qualname":"<Archetype>::index","value":"pub fn index(&Self) -> ArchetypeIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the archetype.\n","sig":null,"attributes":[{"value":"/ Returns the index of the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301167,"byte_end":301206,"line_start":84,"line_end":84,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301430,"byte_end":301436,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"layout","qualname":"<Archetype>::layout","value":"pub fn layout(&Self) -> &Arc<EntityLayout>","parent":null,"children":[],"decl_id":null,"docs":" Returns the layout of the archetype, describing which components are attached\n to all entities contained within the archetype.\n","sig":null,"attributes":[{"value":"/ Returns the layout of the archetype, describing which components are attached","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301281,"byte_end":301362,"line_start":89,"line_end":89,"column_start":5,"column_end":86}},{"value":"/ to all entities contained within the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301367,"byte_end":301418,"line_start":90,"line_end":90,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3830},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301593,"byte_end":301601,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"entities","qualname":"<Archetype>::entities","value":"pub fn entities(&Self) -> &[Entity]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of entity IDs for all entities which belong to the archetype.\n","sig":null,"attributes":[{"value":"/ Returns a slice of entity IDs for all entities which belong to the archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":301500,"byte_end":301581,"line_start":95,"line_end":95,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":11186},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303119,"byte_end":303131,"line_start":147,"line_end":147,"column_start":12,"column_end":24},"name":"EntityLayout","qualname":"::internals::storage::archetype::EntityLayout","value":"EntityLayout {  }","parent":null,"children":[{"krate":0,"index":11187},{"krate":0,"index":11188}],"decl_id":null,"docs":" Describes the component types which are attached to an entity.\n","sig":null,"attributes":[{"value":"/ Describes the component types which are attached to an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303008,"byte_end":303074,"line_start":145,"line_end":145,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303321,"byte_end":303324,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<EntityLayout>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new entity layout.\n","sig":null,"attributes":[{"value":"/ Constructs a new entity layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303274,"byte_end":303309,"line_start":153,"line_end":153,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303423,"byte_end":303441,"line_start":159,"line_end":159,"column_start":12,"column_end":30},"name":"register_component","qualname":"<EntityLayout>::register_component","value":"pub fn register_component<T: Component>(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds a new component to the layout.\n","sig":null,"attributes":[{"value":"/ Adds a new component to the layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303372,"byte_end":303411,"line_start":158,"line_end":158,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304050,"byte_end":304072,"line_start":175,"line_end":175,"column_start":19,"column_end":41},"name":"register_component_raw","qualname":"<EntityLayout>::register_component_raw","value":"pub unsafe fn register_component_raw(&mut Self, ComponentTypeId,\n                                     fn() -> Box<dyn UnknownComponentStorage>)","parent":null,"children":[],"decl_id":null,"docs":" Adds a new component to the layout.","sig":null,"attributes":[{"value":"/ Adds a new component to the layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303821,"byte_end":303860,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303865,"byte_end":303868,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303873,"byte_end":303885,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"/ The storage returned from the storage constructor function must be capable","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303890,"byte_end":303968,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ of storing the component type identified by `type_id`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303973,"byte_end":304031,"line_start":174,"line_end":174,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304535,"byte_end":304550,"line_start":189,"line_end":189,"column_start":12,"column_end":27},"name":"component_types","qualname":"<EntityLayout>::component_types","value":"pub fn component_types(&Self) -> &[ComponentTypeId]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of component type IDs for the components inside the layout.\n","sig":null,"attributes":[{"value":"/ Returns a slice of component type IDs for the components inside the layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304444,"byte_end":304523,"line_start":188,"line_end":188,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304731,"byte_end":304753,"line_start":195,"line_end":195,"column_start":12,"column_end":34},"name":"component_constructors","qualname":"<EntityLayout>::component_constructors","value":"pub fn component_constructors(&Self)\n-> &[fn() -> Box<dyn UnknownComponentStorage>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of storage constructors for each component type in the layout.\n","sig":null,"attributes":[{"value":"/ Returns a slice of storage constructors for each component type in the layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304618,"byte_end":304700,"line_start":193,"line_end":193,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304937,"byte_end":304950,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"has_component","qualname":"<EntityLayout>::has_component","value":"pub fn has_component<T: Component>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the layout contains the given component type.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the layout contains the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":304858,"byte_end":304925,"line_start":199,"line_end":199,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":305133,"byte_end":305152,"line_start":205,"line_end":205,"column_start":12,"column_end":31},"name":"has_component_by_id","qualname":"<EntityLayout>::has_component_by_id","value":"pub fn has_component_by_id(&Self, ComponentTypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the layout contains the given component type.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the layout contains the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":305054,"byte_end":305121,"line_start":204,"line_end":204,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11195},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306349,"byte_end":306364,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"ComponentTypeId","qualname":"::internals::storage::component::ComponentTypeId","value":"ComponentTypeId {  }","parent":null,"children":[{"krate":0,"index":11196},{"krate":0,"index":11197}],"decl_id":null,"docs":" A unique ID for a component type.\n","sig":null,"attributes":[{"value":"/ A unique ID for a component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306249,"byte_end":306286,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306560,"byte_end":306562,"line_start":20,"line_end":20,"column_start":12,"column_end":14},"name":"of","qualname":"<ComponentTypeId>::of","value":"pub fn of<T: Component>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs the component type ID for the given component type.\n","sig":null,"attributes":[{"value":"/ Constructs the component type ID for the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306482,"byte_end":306548,"line_start":19,"line_end":19,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306809,"byte_end":306816,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"type_id","qualname":"<ComponentTypeId>::type_id","value":"pub fn type_id(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Returns the internal TypeID of the component.\n","sig":null,"attributes":[{"value":"/ Returns the internal TypeID of the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306748,"byte_end":306797,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307584,"byte_end":307593,"line_start":61,"line_end":61,"column_start":11,"column_end":20},"name":"Component","qualname":"::internals::storage::component::Component","value":"Component: 'static + Sized + Send + Sync","parent":null,"children":[{"krate":0,"index":3889}],"decl_id":null,"docs":" A marker trait for all types which can be attached to an entity.","sig":null,"attributes":[{"value":"/ A marker trait for all types which can be attached to an entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307441,"byte_end":307509,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307510,"byte_end":307513,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This trait has a blanket impl for all applicable types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307514,"byte_end":307573,"line_start":60,"line_end":60,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307722,"byte_end":307729,"line_start":63,"line_end":63,"column_start":10,"column_end":17},"name":"Storage","qualname":"::internals::storage::component::Component::Storage","value":"type Storage: for<'a> ComponentStorage<'a, Self>;","parent":{"krate":0,"index":3888},"children":[],"decl_id":null,"docs":" The storage type required to hold all instances of this component in a world.\n","sig":null,"attributes":[{"value":"/ The storage type required to hold all instances of this component in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307631,"byte_end":307712,"line_start":62,"line_end":62,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":11210},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308191,"byte_end":308199,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"GroupDef","qualname":"::internals::storage::group::GroupDef","value":"GroupDef {  }","parent":null,"children":[{"krate":0,"index":11211}],"decl_id":null,"docs":" Describes the components in a component group.\n","sig":null,"attributes":[{"value":"/ Describes the components in a component group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308110,"byte_end":308160,"line_start":8,"line_end":8,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308312,"byte_end":308315,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<GroupDef>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new component group.\n","sig":null,"attributes":[{"value":"/ Constructs a new component group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308263,"byte_end":308300,"line_start":15,"line_end":15,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3922},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308448,"byte_end":308456,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<GroupDef>::from_vec","value":"pub fn from_vec(Vec<ComponentTypeId>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new component group from a vector of component type IDs.\n","sig":null,"attributes":[{"value":"/ Constructs a new component group from a vector of component type IDs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308363,"byte_end":308436,"line_start":20,"line_end":20,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308825,"byte_end":308828,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"add","qualname":"<GroupDef>::add","value":"pub fn add(&mut Self, ComponentTypeId)","parent":null,"children":[],"decl_id":null,"docs":" Adds a new component to the end of the group.\n","sig":null,"attributes":[{"value":"/ Adds a new component to the end of the group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308764,"byte_end":308813,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":11214},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309331,"byte_end":309339,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"SubGroup","qualname":"::internals::storage::group::SubGroup","value":"","parent":null,"children":[],"decl_id":null,"docs":" The index of a the last component which defines a subset of a component group.\n","sig":null,"attributes":[{"value":"/ The index of a the last component which defines a subset of a component group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309192,"byte_end":309274,"line_start":47,"line_end":47,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":11216},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309340,"byte_end":309349,"line_start":49,"line_end":49,"column_start":21,"column_end":30},"name":"0","qualname":"::internals::storage::group::SubGroup::0","value":"usize","parent":{"krate":0,"index":11214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11229},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309396,"byte_end":309401,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Group","qualname":"::internals::storage::group::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":11230},{"krate":0,"index":11232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3943},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":312087,"byte_end":312098,"line_start":146,"line_end":146,"column_start":11,"column_end":22},"name":"GroupSource","qualname":"::internals::storage::group::GroupSource","value":"GroupSource","parent":null,"children":[{"krate":0,"index":3944}],"decl_id":null,"docs":" A type which defines a component group.\n","sig":null,"attributes":[{"value":"/ A type which defines a component group.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":312033,"byte_end":312076,"line_start":145,"line_end":145,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":312144,"byte_end":312152,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"to_group","qualname":"::internals::storage::group::GroupSource::to_group","value":"pub fn to_group() -> GroupDef","parent":{"krate":0,"index":3943},"children":[],"decl_id":null,"docs":" Creates a group definition.\n","sig":null,"attributes":[{"value":"/ Creates a group definition.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":312105,"byte_end":312136,"line_start":147,"line_end":147,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11298},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313362,"byte_end":313373,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"SearchIndex","qualname":"::internals::storage::index::SearchIndex","value":"SearchIndex {  }","parent":null,"children":[{"krate":0,"index":11299}],"decl_id":null,"docs":" An index of archetype layouts used to accelerate query evaluation.\n","sig":null,"attributes":[{"value":"/ An index of archetype layouts used to accelerate query evaluation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313254,"byte_end":313324,"line_start":10,"line_end":10,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313779,"byte_end":313790,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"search_from","qualname":"<SearchIndex>::search_from","value":"pub fn search_from<'a, F: LayoutFilter>(&'a Self, &'a F, usize)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over archetype indexes for archetypes which match the given layout filter,\n starting from the given index.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over archetype indexes for archetypes which match the given layout filter,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313630,"byte_end":313728,"line_start":22,"line_end":22,"column_start":5,"column_end":103}},{"value":"/ starting from the given index.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313733,"byte_end":313767,"line_start":23,"line_end":23,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":314291,"byte_end":314297,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"search","qualname":"<SearchIndex>::search","value":"pub fn search<'a, F: LayoutFilter>(&'a Self, &'a F) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over archetype indexes for archetypes which match the given layout filter.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over archetype indexes for archetypes which match the given layout filter.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":314181,"byte_end":314279,"line_start":36,"line_end":36,"column_start":5,"column_end":103}}]},{"kind":"Struct","id":{"krate":0,"index":11325},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322817,"byte_end":322830,"line_start":281,"line_end":281,"column_start":12,"column_end":25},"name":"PackedStorage","qualname":"::internals::storage::packed::PackedStorage","value":"PackedStorage {  }","parent":null,"children":[{"krate":0,"index":11327},{"krate":0,"index":11328},{"krate":0,"index":11329},{"krate":0,"index":11330},{"krate":0,"index":11331},{"krate":0,"index":11332}],"decl_id":null,"docs":" Stores a slice of components of type `T` for each archetype.\n Archetype slices are sorted according to the group that component `T` belongs to.\n Each slice _may_ be packed into a single allocation to optimise for group-based access.\n","sig":null,"attributes":[{"value":"/ Stores a slice of components of type `T` for each archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322546,"byte_end":322610,"line_start":277,"line_end":277,"column_start":1,"column_end":65}},{"value":"/ Archetype slices are sorted according to the group that component `T` belongs to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322611,"byte_end":322696,"line_start":278,"line_end":278,"column_start":1,"column_end":86}},{"value":"/ Each slice _may_ be packed into a single allocation to optimise for group-based access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322697,"byte_end":322788,"line_start":279,"line_end":279,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":4115},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":333136,"byte_end":333149,"line_start":583,"line_end":583,"column_start":12,"column_end":25},"name":"ComponentIter","qualname":"::internals::storage::packed::ComponentIter","value":"ComponentIter {  }","parent":null,"children":[{"krate":0,"index":4118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":333694,"byte_end":333710,"line_start":601,"line_end":601,"column_start":12,"column_end":28},"name":"ComponentIterMut","qualname":"::internals::storage::packed::ComponentIterMut","value":"ComponentIterMut {  }","parent":null,"children":[{"krate":0,"index":4128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11356},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":282691,"byte_end":282704,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"ComponentMeta","qualname":"::internals::storage::ComponentMeta","value":"ComponentMeta {  }","parent":null,"children":[{"krate":0,"index":11357},{"krate":0,"index":11358},{"krate":0,"index":11359}],"decl_id":null,"docs":" Contains information about the type of a component.\n","sig":null,"attributes":[{"value":"/ Contains information about the type of a component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":282590,"byte_end":282645,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":282869,"byte_end":282871,"line_start":29,"line_end":29,"column_start":12,"column_end":14},"name":"of","qualname":"<ComponentMeta>::of","value":"pub fn of<T: Component>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the component meta of component type `T`.\n","sig":null,"attributes":[{"value":"/ Returns the component meta of component type `T`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":282804,"byte_end":282857,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4168},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283272,"byte_end":283276,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"size","qualname":"<ComponentMeta>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the component.\n","sig":null,"attributes":[{"value":"/ Returns the size of the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283222,"byte_end":283260,"line_start":41,"line_end":41,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283379,"byte_end":283384,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"align","qualname":"<ComponentMeta>::align","value":"pub fn align(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the alignment of the component.\n","sig":null,"attributes":[{"value":"/ Returns the alignment of the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283324,"byte_end":283367,"line_start":46,"line_end":46,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283638,"byte_end":283642,"line_start":56,"line_end":56,"column_start":19,"column_end":23},"name":"drop","qualname":"<ComponentMeta>::drop","value":"pub unsafe fn drop(&Self, *mut u8)","parent":null,"children":[],"decl_id":null,"docs":" Drops the component.","sig":null,"attributes":[{"value":"/ Drops the component.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283433,"byte_end":283457,"line_start":51,"line_end":51,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283462,"byte_end":283465,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283470,"byte_end":283482,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ The caller must ensure that the memory location refered to by `value` is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283487,"byte_end":283563,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ not accessed again before it is re-initialized.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283568,"byte_end":283619,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":11367},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283889,"byte_end":283903,"line_start":65,"line_end":65,"column_start":12,"column_end":26},"name":"ComponentIndex","qualname":"::internals::storage::ComponentIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" The index of a component within an archetype.\n","sig":null,"attributes":[{"value":"/ The index of a component within an archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283760,"byte_end":283809,"line_start":63,"line_end":63,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284068,"byte_end":284073,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Epoch","qualname":"::internals::storage::Epoch","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" A world epoch. Epochs are incremented each time a world is packed, and are used\n by the packing heuristics as a measure of age.\n","sig":null,"attributes":[{"value":"/ A world epoch. Epochs are incremented each time a world is packed, and are used","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":283924,"byte_end":284007,"line_start":67,"line_end":67,"column_start":1,"column_end":84}},{"value":"/ by the packing heuristics as a measure of age.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284008,"byte_end":284058,"line_start":68,"line_end":68,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284195,"byte_end":284202,"line_start":73,"line_end":73,"column_start":10,"column_end":17},"name":"Version","qualname":"::internals::storage::Version","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The version of a component slice. Versions are incremented when the sliace is\n accessed mutably.\n","sig":null,"attributes":[{"value":"/ The version of a component slice. Versions are incremented when the sliace is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284082,"byte_end":284163,"line_start":71,"line_end":71,"column_start":1,"column_end":82}},{"value":"/ accessed mutably.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284164,"byte_end":284185,"line_start":72,"line_end":72,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":4175},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284579,"byte_end":284602,"line_start":82,"line_end":82,"column_start":11,"column_end":34},"name":"UnknownComponentStorage","qualname":"::internals::storage::UnknownComponentStorage","value":"UnknownComponentStorage: Downcast + Send + Sync","parent":null,"children":[{"krate":0,"index":4176},{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188}],"decl_id":null,"docs":" A storage location for component data slices. Each component storage may hold once slice for\n each archetype inserted into the storage. The type of component stored is not known statically.\n","sig":null,"attributes":[{"value":"/ A storage location for component data slices. Each component storage may hold once slice for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284372,"byte_end":284468,"line_start":80,"line_end":80,"column_start":1,"column_end":97}},{"value":"/ each archetype inserted into the storage. The type of component stored is not known statically.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284469,"byte_end":284568,"line_start":81,"line_end":81,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284694,"byte_end":284709,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"increment_epoch","qualname":"::internals::storage::UnknownComponentStorage::increment_epoch","value":"pub fn increment_epoch(&mut Self)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Notifies the storage of the start of a new epoch.\n","sig":null,"attributes":[{"value":"/ Notifies the storage of the start of a new epoch.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284633,"byte_end":284686,"line_start":83,"line_end":83,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284810,"byte_end":284826,"line_start":87,"line_end":87,"column_start":8,"column_end":24},"name":"insert_archetype","qualname":"::internals::storage::UnknownComponentStorage::insert_archetype","value":"pub fn insert_archetype(&mut Self, ArchetypeIndex, Option<usize>)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Inserts a new empty component slice for an archetype into this storage.\n","sig":null,"attributes":[{"value":"/ Inserts a new empty component slice for an archetype into this storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284727,"byte_end":284802,"line_start":86,"line_end":86,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4178},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284959,"byte_end":284977,"line_start":90,"line_end":90,"column_start":8,"column_end":26},"name":"transfer_archetype","qualname":"::internals::storage::UnknownComponentStorage::transfer_archetype","value":"pub fn transfer_archetype(&mut Self, ArchetypeIndex, ArchetypeIndex,\n                          &mut dyn UnknownComponentStorage)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Moves an archetype's component slice to a new storage.\n","sig":null,"attributes":[{"value":"/ Moves an archetype's component slice to a new storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284893,"byte_end":284951,"line_start":89,"line_end":89,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4179},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285182,"byte_end":285200,"line_start":98,"line_end":98,"column_start":8,"column_end":26},"name":"transfer_component","qualname":"::internals::storage::UnknownComponentStorage::transfer_component","value":"pub fn transfer_component(&mut Self, ArchetypeIndex, ComponentIndex,\n                          ArchetypeIndex, &mut dyn UnknownComponentStorage)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Moves a component to a new storage.\n","sig":null,"attributes":[{"value":"/ Moves a component to a new storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285135,"byte_end":285174,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4180},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285457,"byte_end":285471,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"move_component","qualname":"::internals::storage::UnknownComponentStorage::move_component","value":"pub fn move_component(&mut Self, ArchetypeIndex, ComponentIndex,\n                      ArchetypeIndex)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Moves a component from one archetype to another.\n","sig":null,"attributes":[{"value":"/ Moves a component from one archetype to another.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285397,"byte_end":285449,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4181},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285702,"byte_end":285713,"line_start":115,"line_end":115,"column_start":8,"column_end":19},"name":"swap_remove","qualname":"::internals::storage::UnknownComponentStorage::swap_remove","value":"pub fn swap_remove(&mut Self, ArchetypeIndex, ComponentIndex)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Removes a component from an archetype slice, swapping it with the last component in the slice.\n","sig":null,"attributes":[{"value":"/ Removes a component from an archetype slice, swapping it with the last component in the slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285596,"byte_end":285694,"line_start":114,"line_end":114,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285816,"byte_end":285820,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"pack","qualname":"::internals::storage::UnknownComponentStorage::pack","value":"pub fn pack(&mut Self, Epoch) -> usize","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Packs archetype slices.\n","sig":null,"attributes":[{"value":"/ Packs archetype slices.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285781,"byte_end":285808,"line_start":117,"line_end":117,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285990,"byte_end":286003,"line_start":121,"line_end":121,"column_start":8,"column_end":21},"name":"fragmentation","qualname":"::internals::storage::UnknownComponentStorage::fragmentation","value":"pub fn fragmentation(&Self) -> f32","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" A heuristic estimating cache misses for an iteration through all components due to archetype fragmentation.\n","sig":null,"attributes":[{"value":"/ A heuristic estimating cache misses for an iteration through all components due to archetype fragmentation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":285871,"byte_end":285982,"line_start":120,"line_end":120,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286067,"byte_end":286081,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"element_vtable","qualname":"::internals::storage::UnknownComponentStorage::element_vtable","value":"pub fn element_vtable(&Self) -> ComponentMeta","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Returns the component metadata.\n","sig":null,"attributes":[{"value":"/ Returns the component metadata.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286024,"byte_end":286059,"line_start":123,"line_end":123,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286183,"byte_end":286190,"line_start":127,"line_end":127,"column_start":8,"column_end":15},"name":"get_raw","qualname":"::internals::storage::UnknownComponentStorage::get_raw","value":"pub fn get_raw(&Self, ArchetypeIndex) -> Option<(*const u8, usize)>","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Returns a pointer to the given archetype's component slice.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the given archetype's component slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286112,"byte_end":286175,"line_start":126,"line_end":126,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286475,"byte_end":286486,"line_start":133,"line_end":133,"column_start":15,"column_end":26},"name":"get_mut_raw","qualname":"::internals::storage::UnknownComponentStorage::get_mut_raw","value":"pub unsafe fn get_mut_raw(&Self, ArchetypeIndex) -> Option<(*mut u8, usize)>","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Returns a pointer to the given archetype's component slice.","sig":null,"attributes":[{"value":"/ Returns a pointer to the given archetype's component slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286261,"byte_end":286324,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286329,"byte_end":286332,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286337,"byte_end":286349,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/ The caller is responsible for ensuring that they have exclusive access to the given archetype's slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286354,"byte_end":286460,"line_start":132,"line_end":132,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287126,"byte_end":287144,"line_start":143,"line_end":143,"column_start":15,"column_end":33},"name":"extend_memcopy_raw","qualname":"::internals::storage::UnknownComponentStorage::extend_memcopy_raw","value":"pub unsafe fn extend_memcopy_raw(&mut Self, ArchetypeIndex, *const u8, usize)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Writes new components into the given archetype's component slice via a memcopy.","sig":null,"attributes":[{"value":"/ Writes new components into the given archetype's component slice via a memcopy.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286555,"byte_end":286638,"line_start":135,"line_end":135,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286643,"byte_end":286646,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286651,"byte_end":286663,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/ `ptr` must point to a valid array of the correct component type of length at least as long as `len`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286668,"byte_end":286772,"line_start":138,"line_end":138,"column_start":5,"column_end":109}},{"value":"/ The data in this array will be memcopied into the world's internal storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286777,"byte_end":286856,"line_start":139,"line_end":139,"column_start":5,"column_end":84}},{"value":"/ If the component type is not `Copy`, then the caller must ensure that the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286861,"byte_end":286945,"line_start":140,"line_end":140,"column_start":5,"column_end":89}},{"value":"/ copied is not accessed until it is re-initialized. It is recommended to immediately","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":286950,"byte_end":287037,"line_start":141,"line_end":141,"column_start":5,"column_end":92}},{"value":"/ `std::mem::forget` the source after calling `extend_memcopy_raw`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287042,"byte_end":287111,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287402,"byte_end":287417,"line_start":147,"line_end":147,"column_start":8,"column_end":23},"name":"ensure_capacity","qualname":"::internals::storage::UnknownComponentStorage::ensure_capacity","value":"pub fn ensure_capacity(&mut Self, ArchetypeIndex, usize)","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" Ensures that the given spare capacity is available for component insertions. This is a performance hint and\n should not be required before `extend_memcopy` is called.\n","sig":null,"attributes":[{"value":"/ Ensures that the given spare capacity is available for component insertions. This is a performance hint and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287217,"byte_end":287328,"line_start":145,"line_end":145,"column_start":5,"column_end":116}},{"value":"/ should not be required before `extend_memcopy` is called.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287333,"byte_end":287394,"line_start":146,"line_end":146,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4189},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287609,"byte_end":287623,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"ComponentSlice","qualname":"::internals::storage::ComponentSlice","value":"ComponentSlice {  }","parent":null,"children":[{"krate":0,"index":4192},{"krate":0,"index":4193}],"decl_id":null,"docs":" An accessor for a shared slice reference of components for a single archetype.\n","sig":null,"attributes":[{"value":"/ An accessor for a shared slice reference of components for a single archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287515,"byte_end":287597,"line_start":151,"line_end":151,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287980,"byte_end":287990,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ComponentSlice>::into_slice","value":"pub fn into_slice(Self) -> &'a [T]","parent":null,"children":[],"decl_id":null,"docs":" Converts this slice into its inner value.\n","sig":null,"attributes":[{"value":"/ Converts this slice into its inner value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287923,"byte_end":287968,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4213},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288620,"byte_end":288637,"line_start":193,"line_end":193,"column_start":12,"column_end":29},"name":"ComponentSliceMut","qualname":"::internals::storage::ComponentSliceMut","value":"ComponentSliceMut {  }","parent":null,"children":[{"krate":0,"index":4216},{"krate":0,"index":4217}],"decl_id":null,"docs":" An accessor for a mutable slice reference of components for a single archetype.\n","sig":null,"attributes":[{"value":"/ An accessor for a mutable slice reference of components for a single archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288525,"byte_end":288608,"line_start":192,"line_end":192,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4222},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289160,"byte_end":289170,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ComponentSliceMut>::into_slice","value":"pub fn into_slice(Self) -> &'a mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Converts this slice into its inner value.\n This increments the slice's version.\n","sig":null,"attributes":[{"value":"/ Converts this slice into its inner value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289058,"byte_end":289103,"line_start":207,"line_end":207,"column_start":5,"column_end":50}},{"value":"/ This increments the slice's version.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289108,"byte_end":289148,"line_start":208,"line_end":208,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289989,"byte_end":290005,"line_start":238,"line_end":238,"column_start":11,"column_end":27},"name":"ComponentStorage","qualname":"::internals::storage::ComponentStorage","value":"ComponentStorage<'a, T: Component>: UnknownComponentStorage + Default","parent":null,"children":[{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248}],"decl_id":null,"docs":" A storage location for component data slices. Each component storage may hold once slice for\n each archetype inserted into the storage.\n","sig":null,"attributes":[{"value":"/ A storage location for component data slices. Each component storage may hold once slice for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289836,"byte_end":289932,"line_start":236,"line_end":236,"column_start":1,"column_end":97}},{"value":"/ each archetype inserted into the storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289933,"byte_end":289978,"line_start":237,"line_end":237,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290128,"byte_end":290132,"line_start":240,"line_end":240,"column_start":10,"column_end":14},"name":"Iter","qualname":"::internals::storage::ComponentStorage::Iter","value":"type Iter: Iterator<Item = ComponentSlice<'a, T>>;","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" An iterator of shared archetype slice references.\n","sig":null,"attributes":[{"value":"/ An iterator of shared archetype slice references.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290065,"byte_end":290118,"line_start":239,"line_end":239,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290243,"byte_end":290250,"line_start":243,"line_end":243,"column_start":10,"column_end":17},"name":"IterMut","qualname":"::internals::storage::ComponentStorage::IterMut","value":"type IterMut: Iterator<Item = ComponentSliceMut<'a, T>>;","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" An iterator of mutable archetype slice references.\n","sig":null,"attributes":[{"value":"/ An iterator of mutable archetype slice references.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290179,"byte_end":290233,"line_start":242,"line_end":242,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290358,"byte_end":290361,"line_start":246,"line_end":246,"column_start":8,"column_end":11},"name":"len","qualname":"::internals::storage::ComponentStorage::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Returns the number of archetype slices stored.\n","sig":null,"attributes":[{"value":"/ Returns the number of archetype slices stored.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290300,"byte_end":290350,"line_start":245,"line_end":245,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290449,"byte_end":290457,"line_start":249,"line_end":249,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::internals::storage::ComponentStorage::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Returns `true` if the storage contains no archetypes.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the storage contains no archetypes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290384,"byte_end":290441,"line_start":248,"line_end":248,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290777,"byte_end":290791,"line_start":258,"line_end":258,"column_start":15,"column_end":29},"name":"extend_memcopy","qualname":"::internals::storage::ComponentStorage::extend_memcopy","value":"pub unsafe fn extend_memcopy(&mut Self, ArchetypeIndex, *const T, usize)","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Copies new components into the specified archetype slice.","sig":null,"attributes":[{"value":"/ Copies new components into the specified archetype slice.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290510,"byte_end":290571,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290576,"byte_end":290579,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290584,"byte_end":290596,"line_start":255,"line_end":255,"column_start":5,"column_end":17}},{"value":"/ The components located at `ptr` are memcopied into the storage. If `T` is not `Copy`, then the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290601,"byte_end":290699,"line_start":256,"line_end":256,"column_start":5,"column_end":103}},{"value":"/ previous memory location should no longer be accessed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290704,"byte_end":290762,"line_start":257,"line_end":257,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290928,"byte_end":290931,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"get","qualname":"::internals::storage::ComponentStorage::get","value":"pub fn get(&'a Self, ArchetypeIndex) -> Option<ComponentSlice>","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Gets the component slice for the specified archetype.\n","sig":null,"attributes":[{"value":"/ Gets the component slice for the specified archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290863,"byte_end":290920,"line_start":260,"line_end":260,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291253,"byte_end":291260,"line_start":268,"line_end":268,"column_start":15,"column_end":22},"name":"get_mut","qualname":"::internals::storage::ComponentStorage::get_mut","value":"pub unsafe fn get_mut(&'a Self, ArchetypeIndex) -> Option<ComponentSliceMut>","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Gets a mutable component slice for the specified archetype.","sig":null,"attributes":[{"value":"/ Gets a mutable component slice for the specified archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291008,"byte_end":291071,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291076,"byte_end":291079,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291084,"byte_end":291096,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/ Ensure that the requested archetype slice is not concurrently borrowed anywhere else such that memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291101,"byte_end":291206,"line_start":266,"line_end":266,"column_start":5,"column_end":110}},{"value":"/ is not mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291211,"byte_end":291238,"line_start":267,"line_end":267,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291400,"byte_end":291404,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"iter","qualname":"::internals::storage::ComponentStorage::iter","value":"pub fn iter(&'a Self, usize, usize) -> Self::Iter","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Iterates through all archetype component slices.\n","sig":null,"attributes":[{"value":"/ Iterates through all archetype component slices.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291340,"byte_end":291392,"line_start":270,"line_end":270,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291725,"byte_end":291733,"line_start":278,"line_end":278,"column_start":15,"column_end":23},"name":"iter_mut","qualname":"::internals::storage::ComponentStorage::iter_mut","value":"pub unsafe fn iter_mut(&'a Self, usize, usize) -> Self::IterMut","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Iterates through all mutable archetype component slices.","sig":null,"attributes":[{"value":"/ Iterates through all mutable archetype component slices.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291481,"byte_end":291541,"line_start":273,"line_end":273,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291546,"byte_end":291549,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291554,"byte_end":291566,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/ Ensure that all requested archetype slices are not concurrently borrowed anywhere else such that memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291571,"byte_end":291678,"line_start":276,"line_end":276,"column_start":5,"column_end":112}},{"value":"/ is not mutably aliased.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291683,"byte_end":291710,"line_start":277,"line_end":277,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":11400},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291903,"byte_end":291913,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"Components","qualname":"::internals::storage::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":11401}],"decl_id":null,"docs":" Contains the storages for all component types in a world.\n","sig":null,"attributes":[{"value":"/ Contains the storages for all component types in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":291811,"byte_end":291872,"line_start":281,"line_end":281,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292162,"byte_end":292180,"line_start":293,"line_end":293,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<Components>::get_or_insert_with","value":"pub fn get_or_insert_with<F>(&mut Self, ComponentTypeId, F)\n-> &mut dyn UnknownComponentStorage where F: FnMut() ->\nBox<dyn UnknownComponentStorage>","parent":null,"children":[],"decl_id":null,"docs":" Gets or inserts the storage for the given component type.\n","sig":null,"attributes":[{"value":"/ Gets or inserts the storage for the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292089,"byte_end":292150,"line_start":292,"line_end":292,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4253},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292553,"byte_end":292556,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"get","qualname":"<Components>::get","value":"pub fn get(&Self, ComponentTypeId) -> Option<&dyn UnknownComponentStorage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage for the given component type.\n","sig":null,"attributes":[{"value":"/ Returns the storage for the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292488,"byte_end":292541,"line_start":305,"line_end":305,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292769,"byte_end":292781,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"get_downcast","qualname":"<Components>::get_downcast","value":"pub fn get_downcast<T: Component>(&Self) -> Option<&T::Storage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage for the given component type.\n","sig":null,"attributes":[{"value":"/ Returns the storage for the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292704,"byte_end":292757,"line_start":310,"line_end":310,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293023,"byte_end":293030,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Components>::get_mut","value":"pub fn get_mut(&mut Self, ComponentTypeId)\n-> Option<&mut dyn UnknownComponentStorage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage for the given component type.\n","sig":null,"attributes":[{"value":"/ Returns the storage for the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292958,"byte_end":293011,"line_start":316,"line_end":316,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293282,"byte_end":293298,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"get_downcast_mut","qualname":"<Components>::get_downcast_mut","value":"pub fn get_downcast_mut<T: Component>(&mut Self) -> Option<&mut T::Storage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage for the given component type.\n","sig":null,"attributes":[{"value":"/ Returns the storage for the given component type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293217,"byte_end":293270,"line_start":324,"line_end":324,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293576,"byte_end":293589,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"get_multi_mut","qualname":"<Components>::get_multi_mut","value":"pub fn get_multi_mut(&mut Self) -> MultiMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a writer for writing to multiple component storages.\n","sig":null,"attributes":[{"value":"/ Returns a writer for writing to multiple component storages.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293500,"byte_end":293564,"line_start":331,"line_end":331,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293701,"byte_end":293705,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"pack","qualname":"<Components>::pack","value":"pub fn pack(&mut Self, &PackOptions)","parent":null,"children":[],"decl_id":null,"docs":" Repacks all component storages.\n","sig":null,"attributes":[{"value":"/ Repacks all component storages.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":293654,"byte_end":293689,"line_start":336,"line_end":336,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11404},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294677,"byte_end":294688,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"PackOptions","qualname":"::internals::storage::PackOptions","value":"PackOptions { stability_threshold, fragmentation_threshold, maximum_iteration_size }","parent":null,"children":[{"krate":0,"index":11405},{"krate":0,"index":11406},{"krate":0,"index":11407}],"decl_id":null,"docs":" Describes how to perform a component pack operation.\n","sig":null,"attributes":[{"value":"/ Describes how to perform a component pack operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294579,"byte_end":294635,"line_start":365,"line_end":365,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":11405},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294829,"byte_end":294848,"line_start":370,"line_end":370,"column_start":9,"column_end":28},"name":"stability_threshold","qualname":"::internals::storage::PackOptions::stability_threshold","value":"u64","parent":{"krate":0,"index":11404},"children":[],"decl_id":null,"docs":" The number of frames that an archetype has to remain stable before it\n will be considered a candidate for packing.\n","sig":null,"attributes":[{"value":"/ The number of frames that an archetype has to remain stable before it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294695,"byte_end":294768,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ will be considered a candidate for packing.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294773,"byte_end":294820,"line_start":369,"line_end":369,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11406},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295047,"byte_end":295070,"line_start":375,"line_end":375,"column_start":9,"column_end":32},"name":"fragmentation_threshold","qualname":"::internals::storage::PackOptions::fragmentation_threshold","value":"f32","parent":{"krate":0,"index":11404},"children":[],"decl_id":null,"docs":" The estimated number of cache misses due to fragmentation per entity\n that would be saved by a repack before a component storage may consider\n repacking itself.\n","sig":null,"attributes":[{"value":"/ The estimated number of cache misses due to fragmentation per entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294860,"byte_end":294932,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ that would be saved by a repack before a component storage may consider","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294937,"byte_end":295012,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ repacking itself.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295017,"byte_end":295038,"line_start":374,"line_end":374,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":11407},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295191,"byte_end":295213,"line_start":379,"line_end":379,"column_start":9,"column_end":31},"name":"maximum_iteration_size","qualname":"::internals::storage::PackOptions::maximum_iteration_size","value":"usize","parent":{"krate":0,"index":11404},"children":[],"decl_id":null,"docs":" The target maximum number of entities to move during a repack before\n the pack is halted.\n","sig":null,"attributes":[{"value":"/ The target maximum number of entities to move during a repack before","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295082,"byte_end":295154,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ the pack is halted.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295159,"byte_end":295182,"line_start":378,"line_end":378,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295279,"byte_end":295284,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"force","qualname":"<PackOptions>::force","value":"pub fn force() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Force a repack.\n","sig":null,"attributes":[{"value":"/ Force a repack.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295248,"byte_end":295267,"line_start":383,"line_end":383,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4274},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295790,"byte_end":295798,"line_start":404,"line_end":404,"column_start":12,"column_end":20},"name":"MultiMut","qualname":"::internals::storage::MultiMut","value":"MultiMut {  }","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4277}],"decl_id":null,"docs":" Provides mutable access to multiple different component storages from a single world.\n","sig":null,"attributes":[{"value":"/ Provides mutable access to multiple different component storages from a single world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295689,"byte_end":295778,"line_start":403,"line_end":403,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":4281},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":296461,"byte_end":296466,"line_start":424,"line_end":424,"column_start":19,"column_end":24},"name":"claim","qualname":"<MultiMut>::claim","value":"pub unsafe fn claim<T: Component>(&mut Self) -> Option<&'a mut T::Storage>","parent":null,"children":[],"decl_id":null,"docs":" Claims exclusive access to a component storage.","sig":null,"attributes":[{"value":"/ Claims exclusive access to a component storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":296170,"byte_end":296221,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":296226,"byte_end":296229,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":296234,"byte_end":296246,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/ The caller must ensure that each component type is only claimed once, as doing otherwise","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":296251,"byte_end":296343,"line_start":422,"line_end":422,"column_start":5,"column_end":97}},{"value":"/ may result in mutable aliases of the component storage. This is validated in debug builds.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":296348,"byte_end":296442,"line_start":423,"line_end":423,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":4284},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":297533,"byte_end":297546,"line_start":447,"line_end":447,"column_start":19,"column_end":32},"name":"claim_unknown","qualname":"<MultiMut>::claim_unknown","value":"pub unsafe fn claim_unknown(&mut Self, ComponentTypeId)\n-> Option<&'a mut dyn UnknownComponentStorage>","parent":null,"children":[],"decl_id":null,"docs":" Claims exclusive access to a component storage.","sig":null,"attributes":[{"value":"/ Claims exclusive access to a component storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":297242,"byte_end":297293,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":297298,"byte_end":297301,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":297306,"byte_end":297318,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/ The caller must ensure that each component type is only claimed once, as doing otherwise","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":297323,"byte_end":297415,"line_start":445,"line_end":445,"column_start":5,"column_end":97}},{"value":"/ may result in mutable aliases of the component storage. This is validated in debug builds.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":297420,"byte_end":297514,"line_start":446,"line_end":446,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4348},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341501,"byte_end":341504,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"All","qualname":"::internals::subworld::ArchetypeAccess::All","value":"ArchetypeAccess::All","parent":{"krate":0,"index":4347},"children":[],"decl_id":null,"docs":" All archetypes.\n","sig":null,"attributes":[{"value":"/ All archetypes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341477,"byte_end":341496,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4350},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341535,"byte_end":341539,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Some","qualname":"::internals::subworld::ArchetypeAccess::Some","value":"ArchetypeAccess::Some(BitSet)","parent":{"krate":0,"index":4347},"children":[],"decl_id":null,"docs":" Some archetypes.\n","sig":null,"attributes":[{"value":"/ Some archetypes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341510,"byte_end":341530,"line_start":23,"line_end":23,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":4347},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341455,"byte_end":341470,"line_start":20,"line_end":20,"column_start":10,"column_end":25},"name":"ArchetypeAccess","qualname":"::internals::subworld::ArchetypeAccess","value":"pub enum ArchetypeAccess { All, Some(BitSet), }","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4350}],"decl_id":null,"docs":" Describes which archetypes are available for access.\n","sig":null,"attributes":[{"value":"/ Describes which archetypes are available for access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341389,"byte_end":341445,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341687,"byte_end":341698,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<ArchetypeAccess>::is_disjoint","value":"pub fn is_disjoint(&Self, &ArchetypeAccess) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the given archetypes are disjoint from those allowed by this archetype access,\n","sig":null,"attributes":[{"value":"/ Determines if the given archetypes are disjoint from those allowed by this archetype access,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341579,"byte_end":341675,"line_start":28,"line_end":28,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342063,"byte_end":342069,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"bitset","qualname":"<ArchetypeAccess>::bitset","value":"pub fn bitset(&Self) -> Option<&BitSet>","parent":null,"children":[],"decl_id":null,"docs":" Returns a bitset of allowed archetype indexes if this access is `Some`.\n","sig":null,"attributes":[{"value":"/ Returns a bitset of allowed archetype indexes if this access is `Some`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341976,"byte_end":342051,"line_start":39,"line_end":39,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11415},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342367,"byte_end":342370,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"All","qualname":"::internals::subworld::ComponentAccess::All","value":"ComponentAccess::All","parent":{"krate":0,"index":11413},"children":[],"decl_id":null,"docs":" All component types are allowed.\n","sig":null,"attributes":[{"value":"/ All component types are allowed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342326,"byte_end":342362,"line_start":51,"line_end":51,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11417},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342418,"byte_end":342423,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Allow","qualname":"::internals::subworld::ComponentAccess::Allow","value":"ComponentAccess::Allow(Cow)","parent":{"krate":0,"index":11413},"children":[],"decl_id":null,"docs":" Some component types are allowed.\n","sig":null,"attributes":[{"value":"/ Some component types are allowed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342376,"byte_end":342413,"line_start":53,"line_end":53,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11420},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342513,"byte_end":342521,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Disallow","qualname":"::internals::subworld::ComponentAccess::Disallow","value":"ComponentAccess::Disallow(Cow)","parent":{"krate":0,"index":11413},"children":[],"decl_id":null,"docs":" Some component types are disallowed.\n","sig":null,"attributes":[{"value":"/ Some component types are disallowed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342468,"byte_end":342508,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":11413},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342300,"byte_end":342315,"line_start":50,"line_end":50,"column_start":10,"column_end":25},"name":"ComponentAccess","qualname":"::internals::subworld::ComponentAccess","value":"pub enum ComponentAccess<'a> { All, Allow(Cow), Disallow(Cow), }","parent":null,"children":[{"krate":0,"index":11415},{"krate":0,"index":11417},{"krate":0,"index":11420}],"decl_id":null,"docs":" Describes which components are available for access.\n","sig":null,"attributes":[{"value":"/ Describes which components are available for access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342217,"byte_end":342273,"line_start":48,"line_end":48,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4358},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342678,"byte_end":342689,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"allows_read","qualname":"<ComponentAccess>::allows_read","value":"pub fn allows_read(&Self, ComponentTypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `truw` if the given component is accessible for reads.\n","sig":null,"attributes":[{"value":"/ Returns `truw` if the given component is accessible for reads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342600,"byte_end":342666,"line_start":60,"line_end":60,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":343051,"byte_end":343063,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"allows_write","qualname":"<ComponentAccess>::allows_write","value":"pub fn allows_write(&Self, ComponentTypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `truw` if the given component is accessible for writes.\n","sig":null,"attributes":[{"value":"/ Returns `truw` if the given component is accessible for writes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342972,"byte_end":343039,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11426},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346627,"byte_end":346635,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"SubWorld","qualname":"::internals::subworld::SubWorld","value":"SubWorld {  }","parent":null,"children":[{"krate":0,"index":11428},{"krate":0,"index":11429},{"krate":0,"index":11430}],"decl_id":null,"docs":" Provides access to a subset of the entities of a `World`.","sig":null,"attributes":[{"value":"/ Provides access to a subset of the entities of a `World`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":345832,"byte_end":345893,"line_start":145,"line_end":145,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":345894,"byte_end":345897,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ To access a component mutably in a world, such as inside a [query](../query/index.html) or via an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":345898,"byte_end":345999,"line_start":147,"line_end":147,"column_start":1,"column_end":102}},{"value":"/ [entry](struct.EntryMut.html), you need to borrow the entire world mutably. This prevents you from","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346000,"byte_end":346102,"line_start":148,"line_end":148,"column_start":1,"column_end":103}},{"value":"/ accessing any other data in the world at the same time.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346103,"byte_end":346162,"line_start":149,"line_end":149,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346163,"byte_end":346166,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In some cases, we can work around this by splitting the world. We can split a world around the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346167,"byte_end":346265,"line_start":151,"line_end":151,"column_start":1,"column_end":99}},{"value":"/ component types requested by a [view](../query/view/index.html). This will create two subworlds,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346266,"byte_end":346366,"line_start":152,"line_end":152,"column_start":1,"column_end":101}},{"value":"/ the left one allowing access only to the components (and mutability) declared by the view, while","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346367,"byte_end":346467,"line_start":153,"line_end":153,"column_start":1,"column_end":101}},{"value":"/ the right subworld will allow access to everything _but_ those components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346468,"byte_end":346546,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346547,"byte_end":346550,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Subworlds can be recustively further split.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346551,"byte_end":346598,"line_start":156,"line_end":156,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347052,"byte_end":347065,"line_start":170,"line_end":170,"column_start":19,"column_end":32},"name":"new_unchecked","qualname":"<SubWorld>::new_unchecked","value":"pub unsafe fn new_unchecked(&'a World, ComponentAccess, Option<&'a BitSet>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new SubWorld.","sig":null,"attributes":[{"value":"/ Constructs a new SubWorld.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346768,"byte_end":346798,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346803,"byte_end":346806,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346811,"byte_end":346823,"line_start":167,"line_end":167,"column_start":5,"column_end":17}},{"value":"/ Queries assume that this type has been constructed correctly. Ensure that sub-worlds represent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346828,"byte_end":346926,"line_start":168,"line_end":168,"column_start":5,"column_end":103}},{"value":"/ disjoint portions of a world and that the world is not used while any of its sub-worlds are alive.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346931,"byte_end":347033,"line_start":169,"line_end":169,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348344,"byte_end":348349,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"split","qualname":"<SubWorld>::split","value":"pub fn split<'b, T: IntoView>(&'b mut Self) -> (SubWorld, SubWorld) where\n'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Splits the world into two. The left world allows access only to the data declared by the view;\n the right world allows access to all else.","sig":null,"attributes":[{"value":"/ Splits the world into two. The left world allows access only to the data declared by the view;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347293,"byte_end":347391,"line_start":182,"line_end":182,"column_start":5,"column_end":103}},{"value":"/ the right world allows access to all else.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347396,"byte_end":347442,"line_start":183,"line_end":183,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347447,"byte_end":347450,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347455,"byte_end":347469,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347474,"byte_end":347477,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347482,"byte_end":347489,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347494,"byte_end":347514,"line_start":188,"line_end":188,"column_start":5,"column_end":25}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347519,"byte_end":347541,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347546,"byte_end":347585,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ # let (_, mut world) = world.split::<&u8>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347590,"byte_end":347638,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/ let (left, right) = world.split::<&mut Position>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347643,"byte_end":347698,"line_start":192,"line_end":192,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347703,"byte_end":347710,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347715,"byte_end":347718,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ With the above, 'left' contains a sub-world with access _only_ to `&Position` and `&mut Position`,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347723,"byte_end":347825,"line_start":195,"line_end":195,"column_start":5,"column_end":107}},{"value":"/ and `right` contains a sub-world with access to everything _but_ `&Position` and `&mut Position`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347830,"byte_end":347931,"line_start":196,"line_end":196,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347936,"byte_end":347939,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347944,"byte_end":347951,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347956,"byte_end":347976,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":347981,"byte_end":348003,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348008,"byte_end":348047,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/ # let (_, mut world) = world.split::<&u8>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348052,"byte_end":348100,"line_start":202,"line_end":202,"column_start":5,"column_end":53}},{"value":"/ let (left, right) = world.split::<&Position>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348105,"byte_end":348156,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348161,"byte_end":348168,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348173,"byte_end":348176,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ In this second example, `left` is provided access _only_ to `&Position`. `right` is granted permission","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348181,"byte_end":348287,"line_start":206,"line_end":206,"column_start":5,"column_end":111}},{"value":"/ to everything _but_ `&mut Position`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348292,"byte_end":348332,"line_start":207,"line_end":207,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":349074,"byte_end":349089,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"split_for_query","qualname":"<SubWorld>::split_for_query","value":"pub fn split_for_query<'q, V: IntoView,\n                       F: EntityFilter>(&mut Self, &'q Query<V, F>)\n-> (SubWorld, SubWorld)","parent":null,"children":[],"decl_id":null,"docs":" Splits the world into two. The left world allows access only to the data declared by the query's view;\n the right world allows access to all else.\n","sig":null,"attributes":[{"value":"/ Splits the world into two. The left world allows access only to the data declared by the query's view;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":348905,"byte_end":349011,"line_start":229,"line_end":229,"column_start":5,"column_end":111}},{"value":"/ the right world allows access to all else.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":349016,"byte_end":349062,"line_start":230,"line_end":230,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":4451},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358898,"byte_end":358911,"line_start":33,"line_end":33,"column_start":11,"column_end":24},"name":"WorldWritable","qualname":"::internals::systems::command::WorldWritable","value":"WorldWritable: Send + Sync","parent":null,"children":[{"krate":0,"index":4452}],"decl_id":null,"docs":" This trait can be used to implement custom world writer types that can be directly\n inserted into the command buffer, for more custom and complex world operations. This is analogous\n to the `CommandBuffer::exec_mut` function type, but does not perform explicit any/any archetype\n access.\n","sig":null,"attributes":[{"value":"/ This trait can be used to implement custom world writer types that can be directly","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358587,"byte_end":358673,"line_start":29,"line_end":29,"column_start":1,"column_end":87}},{"value":"/ inserted into the command buffer, for more custom and complex world operations. This is analogous","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358674,"byte_end":358775,"line_start":30,"line_end":30,"column_start":1,"column_end":102}},{"value":"/ to the `CommandBuffer::exec_mut` function type, but does not perform explicit any/any archetype","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358776,"byte_end":358875,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358876,"byte_end":358887,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359011,"byte_end":359016,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"write","qualname":"::internals::systems::command::WorldWritable::write","value":"pub fn write(Arc<Self>, &mut World, &CommandBuffer)","parent":{"krate":0,"index":4451},"children":[],"decl_id":null,"docs":" Destructs the writer and performs the write operations on the world.\n","sig":null,"attributes":[{"value":"/ Destructs the writer and performs the write operations on the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358931,"byte_end":359003,"line_start":34,"line_end":34,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364029,"byte_end":364042,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::internals::systems::command::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519}],"decl_id":null,"docs":" A command buffer used to queue mutable changes to the world from a system. This buffer is automatically\n flushed and refreshed at the beginning of every frame by `Schedule`. If `Schedule` is not used,\n then the user needs to manually flush it by performing `CommandBuffer::flush`.","sig":null,"attributes":[{"value":"/ A command buffer used to queue mutable changes to the world from a system. This buffer is automatically","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363141,"byte_end":363248,"line_start":201,"line_end":201,"column_start":1,"column_end":108}},{"value":"/ flushed and refreshed at the beginning of every frame by `Schedule`. If `Schedule` is not used,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363249,"byte_end":363348,"line_start":202,"line_end":202,"column_start":1,"column_end":100}},{"value":"/ then the user needs to manually flush it by performing `CommandBuffer::flush`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363349,"byte_end":363431,"line_start":203,"line_end":203,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363432,"byte_end":363435,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363436,"byte_end":363450,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363451,"byte_end":363454,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Inserting an entity using the `CommandBuffer`:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363455,"byte_end":363505,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363506,"byte_end":363509,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363510,"byte_end":363517,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363518,"byte_end":363538,"line_start":210,"line_end":210,"column_start":1,"column_end":21}},{"value":"/ # use legion::systems::CommandBuffer;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363539,"byte_end":363580,"line_start":211,"line_end":211,"column_start":1,"column_end":42}},{"value":"/ # #[derive(Copy, Clone, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363581,"byte_end":363627,"line_start":212,"line_end":212,"column_start":1,"column_end":47}},{"value":"/ # struct Position(f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363628,"byte_end":363655,"line_start":213,"line_end":213,"column_start":1,"column_end":28}},{"value":"/ # #[derive(Copy, Clone, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363656,"byte_end":363702,"line_start":214,"line_end":214,"column_start":1,"column_end":47}},{"value":"/ # struct Rotation(f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363703,"byte_end":363730,"line_start":215,"line_end":215,"column_start":1,"column_end":28}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363731,"byte_end":363770,"line_start":216,"line_end":216,"column_start":1,"column_end":40}},{"value":"/ let mut command_buffer = CommandBuffer::new(&world);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363771,"byte_end":363827,"line_start":217,"line_end":217,"column_start":1,"column_end":57}},{"value":"/ let entity = command_buffer.push(());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363828,"byte_end":363869,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363870,"byte_end":363873,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ command_buffer.add_component(entity, Position(123.0));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363874,"byte_end":363932,"line_start":220,"line_end":220,"column_start":1,"column_end":59}},{"value":"/ command_buffer.remove(entity);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363933,"byte_end":363967,"line_start":221,"line_end":221,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363968,"byte_end":363971,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ command_buffer.flush(&mut world);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":363972,"byte_end":364009,"line_start":223,"line_end":223,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364010,"byte_end":364017,"line_start":224,"line_end":224,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364259,"byte_end":364262,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<CommandBuffer>::new","value":"pub fn new(&World) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an empty command buffer.\n","sig":null,"attributes":[{"value":"/ Constructs an empty command buffer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364208,"byte_end":364247,"line_start":233,"line_end":233,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4523},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364567,"byte_end":364572,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"world","qualname":"<CommandBuffer>::world","value":"pub fn world(&Self) -> WorldId","parent":null,"children":[],"decl_id":null,"docs":" Gets the ID of the world this command buffer belongs to.\n","sig":null,"attributes":[{"value":"/ Gets the ID of the world this command buffer belongs to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364495,"byte_end":364555,"line_start":243,"line_end":243,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4524},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364889,"byte_end":364894,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"flush","qualname":"<CommandBuffer>::flush","value":"pub fn flush(&mut Self, &mut World)","parent":null,"children":[],"decl_id":null,"docs":" Flushes this command buffer, draining all stored commands and writing them to the world.","sig":null,"attributes":[{"value":"/ Flushes this command buffer, draining all stored commands and writing them to the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364626,"byte_end":364718,"line_start":248,"line_end":248,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364723,"byte_end":364726,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Command flushes are performed in a FIFO manner, allowing for reliable, linear commands being","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364731,"byte_end":364827,"line_start":250,"line_end":250,"column_start":5,"column_end":101}},{"value":"/ executed in the order they were provided.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364832,"byte_end":364877,"line_start":251,"line_end":251,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4525},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":365487,"byte_end":365495,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"exec_mut","qualname":"<CommandBuffer>::exec_mut","value":"pub fn exec_mut<F>(&mut Self, F) where F: 'static + Fn(&mut World) -> () +\nSend + Sync","parent":null,"children":[],"decl_id":null,"docs":" Executes an arbitrary closure against the mutable world, allowing for queued exclusive\n access to the world.\n","sig":null,"attributes":[{"value":"/ Executes an arbitrary closure against the mutable world, allowing for queued exclusive","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":365356,"byte_end":365446,"line_start":267,"line_end":267,"column_start":5,"column_end":95}},{"value":"/ access to the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":365451,"byte_end":365475,"line_start":268,"line_end":268,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4529},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":366162,"byte_end":366166,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"push","qualname":"<CommandBuffer>::push","value":"pub fn push<T>(&mut Self, T) -> Entity where Option<T>: 'static +\nIntoComponentSource, <Option<T> as IntoComponentSource>::Source: KnownLength +\nSend + Sync","parent":null,"children":[],"decl_id":null,"docs":" Queues the insertion of a single entity into the world.\n","sig":null,"attributes":[{"value":"/ Queues the insertion of a single entity into the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":366091,"byte_end":366150,"line_start":287,"line_end":287,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":366471,"byte_end":366477,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"extend","qualname":"<CommandBuffer>::extend","value":"pub fn extend<T>(&mut Self, T) -> &[Entity] where T: 'static +\nIntoComponentSource, <T as IntoComponentSource>::Source: KnownLength + Send +\nSync","parent":null,"children":[],"decl_id":null,"docs":" Queues the insertion of new entities into the world.\n","sig":null,"attributes":[{"value":"/ Queues the insertion of new entities into the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":366403,"byte_end":366459,"line_start":296,"line_end":296,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367331,"byte_end":367337,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"remove","qualname":"<CommandBuffer>::remove","value":"pub fn remove(&mut Self, Entity)","parent":null,"children":[],"decl_id":null,"docs":" Queues the deletion of an entity in the command buffer.\n","sig":null,"attributes":[{"value":"/ Queues the deletion of an entity in the command buffer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367260,"byte_end":367319,"line_start":323,"line_end":323,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367523,"byte_end":367536,"line_start":329,"line_end":329,"column_start":12,"column_end":25},"name":"add_component","qualname":"<CommandBuffer>::add_component","value":"pub fn add_component<C: Component>(&mut Self, Entity, C)","parent":null,"children":[],"decl_id":null,"docs":" Queues the addition of a component from an entity in the command buffer.\n","sig":null,"attributes":[{"value":"/ Queues the addition of a component from an entity in the command buffer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367435,"byte_end":367511,"line_start":328,"line_end":328,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367763,"byte_end":367779,"line_start":334,"line_end":334,"column_start":12,"column_end":28},"name":"remove_component","qualname":"<CommandBuffer>::remove_component","value":"pub fn remove_component<C: Component>(&mut Self, Entity)","parent":null,"children":[],"decl_id":null,"docs":" Queues the removal of a component from an entity in the command buffer.\n","sig":null,"attributes":[{"value":"/ Queues the removal of a component from an entity in the command buffer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367676,"byte_end":367751,"line_start":333,"line_end":333,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":368085,"byte_end":368088,"line_start":343,"line_end":343,"column_start":12,"column_end":15},"name":"len","qualname":"<CommandBuffer>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of commands already queued in this `CommandBuffer` instance.\n","sig":null,"attributes":[{"value":"/ Returns the current number of commands already queued in this `CommandBuffer` instance.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":367968,"byte_end":368059,"line_start":341,"line_end":341,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":368064,"byte_end":368073,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":368256,"byte_end":368264,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<CommandBuffer>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `CommandBuffer` is currently empty and contains no writers.\n","sig":null,"attributes":[{"value":"/ Returns true if this `CommandBuffer` is currently empty and contains no writers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":368146,"byte_end":368230,"line_start":347,"line_end":347,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":368235,"byte_end":368244,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11466},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370570,"byte_end":370584,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"ResourceTypeId","qualname":"::internals::systems::resources::ResourceTypeId","value":"ResourceTypeId {  }","parent":null,"children":[{"krate":0,"index":11467},{"krate":0,"index":11468}],"decl_id":null,"docs":" Unique ID for a resource.\n","sig":null,"attributes":[{"value":"/ Unique ID for a resource.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370478,"byte_end":370507,"line_start":22,"line_end":22,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370762,"byte_end":370764,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"of","qualname":"<ResourceTypeId>::of","value":"pub fn of<T: Resource>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the resource type ID of the given resource type.\n","sig":null,"attributes":[{"value":"/ Returns the resource type ID of the given resource type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370690,"byte_end":370750,"line_start":31,"line_end":31,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371567,"byte_end":371575,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"Resource","qualname":"::internals::systems::resources::Resource","value":"Resource: 'static + Downcast","parent":null,"children":[],"decl_id":null,"docs":" Blanket trait for resource types.\n","sig":null,"attributes":[{"value":"/ Blanket trait for resource types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371519,"byte_end":371556,"line_start":65,"line_end":65,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372363,"byte_end":372374,"line_start":97,"line_end":97,"column_start":11,"column_end":22},"name":"ResourceSet","qualname":"::internals::systems::resources::ResourceSet","value":"ResourceSet<'a>","parent":null,"children":[{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621}],"decl_id":null,"docs":" Trait which is implemented for tuples of resources and singular resources. This abstracts\n fetching resources to allow for ergonomic fetching.","sig":null,"attributes":[{"value":"/ Trait which is implemented for tuples of resources and singular resources. This abstracts","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371669,"byte_end":371762,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/ fetching resources to allow for ergonomic fetching.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371763,"byte_end":371818,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371819,"byte_end":371822,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371823,"byte_end":371837,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371838,"byte_end":371845,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371846,"byte_end":371849,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ struct TypeA(usize);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371850,"byte_end":371874,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/ struct TypeB(usize);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371875,"byte_end":371899,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371900,"byte_end":371903,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371904,"byte_end":371924,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/ # use legion::systems::ResourceSet;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371925,"byte_end":371964,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ let mut resources = Resources::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371965,"byte_end":372010,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/ resources.insert(TypeA(55));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372011,"byte_end":372043,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ resources.insert(TypeB(12));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372044,"byte_end":372076,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372077,"byte_end":372080,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372081,"byte_end":372086,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/     let (a, mut b) = <(Read<TypeA>, Write<TypeB>)>::fetch_mut(&mut resources);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372087,"byte_end":372169,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/     assert_ne!(a.0, b.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372170,"byte_end":372199,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/     b.0 = a.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372200,"byte_end":372218,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372219,"byte_end":372224,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372225,"byte_end":372228,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372229,"byte_end":372234,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/     let (a, b) = <(Read<TypeA>, Read<TypeB>)>::fetch(&resources);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372235,"byte_end":372304,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/     assert_eq!(a.0, b.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372305,"byte_end":372334,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372335,"byte_end":372340,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372341,"byte_end":372344,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372345,"byte_end":372352,"line_start":96,"line_end":96,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":4618},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372446,"byte_end":372452,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"name":"Result","qualname":"::internals::systems::resources::ResourceSet::Result","value":"type Result: 'a;","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":" The resource reference returned during a fetch.\n","sig":null,"attributes":[{"value":"/ The resource reference returned during a fetch.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372385,"byte_end":372436,"line_start":98,"line_end":98,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372672,"byte_end":372687,"line_start":105,"line_end":105,"column_start":15,"column_end":30},"name":"fetch_unchecked","qualname":"::internals::systems::resources::ResourceSet::fetch_unchecked","value":"pub unsafe fn fetch_unchecked(&'a UnsafeResources) -> Self::Result","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":" Fetches all defined resources, without checking mutability.","sig":null,"attributes":[{"value":"/ Fetches all defined resources, without checking mutability.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372463,"byte_end":372526,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372531,"byte_end":372534,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372539,"byte_end":372551,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ It is up to the end user to validate proper mutability rules across the resources being accessed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372556,"byte_end":372657,"line_start":104,"line_end":104,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372784,"byte_end":372793,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"fetch_mut","qualname":"::internals::systems::resources::ResourceSet::fetch_mut","value":"pub fn fetch_mut(&'a mut Resources) -> Self::Result","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":" Fetches all defined resources.\n","sig":null,"attributes":[{"value":"/ Fetches all defined resources.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372742,"byte_end":372776,"line_start":107,"line_end":107,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":373016,"byte_end":373021,"line_start":114,"line_end":114,"column_start":8,"column_end":13},"name":"fetch","qualname":"::internals::systems::resources::ResourceSet::fetch","value":"pub fn fetch(&'a Resources) -> Self::Result where Self: ReadOnly","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":" Fetches all defined resources.\n","sig":null,"attributes":[{"value":"/ Fetches all defined resources.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":372974,"byte_end":373008,"line_start":113,"line_end":113,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4638},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":374867,"byte_end":374872,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"Fetch","qualname":"::internals::systems::resources::Fetch","value":"Fetch {  }","parent":null,"children":[{"krate":0,"index":4641},{"krate":0,"index":4642}],"decl_id":null,"docs":" Ergonomic wrapper type which contains a `Ref` type.\n","sig":null,"attributes":[{"value":"/ Ergonomic wrapper type which contains a `Ref` type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":374800,"byte_end":374855,"line_start":176,"line_end":176,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4656},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375527,"byte_end":375535,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"FetchMut","qualname":"::internals::systems::resources::FetchMut","value":"FetchMut {  }","parent":null,"children":[{"krate":0,"index":4659},{"krate":0,"index":4660}],"decl_id":null,"docs":" Ergonomic wrapper type which contains a `RefMut` type.\n","sig":null,"attributes":[{"value":"/ Ergonomic wrapper type which contains a `RefMut` type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375457,"byte_end":375515,"line_start":204,"line_end":204,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":11560},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379157,"byte_end":379172,"line_start":328,"line_end":328,"column_start":12,"column_end":27},"name":"UnsafeResources","qualname":"::internals::systems::resources::UnsafeResources","value":"UnsafeResources {  }","parent":null,"children":[{"krate":0,"index":11561}],"decl_id":null,"docs":" A container for resources which performs runtime borrow checking\n but _does not_ ensure that `!Sync` resources aren't accessed across threads.\n","sig":null,"attributes":[{"value":"/ A container for resources which performs runtime borrow checking","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":378977,"byte_end":379045,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"/ but _does not_ ensure that `!Sync` resources aren't accessed across threads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379046,"byte_end":379126,"line_start":326,"line_end":326,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":11564},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":380894,"byte_end":380903,"line_start":377,"line_end":377,"column_start":12,"column_end":21},"name":"Resources","qualname":"::internals::systems::resources::Resources","value":"Resources {  }","parent":null,"children":[{"krate":0,"index":11565},{"krate":0,"index":11566}],"decl_id":null,"docs":" Resources container. Shared resources stored here can be retrieved in systems.\n","sig":null,"attributes":[{"value":"/ Resources container. Shared resources stored here can be retrieved in systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":380781,"byte_end":380863,"line_start":375,"line_end":375,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4703},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381264,"byte_end":381268,"line_start":390,"line_end":390,"column_start":12,"column_end":16},"name":"sync","qualname":"<Resources>::sync","value":"pub fn sync(&mut Self) -> SyncResources","parent":null,"children":[],"decl_id":null,"docs":" Creates an accessor to resources which are Send and Sync, which itself can be sent\n between threads.\n","sig":null,"attributes":[{"value":"/ Creates an accessor to resources which are Send and Sync, which itself can be sent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381141,"byte_end":381227,"line_start":388,"line_end":388,"column_start":5,"column_end":91}},{"value":"/ between threads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381232,"byte_end":381252,"line_start":389,"line_end":389,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381473,"byte_end":381481,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"name":"contains","qualname":"<Resources>::contains","value":"pub fn contains<T: Resource>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if type `T` exists in the store. Otherwise, returns `false`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if type `T` exists in the store. Otherwise, returns `false`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381382,"byte_end":381461,"line_start":396,"line_end":396,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4706},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381832,"byte_end":381838,"line_start":404,"line_end":404,"column_start":12,"column_end":18},"name":"insert","qualname":"<Resources>::insert","value":"pub fn insert<T: Resource>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts the instance of `T` into the store. If the type already exists, it will be silently\n overwritten. If you would like to retain the instance of the resource that already exists,\n call `remove` first to retrieve it.\n","sig":null,"attributes":[{"value":"/ Inserts the instance of `T` into the store. If the type already exists, it will be silently","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381582,"byte_end":381677,"line_start":401,"line_end":401,"column_start":5,"column_end":100}},{"value":"/ overwritten. If you would like to retain the instance of the resource that already exists,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381682,"byte_end":381776,"line_start":402,"line_end":402,"column_start":5,"column_end":99}},{"value":"/ call `remove` first to retrieve it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381781,"byte_end":381820,"line_start":403,"line_end":403,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382290,"byte_end":382296,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"remove","qualname":"<Resources>::remove","value":"pub fn remove<T: Resource>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the type `T` from this store if it exists.","sig":null,"attributes":[{"value":"/ Removes the type `T` from this store if it exists.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382105,"byte_end":382159,"line_start":413,"line_end":413,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382164,"byte_end":382167,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382172,"byte_end":382185,"line_start":415,"line_end":415,"column_start":5,"column_end":18}},{"value":"/ If the type `T` was stored, the inner instance of `T is returned. Otherwise, `None`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382190,"byte_end":382278,"line_start":416,"line_end":416,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4710},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382916,"byte_end":382919,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"get","qualname":"<Resources>::get","value":"pub fn get<T: Resource>(&Self) -> Option<Fetch<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve an immutable reference to  `T` from the store if it exists. Otherwise, return `None`.","sig":null,"attributes":[{"value":"/ Retrieve an immutable reference to  `T` from the store if it exists. Otherwise, return `None`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382721,"byte_end":382819,"line_start":431,"line_end":431,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382824,"byte_end":382827,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382832,"byte_end":382844,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/ Panics if the resource is already borrowed mutably.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":382849,"byte_end":382904,"line_start":434,"line_end":434,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":383344,"byte_end":383351,"line_start":444,"line_end":444,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Resources>::get_mut","value":"pub fn get_mut<T: Resource>(&Self) -> Option<FetchMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable reference to  `T` from the store if it exists. Otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ Retrieve a mutable reference to  `T` from the store if it exists. Otherwise, return `None`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":383237,"byte_end":383332,"line_start":443,"line_end":443,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":4714},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":383878,"byte_end":383896,"line_start":454,"line_end":454,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<Resources>::get_or_insert_with","value":"pub fn get_or_insert_with<T: Resource, F: FnOnce() -> T>(&mut Self, F)\n-> Fetch<, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve an immutable reference to `T` from the store. If it does not exist,\n the closure `f` is called to construct the object and it is then inserted into the store.\n","sig":null,"attributes":[{"value":"/ Attempts to retrieve an immutable reference to `T` from the store. If it does not exist,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":383676,"byte_end":383768,"line_start":452,"line_end":452,"column_start":5,"column_end":97}},{"value":"/ the closure `f` is called to construct the object and it is then inserted into the store.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":383773,"byte_end":383866,"line_start":453,"line_end":453,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":384578,"byte_end":384600,"line_start":470,"line_end":470,"column_start":12,"column_end":34},"name":"get_mut_or_insert_with","qualname":"<Resources>::get_mut_or_insert_with","value":"pub fn get_mut_or_insert_with<T: Resource, F: FnOnce() -> T>(&mut Self, F)\n-> FetchMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve a mutable reference to `T` from the store. If it does not exist,\n the closure `f` is called to construct the object and it is then inserted into the store.\n","sig":null,"attributes":[{"value":"/ Attempts to retrieve a mutable reference to `T` from the store. If it does not exist,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":384379,"byte_end":384468,"line_start":468,"line_end":468,"column_start":5,"column_end":94}},{"value":"/ the closure `f` is called to construct the object and it is then inserted into the store.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":384473,"byte_end":384566,"line_start":469,"line_end":469,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385296,"byte_end":385309,"line_start":489,"line_end":489,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<Resources>::get_or_insert","value":"pub fn get_or_insert<T: Resource>(&mut Self, T) -> Fetch<, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve an immutable reference to `T` from the store. If it does not exist,\n the provided value is inserted and then a reference to it is returned.\n","sig":null,"attributes":[{"value":"/ Attempts to retrieve an immutable reference to `T` from the store. If it does not exist,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385113,"byte_end":385205,"line_start":487,"line_end":487,"column_start":5,"column_end":97}},{"value":"/ the provided value is inserted and then a reference to it is returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385210,"byte_end":385284,"line_start":488,"line_end":488,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4725},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385595,"byte_end":385612,"line_start":495,"line_end":495,"column_start":12,"column_end":29},"name":"get_mut_or_insert","qualname":"<Resources>::get_mut_or_insert","value":"pub fn get_mut_or_insert<T: Resource>(&mut Self, T) -> FetchMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve a mutable reference to `T` from the store. If it does not exist,\n the provided value is inserted and then a reference to it is returned.\n","sig":null,"attributes":[{"value":"/ Attempts to retrieve a mutable reference to `T` from the store. If it does not exist,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385415,"byte_end":385504,"line_start":493,"line_end":493,"column_start":5,"column_end":94}},{"value":"/ the provided value is inserted and then a reference to it is returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385509,"byte_end":385583,"line_start":494,"line_end":494,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385942,"byte_end":385956,"line_start":503,"line_end":503,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<Resources>::get_or_default","value":"pub fn get_or_default<T: Resource + Default>(&mut Self) -> Fetch<, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve an immutable reference to `T` from the store. If it does not exist,\n the default constructor for `T` is called.","sig":null,"attributes":[{"value":"/ Attempts to retrieve an immutable reference to `T` from the store. If it does not exist,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385725,"byte_end":385817,"line_start":499,"line_end":499,"column_start":5,"column_end":97}},{"value":"/ the default constructor for `T` is called.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385822,"byte_end":385868,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385873,"byte_end":385876,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ `T` must implement `Default` for this method.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":385881,"byte_end":385930,"line_start":502,"line_end":502,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386278,"byte_end":386296,"line_start":511,"line_end":511,"column_start":12,"column_end":30},"name":"get_mut_or_default","qualname":"<Resources>::get_mut_or_default","value":"pub fn get_mut_or_default<T: Resource + Default>(&mut Self) -> FetchMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve a mutable reference to `T` from the store. If it does not exist,\n the default constructor for `T` is called.","sig":null,"attributes":[{"value":"/ Attempts to retrieve a mutable reference to `T` from the store. If it does not exist,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386064,"byte_end":386153,"line_start":507,"line_end":507,"column_start":5,"column_end":94}},{"value":"/ the default constructor for `T` is called.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386158,"byte_end":386204,"line_start":508,"line_end":508,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386209,"byte_end":386212,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ `T` must implement `Default` for this method.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386217,"byte_end":386266,"line_start":510,"line_end":510,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386687,"byte_end":386692,"line_start":518,"line_end":518,"column_start":12,"column_end":17},"name":"merge","qualname":"<Resources>::merge","value":"pub fn merge(&mut Self, Resources)","parent":null,"children":[],"decl_id":null,"docs":" Performs merging of two resource storages, which occurs during a world merge.\n This merge will retain any already-existant resources in the local world, while moving any\n new resources from the source world into this one, consuming the resources.\n","sig":null,"attributes":[{"value":"/ Performs merging of two resource storages, which occurs during a world merge.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386411,"byte_end":386492,"line_start":515,"line_end":515,"column_start":5,"column_end":86}},{"value":"/ This merge will retain any already-existant resources in the local world, while moving any","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386497,"byte_end":386591,"line_start":516,"line_end":516,"column_start":5,"column_end":99}},{"value":"/ new resources from the source world into this one, consuming the resources.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386596,"byte_end":386675,"line_start":517,"line_end":517,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4733},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387089,"byte_end":387102,"line_start":530,"line_end":530,"column_start":12,"column_end":25},"name":"SyncResources","qualname":"::internals::systems::resources::SyncResources","value":"SyncResources {  }","parent":null,"children":[{"krate":0,"index":4735}],"decl_id":null,"docs":" A resource collection which is `Send` and `Sync`, but which only allows access to resources\n which are `Sync`.\n","sig":null,"attributes":[{"value":"/ A resource collection which is `Send` and `Sync`, but which only allows access to resources","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":386960,"byte_end":387055,"line_start":528,"line_end":528,"column_start":1,"column_end":96}},{"value":"/ which are `Sync`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387056,"byte_end":387077,"line_start":529,"line_end":529,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4738},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387375,"byte_end":387378,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"get","qualname":"<SyncResources>::get","value":"pub fn get<T: Resource + Sync>(&Self) -> Option<Fetch<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve an immutable reference to  `T` from the store if it exists. Otherwise, return `None`.","sig":null,"attributes":[{"value":"/ Retrieve an immutable reference to  `T` from the store if it exists. Otherwise, return `None`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387180,"byte_end":387278,"line_start":535,"line_end":535,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387283,"byte_end":387286,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387291,"byte_end":387303,"line_start":537,"line_end":537,"column_start":5,"column_end":17}},{"value":"/ Panics if the resource is already borrowed mutably.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387308,"byte_end":387363,"line_start":538,"line_end":538,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387778,"byte_end":387785,"line_start":547,"line_end":547,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SyncResources>::get_mut","value":"pub fn get_mut<T: Resource + Send>(&Self) -> Option<FetchMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable reference to  `T` from the store if it exists. Otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ Retrieve a mutable reference to  `T` from the store if it exists. Otherwise, return `None`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387671,"byte_end":387766,"line_start":546,"line_end":546,"column_start":5,"column_end":100}}]},{"kind":"Trait","id":{"krate":0,"index":4799},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390302,"byte_end":390318,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"ParallelRunnable","qualname":"::internals::systems::schedule::ParallelRunnable","value":"ParallelRunnable: Runnable + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" A `Runnable` which is also `Send` and `Sync`.\n","sig":null,"attributes":[{"value":"/ A `Runnable` which is also `Send` and `Sync`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390242,"byte_end":390291,"line_start":30,"line_end":30,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":4802},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390489,"byte_end":390497,"line_start":36,"line_end":36,"column_start":11,"column_end":19},"name":"Runnable","qualname":"::internals::systems::schedule::Runnable","value":"Runnable","parent":null,"children":[{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810}],"decl_id":null,"docs":" Trait describing a schedulable type. This is implemented by `System`\n","sig":null,"attributes":[{"value":"/ Trait describing a schedulable type. This is implemented by `System`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390406,"byte_end":390478,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390544,"byte_end":390548,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"name","qualname":"::internals::systems::schedule::Runnable::name","value":"pub fn name(&Self) -> Option<&SystemId>","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Gets the name of the system.\n","sig":null,"attributes":[{"value":"/ Gets the name of the system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390504,"byte_end":390536,"line_start":37,"line_end":37,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390653,"byte_end":390658,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"reads","qualname":"::internals::systems::schedule::Runnable::reads","value":"pub fn reads(&Self) -> (&[ResourceTypeId], &[ComponentTypeId])","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Gets the resources and component types read by the system.\n","sig":null,"attributes":[{"value":"/ Gets the resources and component types read by the system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390583,"byte_end":390645,"line_start":40,"line_end":40,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390788,"byte_end":390794,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"writes","qualname":"::internals::systems::schedule::Runnable::writes","value":"pub fn writes(&Self) -> (&[ResourceTypeId], &[ComponentTypeId])","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Gets the resources and component types written by the system.\n","sig":null,"attributes":[{"value":"/ Gets the resources and component types written by the system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390715,"byte_end":390780,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390913,"byte_end":390920,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"prepare","qualname":"::internals::systems::schedule::Runnable::prepare","value":"pub fn prepare(&mut Self, &World)","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Prepares the system for execution against a world.\n","sig":null,"attributes":[{"value":"/ Prepares the system for execution against a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390851,"byte_end":390905,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4807},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391081,"byte_end":391100,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"accesses_archetypes","qualname":"::internals::systems::schedule::Runnable::accesses_archetypes","value":"pub fn accesses_archetypes(&Self) -> &ArchetypeAccess","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Gets the set of archetypes the system will access when run,\n as determined when the system was last prepared.\n","sig":null,"attributes":[{"value":"/ Gets the set of archetypes the system will access when run,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390953,"byte_end":391016,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/ as determined when the system was last prepared.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391021,"byte_end":391073,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4808},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391592,"byte_end":391602,"line_start":62,"line_end":62,"column_start":15,"column_end":25},"name":"run_unsafe","qualname":"::internals::systems::schedule::Runnable::run_unsafe","value":"pub unsafe fn run_unsafe(&mut Self, &World, &UnsafeResources)","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Runs the system.","sig":null,"attributes":[{"value":"/ Runs the system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391134,"byte_end":391154,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391159,"byte_end":391162,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391167,"byte_end":391179,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391184,"byte_end":391187,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The shared references to world and resources may result in unsound mutable aliasing if other code","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391192,"byte_end":391293,"line_start":57,"line_end":57,"column_start":5,"column_end":106}},{"value":"/ is accessing the same components or resources as this system. Prefer to use `run` when possible.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391298,"byte_end":391398,"line_start":58,"line_end":58,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391403,"byte_end":391406,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Additionally, systems which are !Sync should never be invoked on a different thread to that which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391411,"byte_end":391512,"line_start":60,"line_end":60,"column_start":5,"column_end":106}},{"value":"/ owns the resources collection passed into this function.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391517,"byte_end":391577,"line_start":61,"line_end":61,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4809},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391709,"byte_end":391727,"line_start":65,"line_end":65,"column_start":8,"column_end":26},"name":"command_buffer_mut","qualname":"::internals::systems::schedule::Runnable::command_buffer_mut","value":"pub fn command_buffer_mut(&mut Self, WorldId) -> Option<&mut CommandBuffer>","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Gets the system's command buffer.\n","sig":null,"attributes":[{"value":"/ Gets the system's command buffer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391664,"byte_end":391701,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391819,"byte_end":391822,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"run","qualname":"::internals::systems::schedule::Runnable::run","value":"pub fn run(&mut Self, &mut World, &mut Resources)","parent":{"krate":0,"index":4802},"children":[],"decl_id":null,"docs":" Runs the system.\n","sig":null,"attributes":[{"value":"/ Runs the system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391791,"byte_end":391811,"line_start":67,"line_end":67,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4811},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392313,"byte_end":392321,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"Executor","qualname":"::internals::systems::schedule::Executor","value":"Executor {  }","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816}],"decl_id":null,"docs":" Executes a sequence of systems, potentially in parallel, and then commits their command buffers.","sig":null,"attributes":[{"value":"/ Executes a sequence of systems, potentially in parallel, and then commits their command buffers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":391956,"byte_end":392056,"line_start":73,"line_end":73,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392057,"byte_end":392060,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Systems are provided in execution order. When the `parallel` feature is enabled, the `Executor`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392061,"byte_end":392160,"line_start":75,"line_end":75,"column_start":1,"column_end":100}},{"value":"/ may run some systems in parallel. The order in which side-effects (e.g. writes to resources","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392161,"byte_end":392256,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ or entities) are observed is maintained.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392257,"byte_end":392301,"line_start":77,"line_end":77,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":394071,"byte_end":394074,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<Executor>::new","value":"pub fn new(Vec<Box<dyn ParallelRunnable>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new executor for all systems to be run in a single stage.","sig":null,"attributes":[{"value":"/ Constructs a new executor for all systems to be run in a single stage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393733,"byte_end":393807,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393812,"byte_end":393815,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Systems are provided in the order in which side-effects (e.g. writes to resources or entities)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393820,"byte_end":393918,"line_start":127,"line_end":127,"column_start":5,"column_end":103}},{"value":"/ are to be observed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393923,"byte_end":393946,"line_start":128,"line_end":128,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393951,"byte_end":393979,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"allow(clippy :: cognitive_complexity)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393984,"byte_end":394022,"line_start":130,"line_end":130,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":398921,"byte_end":398929,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<Executor>::into_vec","value":"pub fn into_vec(Self) -> Vec<Box<dyn ParallelRunnable>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this executor into a vector of its component systems.\n","sig":null,"attributes":[{"value":"/ Converts this executor into a vector of its component systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":398843,"byte_end":398909,"line_start":255,"line_end":255,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4835},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":399486,"byte_end":399493,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"execute","qualname":"<Executor>::execute","value":"pub fn execute(&mut Self, &mut World, &mut Resources)","parent":null,"children":[],"decl_id":null,"docs":" Executes all systems and then flushes their command buffers.\n","sig":null,"attributes":[{"value":"/ Executes all systems and then flushes their command buffers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":399377,"byte_end":399441,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":399446,"byte_end":399474,"line_start":269,"line_end":269,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400488,"byte_end":400499,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"run_systems","qualname":"<Executor>::run_systems","value":"pub fn run_systems(&mut Self, &mut World, &UnsafeResources)","parent":null,"children":[],"decl_id":null,"docs":" Executes all systems, potentially in parallel.","sig":null,"attributes":[{"value":"/ Executes all systems, potentially in parallel.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400160,"byte_end":400210,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400215,"byte_end":400218,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Ordering is retained in so far as the order of observed resource and component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400223,"byte_end":400305,"line_start":290,"line_end":290,"column_start":5,"column_end":87}},{"value":"/ accesses is maintained.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400310,"byte_end":400337,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400342,"byte_end":400345,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Call from within `rayon::ThreadPool::install()` to execute within a specific thread pool.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400350,"byte_end":400443,"line_start":293,"line_end":293,"column_start":5,"column_end":98}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":400448,"byte_end":400476,"line_start":294,"line_end":294,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":403625,"byte_end":403646,"line_start":366,"line_end":366,"column_start":12,"column_end":33},"name":"flush_command_buffers","qualname":"<Executor>::flush_command_buffers","value":"pub fn flush_command_buffers(&mut Self, &mut World)","parent":null,"children":[],"decl_id":null,"docs":" Flushes the recorded command buffers for all systems.\n","sig":null,"attributes":[{"value":"/ Flushes the recorded command buffers for all systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":403556,"byte_end":403613,"line_start":365,"line_end":365,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":404785,"byte_end":404792,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"Builder","qualname":"::internals::systems::schedule::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4848},{"krate":0,"index":4849}],"decl_id":null,"docs":" A factory for `Schedule`.\n","sig":null,"attributes":[{"value":"/ A factory for `Schedule`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":404744,"byte_end":404773,"line_start":395,"line_end":395,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":404934,"byte_end":404944,"line_start":403,"line_end":403,"column_start":12,"column_end":22},"name":"add_system","qualname":"<Builder>::add_system","value":"pub fn add_system<T: ParallelRunnable + 'static>(&mut Self, T) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a system to the schedule.\n","sig":null,"attributes":[{"value":"/ Adds a system to the schedule.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":404888,"byte_end":404922,"line_start":402,"line_end":402,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":405206,"byte_end":405211,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"flush","qualname":"<Builder>::flush","value":"pub fn flush(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Waits for executing systems to complete, and the flushes all outstanding system\n command buffers.\n","sig":null,"attributes":[{"value":"/ Waits for executing systems to complete, and the flushes all outstanding system","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":405086,"byte_end":405169,"line_start":408,"line_end":408,"column_start":5,"column_end":88}},{"value":"/ command buffers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":405174,"byte_end":405194,"line_start":409,"line_end":409,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":405765,"byte_end":405784,"line_start":426,"line_end":426,"column_start":12,"column_end":31},"name":"add_thread_local_fn","qualname":"<Builder>::add_thread_local_fn","value":"pub fn add_thread_local_fn<F: FnMut(&mut World, &mut Resources) -> () +\n                           'static>(&mut Self, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a thread local function to the schedule. This function will be executed on the main thread.\n","sig":null,"attributes":[{"value":"/ Adds a thread local function to the schedule. This function will be executed on the main thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":405653,"byte_end":405753,"line_start":425,"line_end":425,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406181,"byte_end":406197,"line_start":438,"line_end":438,"column_start":12,"column_end":28},"name":"add_thread_local","qualname":"<Builder>::add_thread_local","value":"pub fn add_thread_local<S: Runnable + 'static>(&mut Self, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a thread local system to the schedule. This system will be executed on the main thread.\n","sig":null,"attributes":[{"value":"/ Adds a thread local system to the schedule. This system will be executed on the main thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406073,"byte_end":406169,"line_start":437,"line_end":437,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406490,"byte_end":406495,"line_start":446,"line_end":446,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> Schedule","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the builder into a `Schedule`.\n","sig":null,"attributes":[{"value":"/ Finalizes the builder into a `Schedule`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406434,"byte_end":406478,"line_start":445,"line_end":445,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4863},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406898,"byte_end":406905,"line_start":466,"line_end":466,"column_start":5,"column_end":12},"name":"Systems","qualname":"::internals::systems::schedule::Step::Systems","value":"Step::Systems(Executor)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" A batch of systems.\n","sig":null,"attributes":[{"value":"/ A batch of systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406870,"byte_end":406893,"line_start":465,"line_end":465,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4866},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406959,"byte_end":406974,"line_start":468,"line_end":468,"column_start":5,"column_end":20},"name":"FlushCmdBuffers","qualname":"::internals::systems::schedule::Step::FlushCmdBuffers","value":"Step::FlushCmdBuffers","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Flush system command buffers.\n","sig":null,"attributes":[{"value":"/ Flush system command buffers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406921,"byte_end":406954,"line_start":467,"line_end":467,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4868},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407013,"byte_end":407026,"line_start":470,"line_end":470,"column_start":5,"column_end":18},"name":"ThreadLocalFn","qualname":"::internals::systems::schedule::Step::ThreadLocalFn","value":"Step::ThreadLocalFn(Box<dyn FnMut(&mut World, &mut Resources) -> ()>)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" A thread local function.\n","sig":null,"attributes":[{"value":"/ A thread local function.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406980,"byte_end":407008,"line_start":469,"line_end":469,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4871},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407106,"byte_end":407123,"line_start":472,"line_end":472,"column_start":5,"column_end":22},"name":"ThreadLocalSystem","qualname":"::internals::systems::schedule::Step::ThreadLocalSystem","value":"Step::ThreadLocalSystem(Box<dyn Runnable>)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" A thread local system\n","sig":null,"attributes":[{"value":"/ A thread local system","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407076,"byte_end":407101,"line_start":471,"line_end":471,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406859,"byte_end":406863,"line_start":464,"line_end":464,"column_start":10,"column_end":14},"name":"Step","qualname":"::internals::systems::schedule::Step","value":"pub enum Step {\n    Systems(Executor),\n    FlushCmdBuffers,\n    ThreadLocalFn(Box<dyn FnMut(&mut World, &mut Resources) -> ()>),\n    ThreadLocalSystem(Box<dyn Runnable>),\n}","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4866},{"krate":0,"index":4868},{"krate":0,"index":4871}],"decl_id":null,"docs":" A step in a schedule.\n","sig":null,"attributes":[{"value":"/ A step in a schedule.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406824,"byte_end":406849,"line_start":463,"line_end":463,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407875,"byte_end":407883,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"Schedule","qualname":"::internals::systems::schedule::Schedule","value":"Schedule {  }","parent":null,"children":[{"krate":0,"index":4875}],"decl_id":null,"docs":" A schedule of systems for execution.","sig":null,"attributes":[{"value":"/ A schedule of systems for execution.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407147,"byte_end":407187,"line_start":475,"line_end":475,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407188,"byte_end":407191,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407192,"byte_end":407206,"line_start":477,"line_end":477,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407207,"byte_end":407210,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407211,"byte_end":407222,"line_start":479,"line_end":479,"column_start":1,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407223,"byte_end":407243,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/ # let find_collisions = SystemBuilder::new(\"find_collisions\").build(|_,_,_,_| {});","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407244,"byte_end":407330,"line_start":481,"line_end":481,"column_start":1,"column_end":87}},{"value":"/ # let calculate_acceleration = SystemBuilder::new(\"calculate_acceleration\").build(|_,_,_,_| {});","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407331,"byte_end":407431,"line_start":482,"line_end":482,"column_start":1,"column_end":101}},{"value":"/ # let update_positions = SystemBuilder::new(\"update_positions\").build(|_,_,_,_| {});","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407432,"byte_end":407520,"line_start":483,"line_end":483,"column_start":1,"column_end":89}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407521,"byte_end":407558,"line_start":484,"line_end":484,"column_start":1,"column_end":38}},{"value":"/ let mut resources = Resources::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407559,"byte_end":407604,"line_start":485,"line_end":485,"column_start":1,"column_end":46}},{"value":"/ let mut schedule = Schedule::builder()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407605,"byte_end":407647,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/     .add_system(find_collisions)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407648,"byte_end":407684,"line_start":487,"line_end":487,"column_start":1,"column_end":37}},{"value":"/     .flush()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407685,"byte_end":407701,"line_start":488,"line_end":488,"column_start":1,"column_end":17}},{"value":"/     .add_system(calculate_acceleration)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407702,"byte_end":407745,"line_start":489,"line_end":489,"column_start":1,"column_end":44}},{"value":"/     .add_system(update_positions)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407746,"byte_end":407783,"line_start":490,"line_end":490,"column_start":1,"column_end":38}},{"value":"/     .build();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407784,"byte_end":407801,"line_start":491,"line_end":491,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407802,"byte_end":407805,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ schedule.execute(&mut world, &mut resources);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407806,"byte_end":407855,"line_start":493,"line_end":493,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407856,"byte_end":407863,"line_start":494,"line_end":494,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407978,"byte_end":407985,"line_start":501,"line_end":501,"column_start":12,"column_end":19},"name":"builder","qualname":"<Schedule>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new schedule builder.\n","sig":null,"attributes":[{"value":"/ Creates a new schedule builder.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407931,"byte_end":407966,"line_start":500,"line_end":500,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408457,"byte_end":408464,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"execute","qualname":"<Schedule>::execute","value":"pub fn execute(&mut Self, &mut World, &mut Resources)","parent":null,"children":[],"decl_id":null,"docs":" Executes all of the steps in the schedule.\n","sig":null,"attributes":[{"value":"/ Executes all of the steps in the schedule.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408366,"byte_end":408412,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408417,"byte_end":408445,"line_start":514,"line_end":514,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408910,"byte_end":408932,"line_start":525,"line_end":525,"column_start":12,"column_end":34},"name":"execute_in_thread_pool","qualname":"<Schedule>::execute_in_thread_pool","value":"pub fn execute_in_thread_pool(&mut Self, &mut World, &mut Resources,\n                              &rayon::ThreadPool)","parent":null,"children":[],"decl_id":null,"docs":" Executes all of the steps in the schedule, with parallelized systems running in\n the given thread pool.\n","sig":null,"attributes":[{"value":"/ Executes all of the steps in the schedule, with parallelized systems running in","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408751,"byte_end":408834,"line_start":522,"line_end":522,"column_start":5,"column_end":88}},{"value":"/ the given thread pool.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408839,"byte_end":408865,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":408870,"byte_end":408898,"line_start":524,"line_end":524,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4896},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":410714,"byte_end":410722,"line_start":574,"line_end":574,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<Schedule>::into_vec","value":"pub fn into_vec(Self) -> Vec<Step>","parent":null,"children":[],"decl_id":null,"docs":" Converts the schedule into a vector of steps.\n","sig":null,"attributes":[{"value":"/ Converts the schedule into a vector of steps.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":410653,"byte_end":410702,"line_start":573,"line_end":573,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":4997},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":416645,"byte_end":416653,"line_start":27,"line_end":27,"column_start":11,"column_end":19},"name":"QuerySet","qualname":"::internals::systems::system::QuerySet","value":"QuerySet: Send + Sync","parent":null,"children":[{"krate":0,"index":4998}],"decl_id":null,"docs":" Provides an abstraction across tuples of queries for system closures.\n","sig":null,"attributes":[{"value":"/ Provides an abstraction across tuples of queries for system closures.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":416561,"byte_end":416634,"line_start":26,"line_end":26,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4998},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":416773,"byte_end":416790,"line_start":29,"line_end":29,"column_start":8,"column_end":25},"name":"filter_archetypes","qualname":"::internals::systems::system::QuerySet::filter_archetypes","value":"pub fn filter_archetypes(&mut Self, &World, &mut BitSet)","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":" Evaluates the queries and records which archetypes they require access to into a bitset.\n","sig":null,"attributes":[{"value":"/ Evaluates the queries and records which archetypes they require access to into a bitset.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":416673,"byte_end":416765,"line_start":28,"line_end":28,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":11628},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418322,"byte_end":418334,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"SystemAccess","qualname":"::internals::systems::system::SystemAccess","value":"SystemAccess {  }","parent":null,"children":[{"krate":0,"index":11629},{"krate":0,"index":11630}],"decl_id":null,"docs":" Structure describing the resource and component access conditions of the system.\n","sig":null,"attributes":[{"value":"/ Structure describing the resource and component access conditions of the system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418202,"byte_end":418286,"line_start":80,"line_end":80,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":11635},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418528,"byte_end":418536,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"SystemId","qualname":"::internals::systems::system::SystemId","value":"SystemId {  }","parent":null,"children":[{"krate":0,"index":11636},{"krate":0,"index":11637}],"decl_id":null,"docs":" A diagnostic identifier for a system.\n","sig":null,"attributes":[{"value":"/ A diagnostic identifier for a system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418430,"byte_end":418471,"line_start":87,"line_end":87,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419607,"byte_end":419613,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"System","qualname":"::internals::systems::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032}],"decl_id":null,"docs":" The concrete type which contains the system closure provided by the user.  This struct should\n not be constructed directly, and instead should be created using `SystemBuilder`.","sig":null,"attributes":[{"value":"/ The concrete type which contains the system closure provided by the user.  This struct should","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419130,"byte_end":419227,"line_start":115,"line_end":115,"column_start":1,"column_end":98}},{"value":"/ not be constructed directly, and instead should be created using `SystemBuilder`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419228,"byte_end":419313,"line_start":116,"line_end":116,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419314,"byte_end":419317,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Implements `Schedulable` which is consumable by the `StageExecutor`, executing the closure.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419318,"byte_end":419413,"line_start":118,"line_end":118,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419414,"byte_end":419417,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Also handles caching of archetype information, as well as maintaining the provided","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419418,"byte_end":419504,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"/ information about what queries this system will run and, as a result, its data access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419505,"byte_end":419595,"line_start":121,"line_end":121,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":5046},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":422298,"byte_end":422306,"line_start":196,"line_end":196,"column_start":11,"column_end":19},"name":"SystemFn","qualname":"::internals::systems::system::SystemFn","value":"SystemFn<R: ResourceSet, Q: QuerySet>","parent":null,"children":[{"krate":0,"index":5049}],"decl_id":null,"docs":" A function which can provide the body of a system.\n","sig":null,"attributes":[{"value":"/ A function which can provide the body of a system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":422233,"byte_end":422287,"line_start":195,"line_end":195,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5049},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":422384,"byte_end":422387,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"run","qualname":"::internals::systems::system::SystemFn::run","value":"pub fn run(&mut Self, &mut CommandBuffer, &mut SubWorld, &mut R::Result,\n           &mut Q)","parent":{"krate":0,"index":5046},"children":[],"decl_id":null,"docs":" Runs the system body.\n","sig":null,"attributes":[{"value":"/ Runs the system body.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":422351,"byte_end":422376,"line_start":197,"line_end":197,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5055},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424184,"byte_end":424197,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"SystemBuilder","qualname":"::internals::systems::system::SystemBuilder","value":"SystemBuilder {  }","parent":null,"children":[{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063}],"decl_id":null,"docs":" A low level builder for constructing systems.\n ```rust\n # use legion::*;\n # #[derive(Copy, Clone, Debug, PartialEq)]\n # struct Position;\n # #[derive(Copy, Clone, Debug, PartialEq)]\n # struct Velocity;\n # #[derive(Copy, Clone, Debug, PartialEq)]\n # struct Model;\n #[derive(Copy, Clone, Debug, PartialEq)]\n struct Static;\n #[derive(Debug)]\n struct TestResource {}","sig":null,"attributes":[{"value":"/ A low level builder for constructing systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423302,"byte_end":423351,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/ ```rust","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423352,"byte_end":423363,"line_start":230,"line_end":230,"column_start":1,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423364,"byte_end":423384,"line_start":231,"line_end":231,"column_start":1,"column_end":21}},{"value":"/ # #[derive(Copy, Clone, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423385,"byte_end":423431,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423432,"byte_end":423454,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"/ # #[derive(Copy, Clone, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423455,"byte_end":423501,"line_start":234,"line_end":234,"column_start":1,"column_end":47}},{"value":"/ # struct Velocity;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423502,"byte_end":423524,"line_start":235,"line_end":235,"column_start":1,"column_end":23}},{"value":"/ # #[derive(Copy, Clone, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423525,"byte_end":423571,"line_start":236,"line_end":236,"column_start":1,"column_end":47}},{"value":"/ # struct Model;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423572,"byte_end":423591,"line_start":237,"line_end":237,"column_start":1,"column_end":20}},{"value":"/ #[derive(Copy, Clone, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423592,"byte_end":423636,"line_start":238,"line_end":238,"column_start":1,"column_end":45}},{"value":"/ struct Static;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423637,"byte_end":423655,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423656,"byte_end":423676,"line_start":240,"line_end":240,"column_start":1,"column_end":21}},{"value":"/ struct TestResource {}","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423677,"byte_end":423703,"line_start":241,"line_end":241,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423704,"byte_end":423707,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/  let mut system_one = SystemBuilder::new(\"TestSystem\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423708,"byte_end":423766,"line_start":243,"line_end":243,"column_start":1,"column_end":59}},{"value":"/            .read_resource::<TestResource>()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423767,"byte_end":423814,"line_start":244,"line_end":244,"column_start":1,"column_end":48}},{"value":"/            .with_query(<(Entity, Read<Position>, Read<Model>)>::query()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423815,"byte_end":423890,"line_start":245,"line_end":245,"column_start":1,"column_end":76}},{"value":"/                         .filter(!component::<Static>() | maybe_changed::<Position>()))","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423891,"byte_end":423981,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/            .build(move |commands, world, resource, queries| {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":423982,"byte_end":424047,"line_start":247,"line_end":247,"column_start":1,"column_end":66}},{"value":"/                for (entity, pos, model) in queries.iter_mut(world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424048,"byte_end":424120,"line_start":248,"line_end":248,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424121,"byte_end":424124,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/                }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424125,"byte_end":424145,"line_start":250,"line_end":250,"column_start":1,"column_end":21}},{"value":"/            });","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424146,"byte_end":424164,"line_start":251,"line_end":251,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424165,"byte_end":424172,"line_start":252,"line_end":252,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5065},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424677,"byte_end":424680,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"new","qualname":"<SystemBuilder<(), ()>>::new","value":"pub fn new<T: Into<SystemId>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new system builder to construct a new system.","sig":null,"attributes":[{"value":"/ Create a new system builder to construct a new system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424449,"byte_end":424507,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424512,"byte_end":424515,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Please note, the `name` argument for this method is just for debugging and visualization","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424520,"byte_end":424612,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ purposes and is not logically used anywhere.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424617,"byte_end":424665,"line_start":266,"line_end":266,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5072},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425315,"byte_end":425324,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"with_name","qualname":"<SystemBuilder<Q, R>>::with_name","value":"pub fn with_name(Self, SystemId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides a name to the system being built.\n","sig":null,"attributes":[{"value":"/ Provides a name to the system being built.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425257,"byte_end":425303,"line_start":293,"line_end":293,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5073},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425840,"byte_end":425850,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"with_query","qualname":"<SystemBuilder<Q, R>>::with_query","value":"pub fn with_query<V, F>(Self, Query<V, F>)\n-> SystemBuilder<<Q as ConsAppend<Query<V, F>>>::Output, R> where V: IntoView,\nF: 'static + EntityFilter, Q: ConsAppend<Query<V, F>>","parent":null,"children":[],"decl_id":null,"docs":" Defines a query to provide this system for its execution. Multiple queries can be provided,\n and queries are cached internally for efficiency for filtering and archetype ID handling.","sig":null,"attributes":[{"value":"/ Defines a query to provide this system for its execution. Multiple queries can be provided,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425442,"byte_end":425537,"line_start":301,"line_end":301,"column_start":5,"column_end":100}},{"value":"/ and queries are cached internally for efficiency for filtering and archetype ID handling.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425542,"byte_end":425635,"line_start":302,"line_end":302,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425640,"byte_end":425643,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ It is best practice to define your queries here, to allow for the caching to take place.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425648,"byte_end":425740,"line_start":304,"line_end":304,"column_start":5,"column_end":97}},{"value":"/ These queries are then provided to the executing closure as a tuple of queries.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425745,"byte_end":425828,"line_start":305,"line_end":305,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":5076},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":426737,"byte_end":426750,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"read_resource","qualname":"<SystemBuilder<Q, R>>::read_resource","value":"pub fn read_resource<T>(Self)\n-> SystemBuilder<Q, <R as ConsAppend<Read<T>>>::Output> where T: 'static +\nResource, R: ConsAppend<Read<T>>,\n<R as ConsAppend<Read<T>>>::Output: ConsFlatten","parent":null,"children":[],"decl_id":null,"docs":" Flag this resource type as being read by this system.","sig":null,"attributes":[{"value":"/ Flag this resource type as being read by this system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":426489,"byte_end":426546,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":426551,"byte_end":426554,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This will inform the dispatcher to not allow any writes access to this resource while","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":426559,"byte_end":426648,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/ this system is running. Parralel reads still occur during execution.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":426653,"byte_end":426725,"line_start":330,"line_end":330,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":427589,"byte_end":427603,"line_start":353,"line_end":353,"column_start":12,"column_end":26},"name":"write_resource","qualname":"<SystemBuilder<Q, R>>::write_resource","value":"pub fn write_resource<T>(Self)\n-> SystemBuilder<Q, <R as ConsAppend<Write<T>>>::Output> where T: 'static +\nResource, R: ConsAppend<Write<T>>,\n<R as ConsAppend<Write<T>>>::Output: ConsFlatten","parent":null,"children":[],"decl_id":null,"docs":" Flag this resource type as being written by this system.","sig":null,"attributes":[{"value":"/ Flag this resource type as being written by this system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":427381,"byte_end":427441,"line_start":349,"line_end":349,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":427446,"byte_end":427449,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This will inform the dispatcher to not allow any parallel access to this resource while","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":427454,"byte_end":427545,"line_start":351,"line_end":351,"column_start":5,"column_end":96}},{"value":"/ this system is running.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":427550,"byte_end":427577,"line_start":352,"line_end":352,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5080},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428911,"byte_end":428925,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"read_component","qualname":"<SystemBuilder<Q, R>>::read_component","value":"pub fn read_component<T>(Self) -> Self where T: Component","parent":null,"children":[],"decl_id":null,"docs":" This performs a soft resource block on the component for writing. The dispatcher will\n generally handle dispatching read and writes on components based on archetype, allowing\n for more granular access and more parallelization of systems.","sig":null,"attributes":[{"value":"/ This performs a soft resource block on the component for writing. The dispatcher will","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428233,"byte_end":428322,"line_start":371,"line_end":371,"column_start":5,"column_end":94}},{"value":"/ generally handle dispatching read and writes on components based on archetype, allowing","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428327,"byte_end":428418,"line_start":372,"line_end":372,"column_start":5,"column_end":96}},{"value":"/ for more granular access and more parallelization of systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428423,"byte_end":428488,"line_start":373,"line_end":373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428493,"byte_end":428496,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Using this method will mark the entire component as read by this system, blocking writing","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428501,"byte_end":428594,"line_start":375,"line_end":375,"column_start":5,"column_end":98}},{"value":"/ systems from accessing any archetypes which contain this component for the duration of its","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428599,"byte_end":428693,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ execution.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428698,"byte_end":428712,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428717,"byte_end":428720,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This type of access with `SubWorld` is provided for cases where sparse component access","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428725,"byte_end":428816,"line_start":379,"line_end":379,"column_start":5,"column_end":96}},{"value":"/ is required and searching entire query spaces for entities is inefficient.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":428821,"byte_end":428899,"line_start":380,"line_end":380,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5082},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429806,"byte_end":429821,"line_start":401,"line_end":401,"column_start":12,"column_end":27},"name":"write_component","qualname":"<SystemBuilder<Q, R>>::write_component","value":"pub fn write_component<T>(Self) -> Self where T: Component","parent":null,"children":[],"decl_id":null,"docs":" This performs a exclusive resource block on the component for writing. The dispatcher will\n generally handle dispatching read and writes on components based on archetype, allowing\n for more granular access and more parallelization of systems.","sig":null,"attributes":[{"value":"/ This performs a exclusive resource block on the component for writing. The dispatcher will","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429122,"byte_end":429216,"line_start":391,"line_end":391,"column_start":5,"column_end":99}},{"value":"/ generally handle dispatching read and writes on components based on archetype, allowing","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429221,"byte_end":429312,"line_start":392,"line_end":392,"column_start":5,"column_end":96}},{"value":"/ for more granular access and more parallelization of systems.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429317,"byte_end":429382,"line_start":393,"line_end":393,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429387,"byte_end":429390,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Using this method will mark the entire component as written by this system, blocking other","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429395,"byte_end":429489,"line_start":395,"line_end":395,"column_start":5,"column_end":99}},{"value":"/ systems from accessing any archetypes which contain this component for the duration of its","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429494,"byte_end":429588,"line_start":396,"line_end":396,"column_start":5,"column_end":99}},{"value":"/ execution.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429593,"byte_end":429607,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429612,"byte_end":429615,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This type of access with `SubWorld` is provided for cases where sparse component access","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429620,"byte_end":429711,"line_start":399,"line_end":399,"column_start":5,"column_end":96}},{"value":"/ is required and searching entire query spaces for entities is inefficient.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":429716,"byte_end":429794,"line_start":400,"line_end":400,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5084},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":430402,"byte_end":430407,"line_start":415,"line_end":415,"column_start":12,"column_end":17},"name":"build","qualname":"<SystemBuilder<Q, R>>::build","value":"pub fn build<F>(Self, F)\n-> System<<R as ConsFlatten>::Output, <Q as ConsFlatten>::Output, F> where\n<R as ConsFlatten>::Output: for<'a> ResourceSet,\n<Q as ConsFlatten>::Output: QuerySet,\nF: FnMut(&mut CommandBuffer, &mut SubWorld,\n         &mut <<R as ConsFlatten>::Output as ResourceSet>::Result,\n         &mut <Q as ConsFlatten>::Output) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Builds a system which is not `Schedulable`, as it is not thread safe (!Send and !Sync),\n but still implements all the calling infrastructure of the `Runnable` trait. This provides\n a way for legion consumers to leverage the `System` construction and type-handling of\n this build for thread local systems which cannot leave the main initializing thread.\n","sig":null,"attributes":[{"value":"/ Builds a system which is not `Schedulable`, as it is not thread safe (!Send and !Sync),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":430013,"byte_end":430104,"line_start":411,"line_end":411,"column_start":5,"column_end":96}},{"value":"/ but still implements all the calling infrastructure of the `Runnable` trait. This provides","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":430109,"byte_end":430203,"line_start":412,"line_end":412,"column_start":5,"column_end":99}},{"value":"/ a way for legion consumers to leverage the `System` construction and type-handling of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":430208,"byte_end":430297,"line_start":413,"line_end":413,"column_start":5,"column_end":94}},{"value":"/ this build for thread local systems which cannot leave the main initializing thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":430302,"byte_end":430390,"line_start":414,"line_end":414,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11653},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433196,"byte_end":433208,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"AccessDenied","qualname":"::internals::world::EntityAccessError::AccessDenied","value":"EntityAccessError::AccessDenied","parent":{"krate":0,"index":11652},"children":[],"decl_id":null,"docs":" Attempted to access an entity which lies outside of the subworld.\n","sig":null,"attributes":[{"value":"/ Attempted to access an entity which lies outside of the subworld.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433049,"byte_end":433118,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"error(\"this world does not have permission to access the entity\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433123,"byte_end":433191,"line_start":38,"line_end":38,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11655},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433316,"byte_end":433330,"line_start":42,"line_end":42,"column_start":5,"column_end":19},"name":"EntityNotFound","qualname":"::internals::world::EntityAccessError::EntityNotFound","value":"EntityAccessError::EntityNotFound","parent":{"krate":0,"index":11652},"children":[],"decl_id":null,"docs":" Attempted to access an entity which does not exist.\n","sig":null,"attributes":[{"value":"/ Attempted to access an entity which does not exist.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433214,"byte_end":433269,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"error(\"the entity does not exist\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433274,"byte_end":433311,"line_start":41,"line_end":41,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":11652},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433025,"byte_end":433042,"line_start":36,"line_end":36,"column_start":10,"column_end":27},"name":"EntityAccessError","qualname":"::internals::world::EntityAccessError","value":"pub enum EntityAccessError { AccessDenied, EntityNotFound, }","parent":null,"children":[{"krate":0,"index":11653},{"krate":0,"index":11655}],"decl_id":null,"docs":" Error type representing a failure to access entity data.\n","sig":null,"attributes":[{"value":"/ Error type representing a failure to access entity data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":432899,"byte_end":432959,"line_start":34,"line_end":34,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":5230},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433505,"byte_end":433516,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"EntityStore","qualname":"::internals::world::EntityStore","value":"EntityStore","parent":null,"children":[{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234}],"decl_id":null,"docs":" The `EntityStore` trait abstracts access to entity data as required by queries for\n both [World](struct.World.html) and [SubWorld](struct.SubWorld.html)\n","sig":null,"attributes":[{"value":"/ The `EntityStore` trait abstracts access to entity data as required by queries for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433335,"byte_end":433421,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ both [World](struct.World.html) and [SubWorld](struct.SubWorld.html)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433422,"byte_end":433494,"line_start":46,"line_end":46,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433565,"byte_end":433567,"line_start":49,"line_end":49,"column_start":8,"column_end":10},"name":"id","qualname":"::internals::world::EntityStore::id","value":"pub fn id(&Self) -> WorldId","parent":{"krate":0,"index":5230},"children":[],"decl_id":null,"docs":" Returns the world's unique ID.\n","sig":null,"attributes":[{"value":"/ Returns the world's unique ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433523,"byte_end":433557,"line_start":48,"line_end":48,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5232},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433687,"byte_end":433696,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"entry_ref","qualname":"::internals::world::EntityStore::entry_ref","value":"pub fn entry_ref(&Self, Entity) -> Result<EntryRef, EntityAccessError>","parent":{"krate":0,"index":5230},"children":[],"decl_id":null,"docs":" Returns an entity entry which can be used to access entity metadata and components.\n","sig":null,"attributes":[{"value":"/ Returns an entity entry which can be used to access entity metadata and components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433592,"byte_end":433679,"line_start":51,"line_end":51,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433867,"byte_end":433876,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"entry_mut","qualname":"::internals::world::EntityStore::entry_mut","value":"pub fn entry_mut(&mut Self, Entity) -> Result<EntryMut, EntityAccessError>","parent":{"krate":0,"index":5230},"children":[],"decl_id":null,"docs":" Returns a mutable entity entry which can be used to access entity metadata and components.\n","sig":null,"attributes":[{"value":"/ Returns a mutable entity entry which can be used to access entity metadata and components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433765,"byte_end":433859,"line_start":54,"line_end":54,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434082,"byte_end":434103,"line_start":58,"line_end":58,"column_start":8,"column_end":29},"name":"get_component_storage","qualname":"::internals::world::EntityStore::get_component_storage","value":"pub fn get_component_storage<V: for<'b> View>(&Self)\n-> Result<StorageAccessor, EntityAccessError>","parent":{"krate":0,"index":5230},"children":[],"decl_id":null,"docs":" Returns a component storage accessor for component types declared in the specified [View](../query/view/trait.View.html).\n","sig":null,"attributes":[{"value":"/ Returns a component storage accessor for component types declared in the specified [View](../query/view/trait.View.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":433949,"byte_end":434074,"line_start":57,"line_end":57,"column_start":5,"column_end":130}}]},{"kind":"Struct","id":{"krate":0,"index":11671},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434315,"byte_end":434322,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"WorldId","qualname":"::internals::world::WorldId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unique identifier for a [world](struct.World.html).\n","sig":null,"attributes":[{"value":"/ Unique identifier for a [world](struct.World.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434197,"byte_end":434252,"line_start":63,"line_end":63,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":11689},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434704,"byte_end":434716,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"WorldOptions","qualname":"::internals::world::WorldOptions","value":"WorldOptions { groups }","parent":null,"children":[{"krate":0,"index":11690}],"decl_id":null,"docs":" Describes configuration options for the creation of a new [world](struct.World.html).\n","sig":null,"attributes":[{"value":"/ Describes configuration options for the creation of a new [world](struct.World.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434584,"byte_end":434673,"line_start":80,"line_end":80,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":11690},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434852,"byte_end":434858,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"name":"groups","qualname":"::internals::world::WorldOptions::groups","value":"std::vec::Vec<internals::storage::group::GroupDef>","parent":{"krate":0,"index":11689},"children":[],"decl_id":null,"docs":" A vector of component [groups](../storage/struct.Group.html) to provide\n layout hints for query optimization.\n","sig":null,"attributes":[{"value":"/ A vector of component [groups](../storage/struct.Group.html) to provide","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434723,"byte_end":434798,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ layout hints for query optimization.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434803,"byte_end":434843,"line_start":84,"line_end":84,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":11693},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435247,"byte_end":435252,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"World","qualname":"::internals::world::World","value":"World {  }","parent":null,"children":[{"krate":0,"index":11694},{"krate":0,"index":11695},{"krate":0,"index":11696},{"krate":0,"index":11697},{"krate":0,"index":11698},{"krate":0,"index":11699},{"krate":0,"index":11700},{"krate":0,"index":11701},{"krate":0,"index":11702}],"decl_id":null,"docs":" A container of entities.","sig":null,"attributes":[{"value":"/ A container of entities.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434878,"byte_end":434906,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434907,"byte_end":434910,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Each entity stored inside a world is uniquely identified by an [Entity](struct.Entity.html) ID","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434911,"byte_end":435009,"line_start":90,"line_end":90,"column_start":1,"column_end":99}},{"value":"/ and may have an arbitrary collection of [components](../storage/trait.Component.html) attached.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435010,"byte_end":435109,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435110,"byte_end":435113,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The entities in a world may be efficiently searched and iterated via [queries](../query/index.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435114,"byte_end":435218,"line_start":93,"line_end":93,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":5245},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435708,"byte_end":435711,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<World>::new","value":"pub fn new(WorldOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new world with the given options,\n","sig":null,"attributes":[{"value":"/ Creates a new world with the given options,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435649,"byte_end":435696,"line_start":114,"line_end":114,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5247},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":436777,"byte_end":436779,"line_start":145,"line_end":145,"column_start":12,"column_end":14},"name":"id","qualname":"<World>::id","value":"pub fn id(&Self) -> WorldId","parent":null,"children":[],"decl_id":null,"docs":" Returns the world's unique ID.\n","sig":null,"attributes":[{"value":"/ Returns the world's unique ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":436731,"byte_end":436765,"line_start":144,"line_end":144,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":436887,"byte_end":436890,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"len","qualname":"<World>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entities in the world.\n","sig":null,"attributes":[{"value":"/ Returns the number of entities in the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":436827,"byte_end":436875,"line_start":149,"line_end":149,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5249},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":437013,"byte_end":437021,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<World>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the world contains no entities.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the world contains no entities.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":436948,"byte_end":437001,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5250},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":437155,"byte_end":437163,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"contains","qualname":"<World>::contains","value":"pub fn contains(&Self, Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the world contains an entity with the given ID.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the world contains an entity with the given ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":437074,"byte_end":437143,"line_start":159,"line_end":159,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5251},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":437347,"byte_end":437359,"line_start":165,"line_end":165,"column_start":12,"column_end":24},"name":"push_with_id","qualname":"<World>::push_with_id","value":"pub fn push_with_id<T>(&mut Self, Entity, T) where\nOption<T>: IntoComponentSource","parent":null,"children":[],"decl_id":null,"docs":" Appends a named entity to the word, replacing any existing entity with the given ID.\n","sig":null,"attributes":[{"value":"/ Appends a named entity to the word, replacing any existing entity with the given ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":437247,"byte_end":437335,"line_start":164,"line_end":164,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438655,"byte_end":438659,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"push","qualname":"<World>::push","value":"pub fn push<T>(&mut Self, T) -> Entity where Option<T>: IntoComponentSource","parent":null,"children":[],"decl_id":null,"docs":" Appends a new entity to the world. Returns the ID of the new entity.\n `components` should be a tuple of components to attach to the entity.","sig":null,"attributes":[{"value":"/ Appends a new entity to the world. Returns the ID of the new entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438045,"byte_end":438117,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ `components` should be a tuple of components to attach to the entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438122,"byte_end":438195,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438200,"byte_end":438203,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438208,"byte_end":438222,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438227,"byte_end":438230,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Pushing an entity with three components:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438235,"byte_end":438279,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438284,"byte_end":438291,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438296,"byte_end":438316,"line_start":190,"line_end":190,"column_start":5,"column_end":25}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438321,"byte_end":438358,"line_start":191,"line_end":191,"column_start":5,"column_end":42}},{"value":"/ let _entity = world.push((1usize, false, 5.3f32));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438363,"byte_end":438417,"line_start":192,"line_end":192,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438422,"byte_end":438429,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438434,"byte_end":438437,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Pushing an entity with one component (note the tuple syntax):","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438442,"byte_end":438507,"line_start":195,"line_end":195,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438512,"byte_end":438519,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438524,"byte_end":438544,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438549,"byte_end":438586,"line_start":198,"line_end":198,"column_start":5,"column_end":42}},{"value":"/ let _entity = world.push((1usize,));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438591,"byte_end":438631,"line_start":199,"line_end":199,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438636,"byte_end":438643,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439747,"byte_end":439753,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"extend","qualname":"<World>::extend","value":"pub fn extend<impl IntoComponentSource: IntoComponentSource>(&mut Self,\n                                                             impl IntoComponentSource)\n-> &[Entity]","parent":null,"children":[],"decl_id":null,"docs":" Appends a collection of entities to the world. Returns the IDs of the new entities.","sig":null,"attributes":[{"value":"/ Appends a collection of entities to the world. Returns the IDs of the new entities.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438807,"byte_end":438894,"line_start":208,"line_end":208,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438899,"byte_end":438902,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438907,"byte_end":438921,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438926,"byte_end":438929,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Inserting a vector of component tuples:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438934,"byte_end":438977,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438982,"byte_end":438989,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":438994,"byte_end":439014,"line_start":214,"line_end":214,"column_start":5,"column_end":25}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439019,"byte_end":439056,"line_start":215,"line_end":215,"column_start":5,"column_end":42}},{"value":"/ let _entities = world.extend(vec![","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439061,"byte_end":439099,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/     (1usize, false, 5.3f32),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439104,"byte_end":439136,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/     (2usize, true,  5.3f32),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439141,"byte_end":439173,"line_start":218,"line_end":218,"column_start":5,"column_end":37}},{"value":"/     (3usize, false, 5.3f32),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439178,"byte_end":439210,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439215,"byte_end":439222,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439227,"byte_end":439234,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439239,"byte_end":439242,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Inserting a tuple of component vectors:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439247,"byte_end":439290,"line_start":223,"line_end":223,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439295,"byte_end":439302,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439307,"byte_end":439327,"line_start":225,"line_end":225,"column_start":5,"column_end":25}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439332,"byte_end":439369,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/ let _entities = world.extend(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439374,"byte_end":439407,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/     (","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439412,"byte_end":439421,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/         vec![1usize, 2usize, 3usize],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439426,"byte_end":439467,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/         vec![false, true, false],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439472,"byte_end":439509,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/         vec![5.3f32, 5.3f32, 5.2f32],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439514,"byte_end":439555,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/     ).into_soa()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439560,"byte_end":439580,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439585,"byte_end":439591,"line_start":233,"line_end":233,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439596,"byte_end":439603,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ SoA inserts require all vectors to have the same length. These inserts are faster than inserting via an iterator of tuples.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":439608,"byte_end":439735,"line_start":235,"line_end":235,"column_start":5,"column_end":132}}]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":440716,"byte_end":440722,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"remove","qualname":"<World>::remove","value":"pub fn remove(&mut Self, Entity) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes the specified entity from the world. Returns `true` if an entity was removed.\n","sig":null,"attributes":[{"value":"/ Removes the specified entity from the world. Returns `true` if an entity was removed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":440615,"byte_end":440704,"line_start":259,"line_end":259,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":441667,"byte_end":441672,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"name":"clear","qualname":"<World>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all entities from the world.\n","sig":null,"attributes":[{"value":"/ Removes all entities from the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":441615,"byte_end":441655,"line_start":284,"line_end":284,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5263},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442360,"byte_end":442365,"line_start":308,"line_end":308,"column_start":12,"column_end":17},"name":"entry","qualname":"<World>::entry","value":"pub fn entry(&mut Self, Entity) -> Option<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Gets an [entry](struct.Entry.html) for an entity, allowing manipulation of the\n entity.","sig":null,"attributes":[{"value":"/ Gets an [entry](struct.Entry.html) for an entity, allowing manipulation of the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":441928,"byte_end":442010,"line_start":294,"line_end":294,"column_start":5,"column_end":87}},{"value":"/ entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442015,"byte_end":442026,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442031,"byte_end":442034,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442039,"byte_end":442053,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442058,"byte_end":442061,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Adding a component to an entity:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442066,"byte_end":442102,"line_start":299,"line_end":299,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442107,"byte_end":442114,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442119,"byte_end":442139,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442144,"byte_end":442181,"line_start":302,"line_end":302,"column_start":5,"column_end":42}},{"value":"/ let entity = world.push((true, 0isize));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442186,"byte_end":442230,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/ if let Some(mut entry) = world.entry(entity) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442235,"byte_end":442285,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/     entry.add_component(0.2f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442290,"byte_end":442326,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442331,"byte_end":442336,"line_start":306,"line_end":306,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":442341,"byte_end":442348,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5267},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443081,"byte_end":443090,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<World>::subscribe","value":"pub fn subscribe<T, S>(&mut Self, S, T) where T: LayoutFilter + Send + Sync +\n'static, S: EventSender + 'static","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to entity [events](../event/enum.Event.html).\n","sig":null,"attributes":[{"value":"/ Subscribes to entity [events](../event/enum.Event.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443009,"byte_end":443069,"line_start":331,"line_end":331,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443742,"byte_end":443746,"line_start":349,"line_end":349,"column_start":12,"column_end":16},"name":"pack","qualname":"<World>::pack","value":"pub fn pack(&mut Self, PackOptions)","parent":null,"children":[],"decl_id":null,"docs":" Packs the world's internal component storage to optimise iteration performance for\n [queries](../query/index.html) which match a [group](../storage/struct.Group.html)\n defined when this world was created.\n","sig":null,"attributes":[{"value":"/ Packs the world's internal component storage to optimise iteration performance for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443508,"byte_end":443594,"line_start":346,"line_end":346,"column_start":5,"column_end":91}},{"value":"/ [queries](../query/index.html) which match a [group](../storage/struct.Group.html)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443599,"byte_end":443685,"line_start":347,"line_end":347,"column_start":5,"column_end":91}},{"value":"/ defined when this world was created.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443690,"byte_end":443730,"line_start":348,"line_end":348,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5271},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443883,"byte_end":443893,"line_start":354,"line_end":354,"column_start":12,"column_end":22},"name":"components","qualname":"<World>::components","value":"pub fn components(&Self) -> &Components","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw component storage.\n","sig":null,"attributes":[{"value":"/ Returns the raw component storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":443833,"byte_end":443871,"line_start":353,"line_end":353,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449565,"byte_end":449570,"line_start":512,"line_end":512,"column_start":12,"column_end":17},"name":"split","qualname":"<World>::split","value":"pub fn split<T: IntoView>(&mut Self) -> (SubWorld, SubWorld)","parent":null,"children":[],"decl_id":null,"docs":" Splits the world into two. The left world allows access only to the data declared by the view;\n the right world allows access to all else.","sig":null,"attributes":[{"value":"/ Splits the world into two. The left world allows access only to the data declared by the view;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448620,"byte_end":448718,"line_start":488,"line_end":488,"column_start":5,"column_end":103}},{"value":"/ the right world allows access to all else.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448723,"byte_end":448769,"line_start":489,"line_end":489,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448774,"byte_end":448777,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448782,"byte_end":448796,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448801,"byte_end":448804,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448809,"byte_end":448816,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448821,"byte_end":448841,"line_start":494,"line_end":494,"column_start":5,"column_end":25}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448846,"byte_end":448868,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448873,"byte_end":448912,"line_start":496,"line_end":496,"column_start":5,"column_end":44}},{"value":"/ let (left, right) = world.split::<&mut Position>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448917,"byte_end":448972,"line_start":497,"line_end":497,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448977,"byte_end":448984,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448989,"byte_end":448992,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ With the above, 'left' contains a sub-world with access _only_ to `&Position` and `&mut Position`,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":448997,"byte_end":449099,"line_start":500,"line_end":500,"column_start":5,"column_end":107}},{"value":"/ and `right` contains a sub-world with access to everything _but_ `&Position` and `&mut Position`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449104,"byte_end":449205,"line_start":501,"line_end":501,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449210,"byte_end":449213,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449218,"byte_end":449225,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449230,"byte_end":449250,"line_start":504,"line_end":504,"column_start":5,"column_end":25}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449255,"byte_end":449277,"line_start":505,"line_end":505,"column_start":5,"column_end":27}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449282,"byte_end":449321,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/ let (left, right) = world.split::<&Position>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449326,"byte_end":449377,"line_start":507,"line_end":507,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449382,"byte_end":449389,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449394,"byte_end":449397,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ In this second example, `left` is provided access _only_ to `&Position`. `right` is granted permission","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449402,"byte_end":449508,"line_start":510,"line_end":510,"column_start":5,"column_end":111}},{"value":"/ to everything _but_ `&mut Position`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":449513,"byte_end":449553,"line_start":511,"line_end":511,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5283},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":450205,"byte_end":450220,"line_start":527,"line_end":527,"column_start":12,"column_end":27},"name":"split_for_query","qualname":"<World>::split_for_query","value":"pub fn split_for_query<'q, V: IntoView,\n                       F: EntityFilter>(&mut Self, &'q Query<V, F>)\n-> (SubWorld, SubWorld)","parent":null,"children":[],"decl_id":null,"docs":" Splits the world into two. The left world allows access only to the data declared by the query's view;\n the right world allows access to all else.\n","sig":null,"attributes":[{"value":"/ Splits the world into two. The left world allows access only to the data declared by the query's view;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":450036,"byte_end":450142,"line_start":525,"line_end":525,"column_start":5,"column_end":111}},{"value":"/ the right world allows access to all else.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":450147,"byte_end":450193,"line_start":526,"line_end":526,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5287},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":450474,"byte_end":450483,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"move_from","qualname":"<World>::move_from","value":"pub fn move_from<F: LayoutFilter>(&mut Self, &mut World, &F)","parent":null,"children":[],"decl_id":null,"docs":" Merges the given world into this world by moving all entities out of the source world.\n","sig":null,"attributes":[{"value":"/ Merges the given world into this world by moving all entities out of the source world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":450372,"byte_end":450462,"line_start":534,"line_end":534,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":5291},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453749,"byte_end":453759,"line_start":610,"line_end":610,"column_start":12,"column_end":22},"name":"clone_from","qualname":"<World>::clone_from","value":"pub fn clone_from<F: LayoutFilter, M: Merger>(&mut Self, &World, &F, &mut M)\n-> HashMap<Entity, Entity, EntityHasher>","parent":null,"children":[],"decl_id":null,"docs":" Clones the entities from a world into this world.","sig":null,"attributes":[{"value":"/ Clones the entities from a world into this world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452530,"byte_end":452583,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452588,"byte_end":452591,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ A [filter](../query/trait.LayoutFilter.html) selects which entities to merge.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452596,"byte_end":452679,"line_start":586,"line_end":586,"column_start":5,"column_end":88}},{"value":"/ A [merger](trait.Merger.html) describes how to perform the merge operation.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452684,"byte_end":452765,"line_start":587,"line_end":587,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452770,"byte_end":452773,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ If any entity IDs are remapped by the policy, their mappings will be returned in the result.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452778,"byte_end":452874,"line_start":589,"line_end":589,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452879,"byte_end":452882,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ More advanced operations such as component type transformations can be performed with the [Duplicate](struct.Duplicate.html) merger.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":452887,"byte_end":453023,"line_start":591,"line_end":591,"column_start":5,"column_end":141}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453028,"byte_end":453031,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453036,"byte_end":453050,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453055,"byte_end":453058,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Cloning all entities from the source world, converting all `i32` components to `f64` components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453063,"byte_end":453163,"line_start":595,"line_end":595,"column_start":5,"column_end":105}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453168,"byte_end":453175,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453180,"byte_end":453200,"line_start":597,"line_end":597,"column_start":5,"column_end":25}},{"value":"/ # use legion::world::Duplicate;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453205,"byte_end":453240,"line_start":598,"line_end":598,"column_start":5,"column_end":40}},{"value":"/ let mut world_a = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453245,"byte_end":453284,"line_start":599,"line_end":599,"column_start":5,"column_end":44}},{"value":"/ let mut world_b = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453289,"byte_end":453328,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453333,"byte_end":453336,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ // any component types not registered with Duplicate will be ignored during the merge","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453341,"byte_end":453430,"line_start":602,"line_end":602,"column_start":5,"column_end":94}},{"value":"/ let mut merger = Duplicate::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453435,"byte_end":453477,"line_start":603,"line_end":603,"column_start":5,"column_end":47}},{"value":"/ merger.register_copy::<isize>(); // copy is faster than clone","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453482,"byte_end":453547,"line_start":604,"line_end":604,"column_start":5,"column_end":70}},{"value":"/ merger.register_clone::<String>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453552,"byte_end":453590,"line_start":605,"line_end":605,"column_start":5,"column_end":43}},{"value":"/ merger.register_convert(|comp: &i32| *comp as f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453595,"byte_end":453650,"line_start":606,"line_end":606,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453655,"byte_end":453658,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let _ = world_a.clone_from(&world_b, &any(), &mut merger);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453663,"byte_end":453725,"line_start":608,"line_end":608,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":453730,"byte_end":453737,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":457374,"byte_end":457391,"line_start":704,"line_end":704,"column_start":12,"column_end":29},"name":"clone_from_single","qualname":"<World>::clone_from_single","value":"pub fn clone_from_single<M: Merger>(&mut Self, &World, Entity, &mut M)\n-> Entity","parent":null,"children":[],"decl_id":null,"docs":" Clones a single entity from the source world into the destination world.\n","sig":null,"attributes":[{"value":"/ Clones a single entity from the source world into the destination world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":457286,"byte_end":457362,"line_start":703,"line_end":703,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461836,"byte_end":461851,"line_start":816,"line_end":816,"column_start":12,"column_end":27},"name":"as_serializable","qualname":"<World>::as_serializable","value":"pub fn as_serializable<'a, F: LayoutFilter,\n                       W: crate::internals::serialize::ser::WorldSerializer>(&'a Self,\n                                                                             F,\n                                                                             &'a W)\n-> crate::internals::serialize::ser::SerializableWorld","parent":null,"children":[],"decl_id":null,"docs":" Creates a serde serializable representation of the world.","sig":null,"attributes":[{"value":"/ Creates a serde serializable representation of the world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":459782,"byte_end":459843,"line_start":776,"line_end":776,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":459848,"byte_end":459851,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ A [filter](../query/trait.LayoutFilter.html) selects which entities shall be serialized.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":459856,"byte_end":459950,"line_start":778,"line_end":778,"column_start":5,"column_end":99}},{"value":"/ A [world serializer](../serialize/trait.WorldSerializer.html) describes how components will","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":459955,"byte_end":460050,"line_start":779,"line_end":779,"column_start":5,"column_end":100}},{"value":"/ be serialized.  ","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460055,"byte_end":460075,"line_start":780,"line_end":780,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460080,"byte_end":460083,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ As component types are not known at compile time, the world must be provided with the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460088,"byte_end":460177,"line_start":782,"line_end":782,"column_start":5,"column_end":94}},{"value":"/ means to serialize each component. This is provided by the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460182,"byte_end":460244,"line_start":783,"line_end":783,"column_start":5,"column_end":67}},{"value":"/ [WorldSerializer](../serialize/trait.WorldSerializer.html) implementation. This implementation","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460249,"byte_end":460347,"line_start":784,"line_end":784,"column_start":5,"column_end":103}},{"value":"/ also describes how [ComponentTypeIDs](../storage/struct.ComponentTypeId.html) (which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460352,"byte_end":460440,"line_start":785,"line_end":785,"column_start":5,"column_end":93}},{"value":"/ are not stable between compiles) are mapped to stable type identifiers. Components that are","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460445,"byte_end":460540,"line_start":786,"line_end":786,"column_start":5,"column_end":100}},{"value":"/ not known to the serializer will be omitted from the serialized output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460545,"byte_end":460620,"line_start":787,"line_end":787,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460625,"byte_end":460628,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The [Registry](../serialize/struct.Registry.html) provides a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460633,"byte_end":460697,"line_start":789,"line_end":789,"column_start":5,"column_end":69}},{"value":"/ [WorldSerializer](../serialize/trait.WorldSerializer.html) implementation suitable for most","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460702,"byte_end":460797,"line_start":790,"line_end":790,"column_start":5,"column_end":100}},{"value":"/ situations.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460802,"byte_end":460817,"line_start":791,"line_end":791,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460822,"byte_end":460825,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460830,"byte_end":460844,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460849,"byte_end":460852,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Serializing all entities with a `Position` component to JSON.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460857,"byte_end":460922,"line_start":795,"line_end":795,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460927,"byte_end":460934,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460939,"byte_end":460959,"line_start":797,"line_end":797,"column_start":5,"column_end":25}},{"value":"/ # let world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":460964,"byte_end":460999,"line_start":798,"line_end":798,"column_start":5,"column_end":40}},{"value":"/ # #[derive(serde::Serialize, serde::Deserialize)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461004,"byte_end":461057,"line_start":799,"line_end":799,"column_start":5,"column_end":58}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461062,"byte_end":461084,"line_start":800,"line_end":800,"column_start":5,"column_end":27}},{"value":"/ // create a registry which uses strings as the external type ID","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461089,"byte_end":461156,"line_start":801,"line_end":801,"column_start":5,"column_end":72}},{"value":"/ let mut registry = Registry::<String>::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461161,"byte_end":461214,"line_start":802,"line_end":802,"column_start":5,"column_end":58}},{"value":"/ registry.register::<Position>(\"position\".to_string());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461219,"byte_end":461277,"line_start":803,"line_end":803,"column_start":5,"column_end":63}},{"value":"/ registry.register::<f32>(\"f32\".to_string());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461282,"byte_end":461330,"line_start":804,"line_end":804,"column_start":5,"column_end":53}},{"value":"/ registry.register::<bool>(\"bool\".to_string());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461335,"byte_end":461385,"line_start":805,"line_end":805,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461390,"byte_end":461393,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ // serialize entities with the `Position` component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461398,"byte_end":461453,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/ let json = serde_json::to_value(&world.as_serializable(component::<Position>(), &registry)).unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461458,"byte_end":461563,"line_start":808,"line_end":808,"column_start":5,"column_end":110}},{"value":"/ println!(\"{:#}\", json);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461568,"byte_end":461595,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461600,"byte_end":461603,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ // registries can also be used to deserialize","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461608,"byte_end":461657,"line_start":811,"line_end":811,"column_start":5,"column_end":54}},{"value":"/ use serde::de::DeserializeSeed;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461662,"byte_end":461697,"line_start":812,"line_end":812,"column_start":5,"column_end":40}},{"value":"/ let world: World = registry.as_deserialize().deserialize(json).unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461702,"byte_end":461778,"line_start":813,"line_end":813,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461783,"byte_end":461790,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"serialize\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":461795,"byte_end":461824,"line_start":815,"line_end":815,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":11705},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":463395,"byte_end":463410,"line_start":870,"line_end":870,"column_start":12,"column_end":27},"name":"StorageAccessor","qualname":"::internals::world::StorageAccessor","value":"StorageAccessor {  }","parent":null,"children":[{"krate":0,"index":11707},{"krate":0,"index":11708},{"krate":0,"index":11709},{"krate":0,"index":11710},{"krate":0,"index":11711},{"krate":0,"index":11712},{"krate":0,"index":11713}],"decl_id":null,"docs":" Provides access to the archetypes and entity components contained within a world.\n","sig":null,"attributes":[{"value":"/ Provides access to the archetypes and entity components contained within a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":463275,"byte_end":463360,"line_start":868,"line_end":868,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464465,"byte_end":464467,"line_start":911,"line_end":911,"column_start":12,"column_end":14},"name":"id","qualname":"<StorageAccessor>::id","value":"pub fn id(&Self) -> WorldId","parent":null,"children":[],"decl_id":null,"docs":" Returns the world ID.\n","sig":null,"attributes":[{"value":"/ Returns the world ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464428,"byte_end":464453,"line_start":910,"line_end":910,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464610,"byte_end":464630,"line_start":916,"line_end":916,"column_start":12,"column_end":32},"name":"can_access_archetype","qualname":"<StorageAccessor>::can_access_archetype","value":"pub fn can_access_archetype(&Self, ArchetypeIndex) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given archetype is accessable from this storage accessor.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given archetype is accessable from this storage accessor.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464515,"byte_end":464598,"line_start":915,"line_end":915,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":5323},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464902,"byte_end":464914,"line_start":924,"line_end":924,"column_start":12,"column_end":24},"name":"layout_index","qualname":"<StorageAccessor>::layout_index","value":"pub fn layout_index(&Self) -> &'a SearchIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns the archetype layout index.\n","sig":null,"attributes":[{"value":"/ Returns the archetype layout index.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464851,"byte_end":464890,"line_start":923,"line_end":923,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465019,"byte_end":465029,"line_start":929,"line_end":929,"column_start":12,"column_end":22},"name":"components","qualname":"<StorageAccessor>::components","value":"pub fn components(&Self) -> &'a Components","parent":null,"children":[],"decl_id":null,"docs":" Returns the component storage.\n","sig":null,"attributes":[{"value":"/ Returns the component storage.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":464973,"byte_end":465007,"line_start":928,"line_end":928,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465131,"byte_end":465141,"line_start":934,"line_end":934,"column_start":12,"column_end":22},"name":"archetypes","qualname":"<StorageAccessor>::archetypes","value":"pub fn archetypes(&Self) -> &'a [Archetype]","parent":null,"children":[],"decl_id":null,"docs":" Returns the archetypes.\n","sig":null,"attributes":[{"value":"/ Returns the archetypes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465092,"byte_end":465119,"line_start":933,"line_end":933,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465247,"byte_end":465253,"line_start":939,"line_end":939,"column_start":12,"column_end":18},"name":"groups","qualname":"<StorageAccessor>::groups","value":"pub fn groups(&Self) -> &'a [Group]","parent":null,"children":[],"decl_id":null,"docs":" Returns group definitions.\n","sig":null,"attributes":[{"value":"/ Returns group definitions.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465205,"byte_end":465235,"line_start":938,"line_end":938,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5327},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465374,"byte_end":465379,"line_start":944,"line_end":944,"column_start":12,"column_end":17},"name":"group","qualname":"<StorageAccessor>::group","value":"pub fn group(&Self, ComponentTypeId) -> Option<(usize, &'a Group)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the group the given component belongs to.\n","sig":null,"attributes":[{"value":"/ Returns the group the given component belongs to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465309,"byte_end":465362,"line_start":943,"line_end":943,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":5329},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465635,"byte_end":465641,"line_start":952,"line_end":952,"column_start":11,"column_end":17},"name":"Merger","qualname":"::internals::world::Merger","value":"Merger","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334}],"decl_id":null,"docs":" Describes how to merge two [worlds](struct.World.html).\n","sig":null,"attributes":[{"value":"/ Describes how to merge two [worlds](struct.World.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465565,"byte_end":465624,"line_start":951,"line_end":951,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5330},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465742,"byte_end":465763,"line_start":955,"line_end":955,"column_start":8,"column_end":29},"name":"prefers_new_archetype","qualname":"::internals::world::Merger::prefers_new_archetype","value":"pub fn prefers_new_archetype() -> bool","parent":{"krate":0,"index":5329},"children":[],"decl_id":null,"docs":" Indicates if the merger prefers to merge into a new empty archetype.\n","sig":null,"attributes":[{"value":"/ Indicates if the merger prefers to merge into a new empty archetype.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465648,"byte_end":465720,"line_start":953,"line_end":953,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465725,"byte_end":465734,"line_start":954,"line_end":954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465893,"byte_end":465903,"line_start":960,"line_end":960,"column_start":8,"column_end":18},"name":"entity_map","qualname":"::internals::world::Merger::entity_map","value":"pub fn entity_map(&mut Self) -> EntityRewrite","parent":{"krate":0,"index":5329},"children":[],"decl_id":null,"docs":" Indicates how the merger wishes entity IDs to be adjusted while cloning a world.\n","sig":null,"attributes":[{"value":"/ Indicates how the merger wishes entity IDs to be adjusted while cloning a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465801,"byte_end":465885,"line_start":959,"line_end":959,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":5332},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466112,"byte_end":466121,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"assign_id","qualname":"::internals::world::Merger::assign_id","value":"pub fn assign_id(&mut Self, Entity, &mut Allocate) -> Entity","parent":{"krate":0,"index":5329},"children":[],"decl_id":null,"docs":" Returns the ID to use in the destination world when cloning the given entity.\n","sig":null,"attributes":[{"value":"/ Returns the ID to use in the destination world when cloning the given entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":465978,"byte_end":466059,"line_start":964,"line_end":964,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466064,"byte_end":466073,"line_start":965,"line_end":965,"column_start":5,"column_end":14}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466078,"byte_end":466104,"line_start":966,"line_end":966,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5333},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466329,"byte_end":466343,"line_start":973,"line_end":973,"column_start":8,"column_end":22},"name":"convert_layout","qualname":"::internals::world::Merger::convert_layout","value":"pub fn convert_layout(&mut Self, EntityLayout) -> EntityLayout","parent":{"krate":0,"index":5329},"children":[],"decl_id":null,"docs":" Calculates the destination entity layout for the given source layout.\n","sig":null,"attributes":[{"value":"/ Calculates the destination entity layout for the given source layout.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466234,"byte_end":466307,"line_start":971,"line_end":971,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466312,"byte_end":466321,"line_start":972,"line_end":972,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5334},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466516,"byte_end":466531,"line_start":978,"line_end":978,"column_start":8,"column_end":23},"name":"merge_archetype","qualname":"::internals::world::Merger::merge_archetype","value":"pub fn merge_archetype(&mut Self, Range<usize>, &Archetype, &Components,\n                       &mut ArchetypeWriter)","parent":{"krate":0,"index":5329},"children":[],"decl_id":null,"docs":" Merges an archetype from the source world into the destination world.\n","sig":null,"attributes":[{"value":"/ Merges an archetype from the source world into the destination world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466435,"byte_end":466508,"line_start":977,"line_end":977,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466984,"byte_end":466988,"line_start":992,"line_end":992,"column_start":5,"column_end":9},"name":"Auto","qualname":"::internals::world::EntityRewrite::Auto","value":"EntityRewrite::Auto(Option<HashMap<Entity, Entity, EntityHasher>>)","parent":{"krate":0,"index":5335},"children":[],"decl_id":null,"docs":" Replace references to entities which have been cloned with the ID of their clone.\n May also provide a map of additional IDs to replace.\n","sig":null,"attributes":[{"value":"/ Replace references to entities which have been cloned with the ID of their clone.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466833,"byte_end":466918,"line_start":990,"line_end":990,"column_start":5,"column_end":90}},{"value":"/ May also provide a map of additional IDs to replace.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466923,"byte_end":466979,"line_start":991,"line_end":991,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5339},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467089,"byte_end":467097,"line_start":994,"line_end":994,"column_start":5,"column_end":13},"name":"Explicit","qualname":"::internals::world::EntityRewrite::Explicit","value":"EntityRewrite::Explicit(HashMap<Entity, Entity, EntityHasher>)","parent":{"krate":0,"index":5335},"children":[],"decl_id":null,"docs":" Replace IDs according to the given map.\n","sig":null,"attributes":[{"value":"/ Replace IDs according to the given map.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467041,"byte_end":467084,"line_start":993,"line_end":993,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":5335},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466813,"byte_end":466826,"line_start":989,"line_end":989,"column_start":10,"column_end":23},"name":"EntityRewrite","qualname":"::internals::world::EntityRewrite","value":"pub enum EntityRewrite {\n    Auto(Option<HashMap<Entity, Entity, EntityHasher>>),\n    Explicit(HashMap<Entity, Entity, EntityHasher>),\n}","parent":null,"children":[{"krate":0,"index":5336},{"krate":0,"index":5339}],"decl_id":null,"docs":" Describes how a merger wishes `Entity` references inside cloned components to be\n rewritten.\n","sig":null,"attributes":[{"value":"/ Describes how a merger wishes `Entity` references inside cloned components to be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466704,"byte_end":466788,"line_start":987,"line_end":987,"column_start":1,"column_end":85}},{"value":"/ rewritten.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":466789,"byte_end":466803,"line_start":988,"line_end":988,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11719},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467463,"byte_end":467472,"line_start":1007,"line_end":1007,"column_start":12,"column_end":21},"name":"Duplicate","qualname":"::internals::world::Duplicate","value":"Duplicate {  }","parent":null,"children":[{"krate":0,"index":11720}],"decl_id":null,"docs":" A [merger](trait.Merger.html) which clones entities from the source world into the destination,\n potentially performing data transformations in the process.\n","sig":null,"attributes":[{"value":"/ A [merger](trait.Merger.html) which clones entities from the source world into the destination,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467235,"byte_end":467334,"line_start":1003,"line_end":1003,"column_start":1,"column_end":100}},{"value":"/ potentially performing data transformations in the process.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467335,"byte_end":467398,"line_start":1004,"line_end":1004,"column_start":1,"column_end":64}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467418,"byte_end":467451,"line_start":1006,"line_end":1006,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5345},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467946,"byte_end":467949,"line_start":1027,"line_end":1027,"column_start":12,"column_end":15},"name":"new","qualname":"<Duplicate>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new duplicate merger.\n","sig":null,"attributes":[{"value":"/ Creates a new duplicate merger.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467899,"byte_end":467934,"line_start":1026,"line_end":1026,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5346},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":468086,"byte_end":468099,"line_start":1032,"line_end":1032,"column_start":12,"column_end":25},"name":"register_copy","qualname":"<Duplicate>::register_copy","value":"pub fn register_copy<T: Component + Copy>(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Allows the merger to copy the given component into the destination world.\n","sig":null,"attributes":[{"value":"/ Allows the merger to copy the given component into the destination world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467997,"byte_end":468074,"line_start":1031,"line_end":1031,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":469085,"byte_end":469099,"line_start":1055,"line_end":1055,"column_start":12,"column_end":26},"name":"register_clone","qualname":"<Duplicate>::register_clone","value":"pub fn register_clone<T: Component + Clone>(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Allows the merger to clone the given component into the destination world.\n","sig":null,"attributes":[{"value":"/ Allows the merger to clone the given component into the destination world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":468995,"byte_end":469073,"line_start":1054,"line_end":1054,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5356},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":469325,"byte_end":469341,"line_start":1060,"line_end":1060,"column_start":12,"column_end":28},"name":"register_convert","qualname":"<Duplicate>::register_convert","value":"pub fn register_convert<Source: Component, Target: Component,\n                        F: FnMut(&Source) -> Target + 'static>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Allows the merger to clone the given component into the destination world with a custom clone function.\n","sig":null,"attributes":[{"value":"/ Allows the merger to clone the given component into the destination world with a custom clone function.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":469206,"byte_end":469313,"line_start":1059,"line_end":1059,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":5365},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":470851,"byte_end":470871,"line_start":1100,"line_end":1100,"column_start":12,"column_end":32},"name":"register_convert_raw","qualname":"<Duplicate>::register_convert_raw","value":"pub fn register_convert_raw(&mut Self, ComponentTypeId, ComponentTypeId,\n                            fn() -> Box<dyn UnknownComponentStorage>,\n                            Box<dyn\n                                FnMut(Range<usize>, &Archetype,\n                                      &dyn UnknownComponentStorage,\n                                      &mut ArchetypeWriter) -> ()>)","parent":null,"children":[],"decl_id":null,"docs":" Allows the merger to clone the given component into the destination world with a custom clone function.\n","sig":null,"attributes":[{"value":"/ Allows the merger to clone the given component into the destination world with a custom clone function.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":470732,"byte_end":470839,"line_start":1099,"line_end":1099,"column_start":5,"column_end":112}}]},{"kind":"Mod","id":{"krate":0,"index":5369},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::query","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","parent":null,"children":[{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5385},{"krate":0,"index":5388},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":5397},{"krate":0,"index":5400},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5412},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5428},{"krate":0,"index":5431},{"krate":0,"index":5434},{"krate":0,"index":5437},{"krate":0,"index":5440},{"krate":0,"index":5443},{"krate":0,"index":5446},{"krate":0,"index":5449},{"krate":0,"index":5452},{"krate":0,"index":5455},{"krate":0,"index":5458},{"krate":0,"index":5461},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5468}],"decl_id":null,"docs":" Queries provide efficient iteration and filtering of entity components in a world.","sig":null,"attributes":[{"value":"/ Queries provide efficient iteration and filtering of entity components in a world.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484628,"byte_end":484714,"line_start":1,"line_end":1,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484715,"byte_end":484718,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Queries are defined by two parts; \"views\" and \"filters\".","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484719,"byte_end":484779,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ Views declare what data you want to access it, and how you want to access it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484780,"byte_end":484861,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ Filters decide which entities are to be included in the results.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484862,"byte_end":484930,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484931,"byte_end":484934,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To construct a query, we declare our view, and then call `::query()` to convert it into","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":484935,"byte_end":485026,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ a query with an initial filter which selects entities with all of the component types","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485027,"byte_end":485116,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ requested by the view.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485117,"byte_end":485143,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485144,"byte_end":485147,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ View types include [Entity](../world/struct.Entity.html), [Read](struct.Read.html),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485148,"byte_end":485235,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/ [Write](struct.Write.html), [TryRead](struct.TryRead.html) and [TryWrite](struct.TryWrite.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485236,"byte_end":485336,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485337,"byte_end":485340,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485341,"byte_end":485348,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485349,"byte_end":485369,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485370,"byte_end":485392,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ # struct Orientation;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485393,"byte_end":485418,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/ // a view can be a single view type","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485419,"byte_end":485458,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/ let mut query = <&Position>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485459,"byte_end":485500,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485501,"byte_end":485504,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // or a tuple of views","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485505,"byte_end":485531,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ let mut query = <(&Position, &mut Orientation)>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485532,"byte_end":485593,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485594,"byte_end":485601,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485602,"byte_end":485605,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ You can attach additional filters to a query to further refine which entities you want to access.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485606,"byte_end":485707,"line_start":25,"line_end":25,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485708,"byte_end":485711,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485712,"byte_end":485719,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485720,"byte_end":485740,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485741,"byte_end":485763,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ # struct Orientation;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485764,"byte_end":485789,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ # struct Model;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485790,"byte_end":485809,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/ # struct Static;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485810,"byte_end":485830,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485831,"byte_end":485834,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // filters can be combined with boolean operators","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485835,"byte_end":485888,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/ let mut query = <(&Position, &mut Orientation)>::query()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485889,"byte_end":485949,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/     .filter(!component::<Static>() | !component::<Model>());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":485950,"byte_end":486014,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486015,"byte_end":486022,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486023,"byte_end":486026,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Once you have a query, you can use it to pull data out of a world. At its core, a query","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486027,"byte_end":486118,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ allows you to iterate over [chunks](struct.ChunkView.html). Each chunk contains a set of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486119,"byte_end":486211,"line_start":40,"line_end":40,"column_start":1,"column_end":93}},{"value":"/ entities which all have extactly the same component types attached, and the chunk provides","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486212,"byte_end":486306,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ access to slices of each component. A single index in each slice in a chunk contains the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486307,"byte_end":486399,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"/ component for the same entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486400,"byte_end":486434,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486435,"byte_end":486438,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486439,"byte_end":486446,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486447,"byte_end":486467,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486468,"byte_end":486490,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # struct Orientation;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486491,"byte_end":486516,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486517,"byte_end":486556,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut query = <(&Position, &mut Orientation)>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486557,"byte_end":486618,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/ for mut chunk in query.iter_chunks_mut(&mut world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486619,"byte_end":486675,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/     // we can access information about the archetype (shape/component layout) of the entities","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486676,"byte_end":486773,"line_start":52,"line_end":52,"column_start":1,"column_end":98}},{"value":"/     println!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486774,"byte_end":486791,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         \"the entities in the chunk have {:?} components\",","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486792,"byte_end":486853,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/         chunk.archetype().layout().component_types(),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486854,"byte_end":486911,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/     );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486912,"byte_end":486922,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486923,"byte_end":486926,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // we can iterate through a tuple of component references","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486927,"byte_end":486992,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/     for (position, orientation) in chunk {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":486993,"byte_end":487039,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/         // position is a `&Position`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487040,"byte_end":487080,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/         // orientation is a `&mut Orientation`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487081,"byte_end":487131,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/         // they are both attached to the same entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487132,"byte_end":487188,"line_start":62,"line_end":62,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487189,"byte_end":487198,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487199,"byte_end":487204,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487205,"byte_end":487212,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487213,"byte_end":487216,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ There are convenience functions on query which will flatten this loop for us, giving","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487217,"byte_end":487305,"line_start":67,"line_end":67,"column_start":1,"column_end":89}},{"value":"/ direct access to the entities.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487306,"byte_end":487340,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487341,"byte_end":487344,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487345,"byte_end":487352,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487353,"byte_end":487373,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487374,"byte_end":487396,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ # struct Orientation;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487397,"byte_end":487422,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487423,"byte_end":487462,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/ let mut query = <(&Position, &mut Orientation)>::query();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487463,"byte_end":487524,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/ for (position, orientation) in query.iter_mut(&mut world) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487525,"byte_end":487588,"line_start":76,"line_end":76,"column_start":1,"column_end":64}},{"value":"/     // position is a `&Position`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487589,"byte_end":487625,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/     // orientation is a `&mut Orientation`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487626,"byte_end":487672,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/     // they are both attached to the same entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487673,"byte_end":487725,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487726,"byte_end":487731,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/query.rs","byte_start":487732,"byte_end":487739,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5471},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::storage","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5491},{"krate":0,"index":5494},{"krate":0,"index":5497},{"krate":0,"index":5500},{"krate":0,"index":5503},{"krate":0,"index":5506},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5517},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5524},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5531},{"krate":0,"index":5534},{"krate":0,"index":5537},{"krate":0,"index":5540},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5552},{"krate":0,"index":5555},{"krate":0,"index":5558},{"krate":0,"index":5561},{"krate":0,"index":5564},{"krate":0,"index":5567},{"krate":0,"index":5570},{"krate":0,"index":5573}],"decl_id":null,"docs":" A \"packed archetype\" storage model.","sig":null,"attributes":[{"value":"/ A \"packed archetype\" storage model.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488577,"byte_end":488616,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488617,"byte_end":488620,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Any combination of types of components can be attached to each entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488621,"byte_end":488694,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ in a [world](../world/struct.World.html). Storing the (potentially","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488695,"byte_end":488765,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ unique) set of component values for each entity in a manor which is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488766,"byte_end":488837,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ efficient to search and access is the responsibility of the ECS libary.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488838,"byte_end":488913,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488914,"byte_end":488917,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Legion achieves this via the use of \"archetypes\". Archetypes are a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488918,"byte_end":488988,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ collection of entities who all have exactly the same set of component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":488989,"byte_end":489062,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ types attached. By storing these together, we can perform filtering","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489063,"byte_end":489134,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ operations at the archetype level without needing to ever inspect each","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489135,"byte_end":489209,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ individual entity. Archetypes also allow us to store contiguous and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489210,"byte_end":489281,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ ordered arrays of each component. For example, all `Position` components","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489282,"byte_end":489358,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ for all entities in an archetype are stored together in one array, and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489359,"byte_end":489433,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ can be returned from queries as a slice. All component arrays for an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489434,"byte_end":489506,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ archetype are stored in the same order and are necessarily the same","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489507,"byte_end":489578,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ length, allowing us to index them together to access the components for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489579,"byte_end":489654,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ a single entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489655,"byte_end":489675,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489676,"byte_end":489679,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Because these components are stored contiguously in memory, iterating","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489680,"byte_end":489753,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ through the components in an archetype is extremely performant as","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489754,"byte_end":489823,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ it offers perfect cache coherence. By storing each component type in","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489824,"byte_end":489896,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ its own array, we only need to access the memory containing components","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489897,"byte_end":489971,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ actually reqested by the query's view (see the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":489972,"byte_end":490022,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ [query module](../query/index.html)).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490023,"byte_end":490064,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490065,"byte_end":490068,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ One of the disadvantages of archetypes is that there are discontinuities","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490069,"byte_end":490145,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ between component arrays of different archetypes. In practise this causes","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490146,"byte_end":490223,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ approximately one additional L2/3 cache miss per unique entity layout that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490224,"byte_end":490302,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ exists among the result set of a query.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490303,"byte_end":490346,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490347,"byte_end":490350,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Legion mitigates this by conservatively packing archetype component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490351,"byte_end":490422,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ slices next to each other. A component slice is considered eligable","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490423,"byte_end":490494,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ for packing if its components have remained stable for some time (i.e no","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490495,"byte_end":490571,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ entities have been added or removed from the archetype recently) and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490572,"byte_end":490644,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ and estimate of potential saved cache misses passes a \"worthwhile\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490645,"byte_end":490715,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ threshold.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490716,"byte_end":490730,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490731,"byte_end":490734,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By default, legion will pack component slices in the order in which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490735,"byte_end":490806,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the archetypes were created. This matches the order in which queries will","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490807,"byte_end":490884,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ attempt to access each slice. However, most queries do not access all","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490885,"byte_end":490958,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ archetypes that contain a certain component - more likely they will skip","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":490959,"byte_end":491035,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ past many archetypes due to other filters (such as only being interested","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491036,"byte_end":491112,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ in archetypes which also contain another specific component).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491113,"byte_end":491178,"line_start":44,"line_end":44,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491179,"byte_end":491182,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ We can provide hints to a world about how it should pack archetypes by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491183,"byte_end":491257,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ declaring groups with the world's [options](../world/struct.WorldOptions.html)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491258,"byte_end":491340,"line_start":47,"line_end":47,"column_start":1,"column_end":83}},{"value":"/ which can be provided while constructing the world. Component groups can be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491341,"byte_end":491420,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ used to accelerate the largest and most common queries by optmizing the data","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491421,"byte_end":491501,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ layout for those queries.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491502,"byte_end":491531,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491532,"byte_end":491535,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Each component type in a world may belong to precisely one group. A group is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491536,"byte_end":491616,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ a set of components which are frequently queried for together. Queries which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491617,"byte_end":491697,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ match a group will not suffer from performance loss due to archetype","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491698,"byte_end":491770,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"/ fragmentation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491771,"byte_end":491789,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491790,"byte_end":491793,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Each group implicitly also defines sub-groups, such that the group","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491794,"byte_end":491864,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ `(A, B, C, D)` also defines the groups `(A, B, C)` and `(A, B)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491865,"byte_end":491933,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491934,"byte_end":491937,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Groups are defined before constructing a world and are passed in the world's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":491938,"byte_end":492018,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ options.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492019,"byte_end":492031,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492032,"byte_end":492035,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492036,"byte_end":492043,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492044,"byte_end":492064,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ // our component types","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492065,"byte_end":492091,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/ struct A;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492092,"byte_end":492105,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ struct B;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492106,"byte_end":492119,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ struct C;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492120,"byte_end":492133,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492134,"byte_end":492137,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // create a world optimized for cases where (A, B) and/or","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492138,"byte_end":492199,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/ // (A, B, C) are significant queries.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492200,"byte_end":492241,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/ let group = <(A, B, C)>::to_group();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492242,"byte_end":492282,"line_start":72,"line_end":72,"column_start":1,"column_end":41}},{"value":"/ let options = WorldOptions { groups: vec![group] };","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492283,"byte_end":492338,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ let world = World::new(options);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492339,"byte_end":492375,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/storage.rs","byte_start":492376,"byte_end":492383,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5576},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"systems","qualname":"::systems","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","parent":null,"children":[{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5582},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5589},{"krate":0,"index":5592},{"krate":0,"index":5595},{"krate":0,"index":5598},{"krate":0,"index":5601},{"krate":0,"index":5604},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5611},{"krate":0,"index":5614},{"krate":0,"index":5617},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5639},{"krate":0,"index":5642}],"decl_id":null,"docs":" Automatic query scheduling and parallel execution.\n","sig":null,"attributes":[{"value":"/ Automatic query scheduling and parallel execution.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/systems.rs","byte_start":493167,"byte_end":493221,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":5645},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"world","qualname":"::world","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","parent":null,"children":[{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5651},{"krate":0,"index":5654},{"krate":0,"index":5657},{"krate":0,"index":5658},{"krate":0,"index":5660},{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5676},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5690},{"krate":0,"index":5693},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5712},{"krate":0,"index":5715},{"krate":0,"index":5718},{"krate":0,"index":5721}],"decl_id":null,"docs":" Worlds store collections of entities. An entity is a collection of components, identified\n by a unique [Entity](struct.Entity.html) ID.","sig":null,"attributes":[{"value":"/ Worlds store collections of entities. An entity is a collection of components, identified","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493600,"byte_end":493693,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ by a unique [Entity](struct.Entity.html) ID.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493694,"byte_end":493742,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493743,"byte_end":493746,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Creating a world","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493747,"byte_end":493769,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493770,"byte_end":493773,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493774,"byte_end":493781,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493782,"byte_end":493802,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493803,"byte_end":493840,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493841,"byte_end":493848,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493849,"byte_end":493852,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `World::new()` can be used to construct a new world with custom options.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493853,"byte_end":493929,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493930,"byte_end":493933,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Inserting entities","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493934,"byte_end":493958,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493959,"byte_end":493962,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Entities can be inserted via either `push` (for a single entity) or `extend` (for a collection","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":493963,"byte_end":494061,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ of entities with the same component types). The world will create a unique ID for each entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494062,"byte_end":494159,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ upon insertion that you can use to refer to that entity later.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494160,"byte_end":494226,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494227,"byte_end":494230,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494231,"byte_end":494238,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494239,"byte_end":494259,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494260,"byte_end":494299,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ // a component is any type that is 'static, sized, send and sync","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494300,"byte_end":494368,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #[derive(Clone, Copy, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494369,"byte_end":494413,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ struct Position {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494414,"byte_end":494435,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/     x: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494436,"byte_end":494451,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/     y: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494452,"byte_end":494467,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494468,"byte_end":494473,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494474,"byte_end":494477,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Copy, Debug, PartialEq)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494478,"byte_end":494522,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/ struct Velocity {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494523,"byte_end":494544,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     dx: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494545,"byte_end":494561,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/     dy: f32,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494562,"byte_end":494578,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494579,"byte_end":494584,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494585,"byte_end":494588,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // push a component tuple into the world to create an entity","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494589,"byte_end":494653,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ let entity: Entity = world.push((Position { x: 0.0, y: 0.0 }, Velocity { dx: 0.0, dy: 0.0 }));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494654,"byte_end":494752,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494753,"byte_end":494756,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // or extend via an IntoIterator of tuples to add many at once","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494757,"byte_end":494823,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ // this is faster than individual pushes","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494824,"byte_end":494868,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/ let entities: &[Entity] = world.extend(vec![","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494869,"byte_end":494917,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     (Position { x: 0.0, y: 0.0 }, Velocity { dx: 0.0, dy: 0.0 }),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494918,"byte_end":494987,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/     (Position { x: 1.0, y: 1.0 }, Velocity { dx: 0.0, dy: 0.0 }),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":494988,"byte_end":495057,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/     (Position { x: 2.0, y: 2.0 }, Velocity { dx: 0.0, dy: 0.0 }),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495058,"byte_end":495127,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495128,"byte_end":495135,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495136,"byte_end":495143,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495144,"byte_end":495147,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ If your data is already organized as such, you can alternatively insert entites as a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495148,"byte_end":495236,"line_start":47,"line_end":47,"column_start":1,"column_end":89}},{"value":"/ strucure-of-arrays.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495237,"byte_end":495260,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495261,"byte_end":495264,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495265,"byte_end":495272,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495273,"byte_end":495293,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495294,"byte_end":495331,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ let _entities = world.extend(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495332,"byte_end":495365,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/     (","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495366,"byte_end":495375,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/         vec![1usize, 2usize, 3usize],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495376,"byte_end":495417,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/         vec![false, true, false],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495418,"byte_end":495455,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/         vec![5.3f32, 5.3f32, 5.2f32],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495456,"byte_end":495497,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/     ).into_soa()","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495498,"byte_end":495518,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495519,"byte_end":495525,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495526,"byte_end":495533,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495534,"byte_end":495537,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ SoA inserts require all vectors to have the same length. These inserts are faster than inserting","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495538,"byte_end":495638,"line_start":62,"line_end":62,"column_start":1,"column_end":101}},{"value":"/ via an iterator of tuples.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495639,"byte_end":495669,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495670,"byte_end":495673,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Modifying entities","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495674,"byte_end":495698,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495699,"byte_end":495702,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Components can be added or removed from an existing entity via the [Entry](struct.Entry.html) API.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495703,"byte_end":495805,"line_start":67,"line_end":67,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495806,"byte_end":495809,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495810,"byte_end":495817,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495818,"byte_end":495838,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495839,"byte_end":495878,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ # let entity = world.push((false, 1usize));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495879,"byte_end":495926,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/ // entries return `None` if the entity does not exist","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495927,"byte_end":495984,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/ if let Some(mut entry) = world.entry(entity) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":495985,"byte_end":496035,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/     // add an extra component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496036,"byte_end":496069,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/     entry.add_component(12f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496070,"byte_end":496105,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496106,"byte_end":496109,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // remove a component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496110,"byte_end":496139,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/     entry.remove_component::<usize>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496140,"byte_end":496182,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496183,"byte_end":496188,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496189,"byte_end":496196,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496197,"byte_end":496200,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Note that it is significantly faster to create an entity with it's initial set of components","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496201,"byte_end":496297,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/ via `push` or `extend` than it is to add the components one-by-one after creating the entity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496298,"byte_end":496395,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496396,"byte_end":496399,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Accessing components","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496400,"byte_end":496426,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496427,"byte_end":496430,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The fastest way to access a large number of entities' components is via [queries](../query/index.html).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496431,"byte_end":496538,"line_start":88,"line_end":88,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496539,"byte_end":496542,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The entry API also allows access to an individual entity's components.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496543,"byte_end":496617,"line_start":90,"line_end":90,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496618,"byte_end":496621,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496622,"byte_end":496629,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496630,"byte_end":496650,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496651,"byte_end":496690,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/ # let entity = world.push((false, 12f32));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496691,"byte_end":496737,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/ // entries return `None` if the entity does not exist","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496738,"byte_end":496795,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"/ if let Some(mut entry) = world.entry(entity) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496796,"byte_end":496846,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/     // access information about the entity's archetype","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496847,"byte_end":496905,"line_start":98,"line_end":98,"column_start":1,"column_end":59}},{"value":"/     println!(\"{:?} has {:?}\", entity, entry.archetype().layout().component_types());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496906,"byte_end":496994,"line_start":99,"line_end":99,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496995,"byte_end":496998,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     // access the entity's components, returns `None` if the entity does not have the component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":496999,"byte_end":497098,"line_start":101,"line_end":101,"column_start":1,"column_end":100}},{"value":"/     assert_eq!(entry.get_component::<f32>().unwrap(), &12f32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497099,"byte_end":497165,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497166,"byte_end":497171,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497172,"byte_end":497179,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497180,"byte_end":497183,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497184,"byte_end":497196,"line_start":106,"line_end":106,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497197,"byte_end":497200,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Notifications about archetype creation and entity insertion/removal from an archetype can be sent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497201,"byte_end":497302,"line_start":108,"line_end":108,"column_start":1,"column_end":102}},{"value":"/ to an [EventSender](trait.EventSender.html) by subscribing to the world. A layout filter specifies","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497303,"byte_end":497405,"line_start":109,"line_end":109,"column_start":1,"column_end":103}},{"value":"/ which archetypes the subscriber is interested in.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497406,"byte_end":497459,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497460,"byte_end":497463,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497464,"byte_end":497477,"line_start":112,"line_end":112,"column_start":1,"column_end":14}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497478,"byte_end":497498,"line_start":113,"line_end":113,"column_start":1,"column_end":21}},{"value":"/ # let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497499,"byte_end":497538,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497539,"byte_end":497561,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/ // subscribe to events involving entities with a `Position` with a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497562,"byte_end":497632,"line_start":116,"line_end":116,"column_start":1,"column_end":71}},{"value":"/ // crossbeam channel.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497633,"byte_end":497658,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/ let (tx, rx) = crossbeam_channel::unbounded::<legion::world::Event>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497659,"byte_end":497733,"line_start":118,"line_end":118,"column_start":1,"column_end":75}},{"value":"/ world.subscribe(tx, component::<Position>());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497734,"byte_end":497783,"line_start":119,"line_end":119,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497784,"byte_end":497791,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497792,"byte_end":497795,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # World splitting","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497796,"byte_end":497817,"line_start":122,"line_end":122,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497818,"byte_end":497821,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ World splitting allows mutable access to a world via multiple entries or queries at the same time,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497822,"byte_end":497924,"line_start":124,"line_end":124,"column_start":1,"column_end":103}},{"value":"/ provided that their component accesses do not conflict with one another.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":497925,"byte_end":498001,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498002,"byte_end":498005,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498006,"byte_end":498013,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498014,"byte_end":498034,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/ # struct A;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498035,"byte_end":498050,"line_start":129,"line_end":129,"column_start":1,"column_end":16}},{"value":"/ # struct B;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498051,"byte_end":498066,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/ # struct C;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498067,"byte_end":498082,"line_start":131,"line_end":131,"column_start":1,"column_end":16}},{"value":"/ let mut world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498083,"byte_end":498120,"line_start":132,"line_end":132,"column_start":1,"column_end":38}},{"value":"/ let entity = world.push((A, B, C));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498121,"byte_end":498160,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ let (mut left, mut right) = world.split::<(Read<A>, Write<B>)>();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498161,"byte_end":498230,"line_start":134,"line_end":134,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498231,"byte_end":498234,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ // left only has permission to read A and read/write B.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498235,"byte_end":498294,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ let b: &mut B = left.entry_mut(entity).unwrap().get_component_mut::<B>().unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498295,"byte_end":498381,"line_start":137,"line_end":137,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498382,"byte_end":498385,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ // right can access anything _but_ writes to A and read/write to B.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498386,"byte_end":498457,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/ let a: &A = right.entry_ref(entity).unwrap().get_component::<A>().unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498458,"byte_end":498537,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ let c: &C = right.entry_ref(entity).unwrap().get_component::<C>().unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498538,"byte_end":498617,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/world.rs","byte_start":498618,"byte_end":498625,"line_start":142,"line_end":142,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5724},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","parent":null,"children":[{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5743},{"krate":0,"index":5746},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5755},{"krate":0,"index":5758},{"krate":0,"index":5761}],"decl_id":null,"docs":" Serde (de)serialization of worlds.","sig":null,"attributes":[{"value":"cfg(feature = \"serialize\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7912,"byte_end":7941,"line_start":194,"line_end":194,"column_start":1,"column_end":30}},{"value":"/ Serde (de)serialization of worlds.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499216,"byte_end":499254,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499255,"byte_end":499258,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ As component types are not known at compile time, the world must be provided with the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499259,"byte_end":499348,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ means to serialize each component. This is provided by the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499349,"byte_end":499411,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ [WorldSerializer](trait.WorldSerializer.html) implementation. This implementation","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499412,"byte_end":499497,"line_start":5,"line_end":5,"column_start":1,"column_end":86}},{"value":"/ also describes how [ComponentTypeIDs](../storage/struct.ComponentTypeId.html) (which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499498,"byte_end":499586,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/ are not stable between compiles) are mapped to stable type identifiers. Components that are","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499587,"byte_end":499682,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ not known to the serializer will be omitted from the serialized output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499683,"byte_end":499758,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499759,"byte_end":499762,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [Registry](struct.Registry.html) provides a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499763,"byte_end":499814,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/ [WorldSerializer](trait.WorldSerializer.html) implementation suitable for most","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499815,"byte_end":499897,"line_start":11,"line_end":11,"column_start":1,"column_end":83}},{"value":"/ situations.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499898,"byte_end":499913,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499914,"byte_end":499917,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Serializing all entities with a `Position` component to JSON.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499918,"byte_end":499983,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499984,"byte_end":499991,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use legion::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":499992,"byte_end":500012,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/ # let world = World::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500013,"byte_end":500048,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ # #[derive(serde::Serialize, serde::Deserialize)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500049,"byte_end":500102,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/ # struct Position;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500103,"byte_end":500125,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ // create a registry which uses strings as the external type ID","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500126,"byte_end":500193,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ let mut registry = Registry::<String>::default();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500194,"byte_end":500247,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ registry.register::<Position>(\"position\".to_string());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500248,"byte_end":500306,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ registry.register::<f32>(\"f32\".to_string());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500307,"byte_end":500355,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ registry.register::<bool>(\"bool\".to_string());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500356,"byte_end":500406,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500407,"byte_end":500410,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // serialize entities with the `Position` component","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500411,"byte_end":500466,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ let json = serde_json::to_value(&world.as_serializable(component::<Position>(), &registry)).unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500467,"byte_end":500572,"line_start":27,"line_end":27,"column_start":1,"column_end":106}},{"value":"/ println!(\"{:#}\", json);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500573,"byte_end":500600,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500601,"byte_end":500604,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // registries are also serde deserializers","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500605,"byte_end":500651,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ use serde::de::DeserializeSeed;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500652,"byte_end":500687,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let world: World = registry.as_deserialize().deserialize(json).unwrap();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500688,"byte_end":500764,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/serialize.rs","byte_start":500765,"byte_end":500772,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":13658,"byte_end":13664,"line_start":22,"line_end":22,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14094,"byte_end":14102,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14247,"byte_end":14255,"line_start":50,"line_end":50,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14336,"byte_end":14344,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14838,"byte_end":14852,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15604,"byte_end":15615,"line_start":102,"line_end":102,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15977,"byte_end":15988,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20513,"byte_end":20521,"line_start":48,"line_end":48,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":181},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25405,"byte_end":25413,"line_start":180,"line_end":180,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":30944,"byte_end":30949,"line_start":329,"line_end":329,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":259},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":37444,"byte_end":37460,"line_start":498,"line_end":498,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":38018,"byte_end":38034,"line_start":512,"line_end":512,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41930,"byte_end":41936,"line_start":29,"line_end":29,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":42266,"byte_end":42276,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":42931,"byte_end":42942,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":43626,"byte_end":43637,"line_start":97,"line_end":97,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44090,"byte_end":44111,"line_start":7,"line_end":7,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44450,"byte_end":44459,"line_start":22,"line_end":22,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":46174,"byte_end":46189,"line_start":24,"line_end":24,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48893,"byte_end":48908,"line_start":108,"line_end":108,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49311,"byte_end":49326,"line_start":123,"line_end":123,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50556,"byte_end":50578,"line_start":150,"line_end":150,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53747,"byte_end":53757,"line_start":245,"line_end":245,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53788,"byte_end":53798,"line_start":246,"line_end":246,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53823,"byte_end":53833,"line_start":248,"line_end":248,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54510,"byte_end":54513,"line_start":273,"line_end":273,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54743,"byte_end":54744,"line_start":286,"line_end":286,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55159,"byte_end":55180,"line_start":302,"line_end":302,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55287,"byte_end":55308,"line_start":308,"line_end":308,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55489,"byte_end":55492,"line_start":314,"line_end":314,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55680,"byte_end":55683,"line_start":325,"line_end":325,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55972,"byte_end":55975,"line_start":340,"line_end":340,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":56327,"byte_end":56330,"line_start":356,"line_end":356,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":66149,"byte_end":66160,"line_start":59,"line_end":59,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":66366,"byte_end":66377,"line_start":70,"line_end":70,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":67553,"byte_end":67564,"line_start":118,"line_end":118,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":68138,"byte_end":68149,"line_start":141,"line_end":141,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":68297,"byte_end":68308,"line_start":148,"line_end":148,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":69096,"byte_end":69107,"line_start":179,"line_end":179,"column_start":48,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71049,"byte_end":71052,"line_start":240,"line_end":240,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71217,"byte_end":71220,"line_start":248,"line_end":248,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71707,"byte_end":71710,"line_start":265,"line_end":265,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":72497,"byte_end":72500,"line_start":293,"line_end":293,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":72878,"byte_end":72881,"line_start":308,"line_end":308,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76173,"byte_end":76174,"line_start":20,"line_end":20,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76357,"byte_end":76364,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76520,"byte_end":76527,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":77145,"byte_end":77152,"line_start":77,"line_end":77,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":77495,"byte_end":77502,"line_start":93,"line_end":93,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":77671,"byte_end":77678,"line_start":104,"line_end":104,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83539,"byte_end":83550,"line_start":15,"line_end":15,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":91453,"byte_end":91464,"line_start":262,"line_end":262,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":91563,"byte_end":91574,"line_start":268,"line_end":268,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":92171,"byte_end":92182,"line_start":288,"line_end":288,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":152828,"byte_end":152831,"line_start":11,"line_end":11,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":152987,"byte_end":152990,"line_start":20,"line_end":20,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153129,"byte_end":153132,"line_start":26,"line_end":26,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153314,"byte_end":153317,"line_start":34,"line_end":34,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153487,"byte_end":153490,"line_start":43,"line_end":43,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153639,"byte_end":153642,"line_start":52,"line_end":52,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153809,"byte_end":153812,"line_start":61,"line_end":61,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153959,"byte_end":153962,"line_start":70,"line_end":70,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154584,"byte_end":154599,"line_start":12,"line_end":12,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154706,"byte_end":154721,"line_start":18,"line_end":18,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154757,"byte_end":154772,"line_start":19,"line_end":19,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154867,"byte_end":154882,"line_start":25,"line_end":25,"column_start":37,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154926,"byte_end":154941,"line_start":27,"line_end":27,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155139,"byte_end":155154,"line_start":36,"line_end":36,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155363,"byte_end":155378,"line_start":42,"line_end":42,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155569,"byte_end":155584,"line_start":51,"line_end":51,"column_start":69,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155813,"byte_end":155828,"line_start":62,"line_end":62,"column_start":58,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":156016,"byte_end":156031,"line_start":71,"line_end":71,"column_start":68,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":156256,"byte_end":156271,"line_start":82,"line_end":82,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157133,"byte_end":157155,"line_start":20,"line_end":20,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157402,"byte_end":157424,"line_start":32,"line_end":32,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157683,"byte_end":157705,"line_start":44,"line_end":44,"column_start":37,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157750,"byte_end":157772,"line_start":46,"line_end":46,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":158465,"byte_end":158487,"line_start":69,"line_end":69,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":158678,"byte_end":158700,"line_start":78,"line_end":78,"column_start":69,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":158929,"byte_end":158951,"line_start":89,"line_end":89,"column_start":58,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":159139,"byte_end":159161,"line_start":98,"line_end":98,"column_start":68,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":159386,"byte_end":159408,"line_start":109,"line_end":109,"column_start":57,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160020,"byte_end":160023,"line_start":13,"line_end":13,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160056,"byte_end":160059,"line_start":15,"line_end":15,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160235,"byte_end":160238,"line_start":24,"line_end":24,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160569,"byte_end":160572,"line_start":33,"line_end":33,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161000,"byte_end":161003,"line_start":46,"line_end":46,"column_start":58,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161221,"byte_end":161224,"line_start":57,"line_end":57,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161401,"byte_end":161404,"line_start":66,"line_end":66,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161618,"byte_end":161621,"line_start":77,"line_end":77,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166257,"byte_end":166268,"line_start":8,"line_end":8,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166423,"byte_end":166434,"line_start":17,"line_end":17,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166567,"byte_end":166578,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166753,"byte_end":166764,"line_start":30,"line_end":30,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166906,"byte_end":166917,"line_start":39,"line_end":39,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":167062,"byte_end":167073,"line_start":48,"line_end":48,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167681,"byte_end":167699,"line_start":13,"line_end":13,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167809,"byte_end":167827,"line_start":19,"line_end":19,"column_start":29,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167863,"byte_end":167881,"line_start":20,"line_end":20,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167976,"byte_end":167994,"line_start":26,"line_end":26,"column_start":37,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168038,"byte_end":168056,"line_start":28,"line_end":28,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168229,"byte_end":168247,"line_start":37,"line_end":37,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168570,"byte_end":168588,"line_start":48,"line_end":48,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168779,"byte_end":168797,"line_start":57,"line_end":57,"column_start":69,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":169026,"byte_end":169044,"line_start":68,"line_end":68,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":169232,"byte_end":169250,"line_start":77,"line_end":77,"column_start":68,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":169475,"byte_end":169493,"line_start":88,"line_end":88,"column_start":57,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141746,"byte_end":141758,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142825,"byte_end":142837,"line_start":90,"line_end":90,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143011,"byte_end":143023,"line_start":97,"line_end":97,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144887,"byte_end":144888,"line_start":149,"line_end":149,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145075,"byte_end":145076,"line_start":155,"line_end":155,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145444,"byte_end":145445,"line_start":167,"line_end":167,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145816,"byte_end":145833,"line_start":183,"line_end":183,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":146217,"byte_end":146234,"line_start":200,"line_end":200,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":146710,"byte_end":146727,"line_start":218,"line_end":218,"column_start":74,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":147343,"byte_end":147360,"line_start":238,"line_end":238,"column_start":73,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183482,"byte_end":183488,"line_start":20,"line_end":20,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183516,"byte_end":183522,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183601,"byte_end":183607,"line_start":26,"line_end":26,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183663,"byte_end":183669,"line_start":30,"line_end":30,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":184801,"byte_end":184805,"line_start":88,"line_end":88,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185186,"byte_end":185197,"line_start":106,"line_end":106,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185326,"byte_end":185337,"line_start":113,"line_end":113,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185548,"byte_end":185559,"line_start":122,"line_end":122,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185783,"byte_end":185794,"line_start":131,"line_end":131,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187217,"byte_end":187221,"line_start":26,"line_end":26,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187258,"byte_end":187262,"line_start":27,"line_end":27,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187297,"byte_end":187301,"line_start":28,"line_end":28,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187346,"byte_end":187350,"line_start":30,"line_end":30,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187461,"byte_end":187465,"line_start":34,"line_end":34,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187538,"byte_end":187542,"line_start":38,"line_end":38,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189505,"byte_end":189513,"line_start":120,"line_end":120,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190126,"byte_end":190135,"line_start":143,"line_end":143,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190359,"byte_end":190368,"line_start":152,"line_end":152,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190588,"byte_end":190597,"line_start":161,"line_end":161,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190853,"byte_end":190862,"line_start":170,"line_end":170,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190997,"byte_end":191006,"line_start":177,"line_end":177,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":192960,"byte_end":192967,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193004,"byte_end":193011,"line_start":27,"line_end":27,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193046,"byte_end":193053,"line_start":28,"line_end":28,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193098,"byte_end":193105,"line_start":30,"line_end":30,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193219,"byte_end":193226,"line_start":34,"line_end":34,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193299,"byte_end":193306,"line_start":38,"line_end":38,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":194880,"byte_end":194891,"line_start":102,"line_end":102,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195570,"byte_end":195575,"line_start":129,"line_end":129,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195805,"byte_end":195810,"line_start":138,"line_end":138,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":196205,"byte_end":196210,"line_start":151,"line_end":151,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":196466,"byte_end":196471,"line_start":160,"line_end":160,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":196702,"byte_end":196707,"line_start":169,"line_end":169,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":198035,"byte_end":198039,"line_start":222,"line_end":222,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200026,"byte_end":200034,"line_start":26,"line_end":26,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200065,"byte_end":200073,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200118,"byte_end":200126,"line_start":29,"line_end":29,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200240,"byte_end":200248,"line_start":33,"line_end":33,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200321,"byte_end":200329,"line_start":37,"line_end":37,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":201961,"byte_end":201973,"line_start":101,"line_end":101,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202701,"byte_end":202706,"line_start":129,"line_end":129,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202991,"byte_end":202996,"line_start":139,"line_end":139,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":203395,"byte_end":203400,"line_start":152,"line_end":152,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":203641,"byte_end":203646,"line_start":161,"line_end":161,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":205629,"byte_end":205633,"line_start":236,"line_end":236,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207550,"byte_end":207555,"line_start":26,"line_end":26,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207586,"byte_end":207591,"line_start":27,"line_end":27,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207636,"byte_end":207641,"line_start":29,"line_end":29,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207752,"byte_end":207757,"line_start":33,"line_end":33,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207830,"byte_end":207835,"line_start":37,"line_end":37,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":209867,"byte_end":209876,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":210540,"byte_end":210550,"line_start":143,"line_end":143,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":210830,"byte_end":210840,"line_start":153,"line_end":153,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":211068,"byte_end":211078,"line_start":162,"line_end":162,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":211319,"byte_end":211329,"line_start":171,"line_end":171,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170590,"byte_end":170596,"line_start":41,"line_end":41,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170683,"byte_end":170689,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174765,"byte_end":174771,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97212,"byte_end":97213,"line_start":25,"line_end":25,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97757,"byte_end":97768,"line_start":46,"line_end":46,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100264,"byte_end":100269,"line_start":132,"line_end":132,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100369,"byte_end":100374,"line_start":138,"line_end":138,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2409},{"krate":0,"index":2413},{"krate":0,"index":2417},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2442},{"krate":0,"index":2448},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2467},{"krate":0,"index":2474},{"krate":0,"index":2479},{"krate":0,"index":2483},{"krate":0,"index":2488},{"krate":0,"index":2492},{"krate":0,"index":2497},{"krate":0,"index":2504},{"krate":0,"index":2509},{"krate":0,"index":2513},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124807,"byte_end":124816,"line_start":766,"line_end":766,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":127306,"byte_end":127315,"line_start":845,"line_end":845,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":127608,"byte_end":127617,"line_start":854,"line_end":854,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":128429,"byte_end":128438,"line_start":877,"line_end":877,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":130640,"byte_end":130644,"line_start":948,"line_end":948,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":131775,"byte_end":131787,"line_start":986,"line_end":986,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2624}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":132216,"byte_end":132228,"line_start":1005,"line_end":1005,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":132349,"byte_end":132361,"line_start":1012,"line_end":1012,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":132488,"byte_end":132500,"line_start":1019,"line_end":1019,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":134094,"byte_end":134106,"line_start":1072,"line_end":1072,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":232802,"byte_end":232827,"line_start":25,"line_end":25,"column_start":65,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":234878,"byte_end":234899,"line_start":85,"line_end":85,"column_start":48,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":236399,"byte_end":236430,"line_start":126,"line_end":126,"column_start":48,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":237563,"byte_end":237589,"line_start":159,"line_end":159,"column_start":48,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":238693,"byte_end":238720,"line_start":196,"line_end":196,"column_start":66,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":239115,"byte_end":239125,"line_start":208,"line_end":208,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":240255,"byte_end":240278,"line_start":243,"line_end":243,"column_start":66,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":240676,"byte_end":240689,"line_start":255,"line_end":255,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":243819,"byte_end":243837,"line_start":345,"line_end":345,"column_start":66,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":244204,"byte_end":244214,"line_start":356,"line_end":356,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":245435,"byte_end":245453,"line_start":391,"line_end":391,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":246191,"byte_end":246209,"line_start":411,"line_end":411,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":246543,"byte_end":246561,"line_start":424,"line_end":424,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":247041,"byte_end":247059,"line_start":439,"line_end":439,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":247508,"byte_end":247526,"line_start":455,"line_end":455,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":248356,"byte_end":248374,"line_start":477,"line_end":477,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":248708,"byte_end":248726,"line_start":490,"line_end":490,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":249206,"byte_end":249224,"line_start":505,"line_end":505,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":249494,"byte_end":249503,"line_start":517,"line_end":517,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":249851,"byte_end":249861,"line_start":528,"line_end":528,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":250917,"byte_end":250929,"line_start":562,"line_end":562,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":251367,"byte_end":251377,"line_start":574,"line_end":574,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":252830,"byte_end":252844,"line_start":613,"line_end":613,"column_start":70,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":255717,"byte_end":255729,"line_start":54,"line_end":54,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":258414,"byte_end":258438,"line_start":22,"line_end":22,"column_start":65,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":261119,"byte_end":261135,"line_start":98,"line_end":98,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":262788,"byte_end":262807,"line_start":142,"line_end":142,"column_start":48,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":263793,"byte_end":263819,"line_start":174,"line_end":174,"column_start":66,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":264220,"byte_end":264236,"line_start":186,"line_end":186,"column_start":66,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":265462,"byte_end":265480,"line_start":222,"line_end":222,"column_start":66,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":265916,"byte_end":265935,"line_start":235,"line_end":235,"column_start":66,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":267960,"byte_end":267972,"line_start":279,"line_end":279,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":268374,"byte_end":268386,"line_start":291,"line_end":291,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3407}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":269077,"byte_end":269089,"line_start":305,"line_end":305,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":269972,"byte_end":269993,"line_start":335,"line_end":335,"column_start":66,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":3422},{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":272877,"byte_end":272883,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":273753,"byte_end":273759,"line_start":87,"line_end":87,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3479}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275087,"byte_end":275092,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":277494,"byte_end":277499,"line_start":189,"line_end":189,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":280121,"byte_end":280138,"line_start":57,"line_end":57,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":280400,"byte_end":280417,"line_start":67,"line_end":67,"column_start":61,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3569}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213771,"byte_end":213772,"line_start":35,"line_end":35,"column_start":21,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216208,"byte_end":216216,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3616},{"krate":0,"index":3619},{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219839,"byte_end":219847,"line_start":206,"line_end":206,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":220780,"byte_end":220788,"line_start":240,"line_end":240,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":223085,"byte_end":223093,"line_start":313,"line_end":313,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3657},{"krate":0,"index":3663}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":225241,"byte_end":225253,"line_start":376,"line_end":376,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":225714,"byte_end":225724,"line_start":390,"line_end":390,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227046,"byte_end":227066,"line_start":428,"line_end":428,"column_start":62,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3703}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227659,"byte_end":227678,"line_start":446,"line_end":446,"column_start":62,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":3714},{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300237,"byte_end":300240,"line_start":46,"line_end":46,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3822},{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300421,"byte_end":300424,"line_start":54,"line_end":54,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300807,"byte_end":300816,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":302818,"byte_end":302827,"line_start":136,"line_end":136,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303255,"byte_end":303267,"line_start":152,"line_end":152,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":305270,"byte_end":305282,"line_start":210,"line_end":210,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3850}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":305563,"byte_end":305565,"line_start":219,"line_end":219,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306460,"byte_end":306475,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306891,"byte_end":306906,"line_start":34,"line_end":34,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307018,"byte_end":307033,"line_start":40,"line_end":40,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3885}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307143,"byte_end":307158,"line_start":46,"line_end":46,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3887}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307823,"byte_end":307824,"line_start":66,"line_end":66,"column_start":54,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3893}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308248,"byte_end":308256,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309081,"byte_end":309089,"line_start":41,"line_end":41,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309506,"byte_end":309511,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":311699,"byte_end":311704,"line_start":131,"line_end":131,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":311945,"byte_end":311950,"line_start":139,"line_end":139,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313434,"byte_end":313445,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":315099,"byte_end":315107,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":316866,"byte_end":316874,"line_start":81,"line_end":81,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":317526,"byte_end":317538,"line_start":109,"line_end":109,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":321805,"byte_end":321817,"line_start":249,"line_end":249,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322026,"byte_end":322038,"line_start":257,"line_end":257,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322236,"byte_end":322248,"line_start":264,"line_end":264,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4070}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":323374,"byte_end":323387,"line_start":298,"line_end":298,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":323429,"byte_end":323442,"line_start":299,"line_end":299,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":323469,"byte_end":323482,"line_start":301,"line_end":301,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":324261,"byte_end":324274,"line_start":325,"line_end":325,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4093},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":330936,"byte_end":330949,"line_start":521,"line_end":521,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":331250,"byte_end":331263,"line_start":534,"line_end":534,"column_start":52,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":333273,"byte_end":333286,"line_start":587,"line_end":587,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":333834,"byte_end":333850,"line_start":605,"line_end":605,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":338266,"byte_end":338274,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4148},{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":339138,"byte_end":339150,"line_start":46,"line_end":46,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":339783,"byte_end":339795,"line_start":72,"line_end":72,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":339836,"byte_end":339848,"line_start":73,"line_end":73,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":282784,"byte_end":282797,"line_start":27,"line_end":27,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4165},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287743,"byte_end":287757,"line_start":157,"line_end":157,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4197},{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288084,"byte_end":288098,"line_start":171,"line_end":171,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4202}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288205,"byte_end":288219,"line_start":177,"line_end":177,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4206},{"krate":0,"index":4207}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288375,"byte_end":288389,"line_start":185,"line_end":185,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4211},{"krate":0,"index":4212}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288867,"byte_end":288884,"line_start":199,"line_end":199,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4221},{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289310,"byte_end":289327,"line_start":215,"line_end":215,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289483,"byte_end":289500,"line_start":223,"line_end":223,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289688,"byte_end":289705,"line_start":230,"line_end":230,"column_start":53,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292072,"byte_end":292082,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294422,"byte_end":294432,"line_start":359,"line_end":359,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4269}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295230,"byte_end":295241,"line_start":382,"line_end":382,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295474,"byte_end":295485,"line_start":393,"line_end":393,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295964,"byte_end":295972,"line_start":410,"line_end":410,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4284},{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341557,"byte_end":341572,"line_start":27,"line_end":27,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4354},{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342574,"byte_end":342589,"line_start":59,"line_end":59,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346749,"byte_end":346757,"line_start":164,"line_end":164,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":349514,"byte_end":349522,"line_start":247,"line_end":247,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":350932,"byte_end":350940,"line_start":294,"line_end":294,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359140,"byte_end":359161,"line_start":40,"line_end":40,"column_start":8,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11440}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359279,"byte_end":359300,"line_start":46,"line_end":46,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4455}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359886,"byte_end":359909,"line_start":66,"line_end":66,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4464},{"krate":0,"index":4465}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":360054,"byte_end":360077,"line_start":75,"line_end":75,"column_start":54,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4469}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":360335,"byte_end":360358,"line_start":85,"line_end":85,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":360652,"byte_end":360675,"line_start":97,"line_end":97,"column_start":9,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361223,"byte_end":361233,"line_start":118,"line_end":118,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4494},{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361426,"byte_end":361439,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11446}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361529,"byte_end":361542,"line_start":134,"line_end":134,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361835,"byte_end":361854,"line_start":146,"line_end":146,"column_start":8,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11451}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361888,"byte_end":361907,"line_start":148,"line_end":148,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4501}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362081,"byte_end":362100,"line_start":156,"line_end":156,"column_start":8,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11458}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362245,"byte_end":362264,"line_start":163,"line_end":163,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362628,"byte_end":362650,"line_start":178,"line_end":178,"column_start":8,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11465}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362734,"byte_end":362756,"line_start":183,"line_end":183,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364188,"byte_end":364201,"line_start":232,"line_end":232,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":4539}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370669,"byte_end":370683,"line_start":30,"line_end":30,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370972,"byte_end":370986,"line_start":41,"line_end":41,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371098,"byte_end":371112,"line_start":47,"line_end":47,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371222,"byte_end":371236,"line_start":53,"line_end":53,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4612}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371620,"byte_end":371621,"line_start":67,"line_end":67,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":373347,"byte_end":373351,"line_start":128,"line_end":128,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":373632,"byte_end":373637,"line_start":137,"line_end":137,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":374973,"byte_end":374978,"line_start":182,"line_end":182,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4646},{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375156,"byte_end":375161,"line_start":191,"line_end":191,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4651}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375324,"byte_end":375329,"line_start":197,"line_end":197,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375645,"byte_end":375653,"line_start":210,"line_end":210,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4664},{"krate":0,"index":4665}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375808,"byte_end":375816,"line_start":219,"line_end":219,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375979,"byte_end":375987,"line_start":226,"line_end":226,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":376150,"byte_end":376158,"line_start":232,"line_end":232,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":376392,"byte_end":376404,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379290,"byte_end":379305,"line_start":332,"line_end":332,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379330,"byte_end":379345,"line_start":333,"line_end":333,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379355,"byte_end":379370,"line_start":335,"line_end":335,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381039,"byte_end":381048,"line_start":383,"line_end":383,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4710},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4718},{"krate":0,"index":4722},{"krate":0,"index":4725},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387156,"byte_end":387169,"line_start":534,"line_end":534,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4738},{"krate":0,"index":4740}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390400,"byte_end":390401,"line_start":33,"line_end":33,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392851,"byte_end":392860,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392885,"byte_end":392894,"line_start":96,"line_end":96,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392904,"byte_end":392913,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4823},{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393222,"byte_end":393230,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4826},{"krate":0,"index":4833},{"krate":0,"index":4835},{"krate":0,"index":4838},{"krate":0,"index":4843},{"krate":0,"index":4845}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":394684,"byte_end":394698,"line_start":147,"line_end":147,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4828},{"krate":0,"index":4829}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":404874,"byte_end":404881,"line_start":401,"line_end":401,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855},{"krate":0,"index":4857},{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406685,"byte_end":406692,"line_start":454,"line_end":454,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407916,"byte_end":407924,"line_start":499,"line_end":499,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":410795,"byte_end":410803,"line_start":579,"line_end":579,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4898}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":410908,"byte_end":410916,"line_start":585,"line_end":585,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4900}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":417924,"byte_end":417929,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5006}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418640,"byte_end":418648,"line_start":96,"line_end":96,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5010}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418813,"byte_end":418821,"line_start":102,"line_end":102,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5013}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419057,"byte_end":419071,"line_start":112,"line_end":112,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419108,"byte_end":419122,"line_start":113,"line_end":113,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419861,"byte_end":419867,"line_start":132,"line_end":132,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":422579,"byte_end":422580,"line_start":207,"line_end":207,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5054}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424421,"byte_end":424434,"line_start":262,"line_end":262,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424837,"byte_end":424850,"line_start":275,"line_end":275,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5068}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425158,"byte_end":425171,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5076},{"krate":0,"index":5078},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5084}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434391,"byte_end":434398,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5239}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434517,"byte_end":434524,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435545,"byte_end":435550,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435637,"byte_end":435642,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5245},{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5253},{"krate":0,"index":5255},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5263},{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5277},{"krate":0,"index":5281},{"krate":0,"index":5283},{"krate":0,"index":5287},{"krate":0,"index":5291},{"krate":0,"index":5301},{"krate":0,"index":5305}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":462230,"byte_end":462235,"line_start":829,"line_end":829,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5310},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":463664,"byte_end":463679,"line_start":880,"line_end":880,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467158,"byte_end":467171,"line_start":997,"line_end":997,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5343}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467883,"byte_end":467892,"line_start":1025,"line_end":1025,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5353},{"krate":0,"index":5356},{"krate":0,"index":5365}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":471294,"byte_end":471303,"line_start":1114,"line_end":1114,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7855,"byte_end":7860,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5369}},{"kind":"Mod","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7870,"byte_end":7877,"line_start":190,"line_end":190,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5471}},{"kind":"Mod","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7887,"byte_end":7894,"line_start":191,"line_end":191,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5576}},{"kind":"Mod","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7904,"byte_end":7909,"line_start":192,"line_end":192,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5645}},{"kind":"Mod","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/lib.rs","byte_start":7950,"byte_end":7959,"line_start":195,"line_end":195,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":5724}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":13658,"byte_end":13664,"line_start":22,"line_end":22,"column_start":16,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6261},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14094,"byte_end":14102,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14247,"byte_end":14255,"line_start":50,"line_end":50,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6281},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14336,"byte_end":14344,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6281},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":14838,"byte_end":14852,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15604,"byte_end":15615,"line_start":102,"line_end":102,"column_start":16,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6295},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entity.rs","byte_start":15977,"byte_end":15988,"line_start":113,"line_end":113,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":20513,"byte_end":20521,"line_start":48,"line_end":48,"column_start":10,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":25405,"byte_end":25413,"line_start":180,"line_end":180,"column_start":10,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":30944,"byte_end":30949,"line_start":329,"line_end":329,"column_start":10,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":37444,"byte_end":37460,"line_start":498,"line_end":498,"column_start":27,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6332},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/entry.rs","byte_start":38018,"byte_end":38034,"line_start":512,"line_end":512,"column_start":30,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6332},"to":{"krate":0,"index":422}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41693,"byte_end":41697,"line_start":22,"line_end":22,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41700,"byte_end":41704,"line_start":22,"line_end":22,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":41930,"byte_end":41936,"line_start":29,"line_end":29,"column_start":41,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":47,"index":78},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":42266,"byte_end":42276,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":42931,"byte_end":42942,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/event.rs","byte_start":43626,"byte_end":43637,"line_start":97,"line_end":97,"column_start":16,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":6362},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44090,"byte_end":44111,"line_start":7,"line_end":7,"column_start":17,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6368},"to":{"krate":2,"index":8917}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/hash.rs","byte_start":44450,"byte_end":44459,"line_start":22,"line_end":22,"column_start":17,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":8917}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":46174,"byte_end":46189,"line_start":24,"line_end":24,"column_start":10,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":48893,"byte_end":48908,"line_start":108,"line_end":108,"column_start":19,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":49311,"byte_end":49326,"line_start":123,"line_end":123,"column_start":24,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":50556,"byte_end":50578,"line_start":150,"line_end":150,"column_start":10,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":52858,"byte_end":52873,"line_start":209,"line_end":209,"column_start":28,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":422},"to":{"krate":0,"index":426}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53747,"byte_end":53757,"line_start":245,"line_end":245,"column_start":25,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53788,"byte_end":53798,"line_start":246,"line_end":246,"column_start":25,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":53823,"byte_end":53833,"line_start":248,"line_end":248,"column_start":18,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54510,"byte_end":54513,"line_start":273,"line_end":273,"column_start":15,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":54743,"byte_end":54744,"line_start":286,"line_end":286,"column_start":33,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":464},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55159,"byte_end":55180,"line_start":302,"line_end":302,"column_start":21,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55287,"byte_end":55308,"line_start":308,"line_end":308,"column_start":23,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":467},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55489,"byte_end":55492,"line_start":314,"line_end":314,"column_start":36,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55680,"byte_end":55683,"line_start":325,"line_end":325,"column_start":32,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":422}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":55972,"byte_end":55975,"line_start":340,"line_end":340,"column_start":32,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":426}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/insert.rs","byte_start":56327,"byte_end":56330,"line_start":356,"line_end":356,"column_start":28,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":430}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":64929,"byte_end":64934,"line_start":3,"line_end":3,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":66149,"byte_end":66160,"line_start":59,"line_end":59,"column_start":30,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":7078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":66366,"byte_end":66377,"line_start":70,"line_end":70,"column_start":43,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":67553,"byte_end":67564,"line_start":118,"line_end":118,"column_start":54,"column_end":65},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":68138,"byte_end":68149,"line_start":141,"line_end":141,"column_start":52,"column_end":63},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":68297,"byte_end":68308,"line_start":148,"line_end":148,"column_start":61,"column_end":72},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":7078},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":69096,"byte_end":69107,"line_start":179,"line_end":179,"column_start":48,"column_end":59},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":7078},"to":{"krate":2,"index":7432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71049,"byte_end":71052,"line_start":240,"line_end":240,"column_start":34,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71217,"byte_end":71220,"line_start":248,"line_end":248,"column_start":26,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":587},"to":{"krate":18,"index":404}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":71707,"byte_end":71710,"line_start":265,"line_end":265,"column_start":35,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":587},"to":{"krate":18,"index":436}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":72497,"byte_end":72500,"line_start":293,"line_end":293,"column_start":34,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":587},"to":{"krate":18,"index":4674}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/indexed.rs","byte_start":72878,"byte_end":72881,"line_start":308,"line_end":308,"column_start":41,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":587},"to":{"krate":18,"index":4882}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76173,"byte_end":76174,"line_start":20,"line_end":20,"column_start":24,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":633},"to":{"krate":0,"index":628}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76357,"byte_end":76364,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":7570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":76520,"byte_end":76527,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":7570},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":77145,"byte_end":77152,"line_start":77,"line_end":77,"column_start":36,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":7570},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":77495,"byte_end":77502,"line_start":93,"line_end":93,"column_start":34,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":7570},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/iter/map.rs","byte_start":77671,"byte_end":77678,"line_start":104,"line_end":104,"column_start":30,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":7570},"to":{"krate":2,"index":7432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":83539,"byte_end":83550,"line_start":15,"line_end":15,"column_start":20,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":8823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":91453,"byte_end":91464,"line_start":262,"line_end":262,"column_start":32,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":8823},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":91563,"byte_end":91574,"line_start":268,"line_end":268,"column_start":38,"column_end":49},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":8823},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/permissions.rs","byte_start":92171,"byte_end":92182,"line_start":288,"line_end":288,"column_start":42,"column_end":53},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":8823},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":152828,"byte_end":152831,"line_start":11,"line_end":11,"column_start":23,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":9433},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":152987,"byte_end":152990,"line_start":20,"line_end":20,"column_start":23,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":9433},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153129,"byte_end":153132,"line_start":26,"line_end":26,"column_start":24,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":9433},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153314,"byte_end":153317,"line_start":34,"line_end":34,"column_start":24,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153487,"byte_end":153490,"line_start":43,"line_end":43,"column_start":51,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153639,"byte_end":153642,"line_start":52,"line_end":52,"column_start":40,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153809,"byte_end":153812,"line_start":61,"line_end":61,"column_start":50,"column_end":53},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/any.rs","byte_start":153959,"byte_end":153962,"line_start":70,"line_end":70,"column_start":39,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154584,"byte_end":154599,"line_start":12,"line_end":12,"column_start":32,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154706,"byte_end":154721,"line_start":18,"line_end":18,"column_start":29,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154757,"byte_end":154772,"line_start":19,"line_end":19,"column_start":30,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154867,"byte_end":154882,"line_start":25,"line_end":25,"column_start":37,"column_end":52},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":9441},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":154926,"byte_end":154941,"line_start":27,"line_end":27,"column_start":37,"column_end":52},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":9441},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155139,"byte_end":155154,"line_start":36,"line_end":36,"column_start":37,"column_end":52},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":9441},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155363,"byte_end":155378,"line_start":42,"line_end":42,"column_start":38,"column_end":53},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155569,"byte_end":155584,"line_start":51,"line_end":51,"column_start":69,"column_end":84},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":155813,"byte_end":155828,"line_start":62,"line_end":62,"column_start":58,"column_end":73},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":156016,"byte_end":156031,"line_start":71,"line_end":71,"column_start":68,"column_end":83},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/component.rs","byte_start":156256,"byte_end":156271,"line_start":82,"line_end":82,"column_start":57,"column_end":72},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":9441},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157133,"byte_end":157155,"line_start":20,"line_end":20,"column_start":32,"column_end":54},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157402,"byte_end":157424,"line_start":32,"line_end":32,"column_start":30,"column_end":52},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157683,"byte_end":157705,"line_start":44,"line_end":44,"column_start":37,"column_end":59},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":9448},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":157750,"byte_end":157772,"line_start":46,"line_end":46,"column_start":38,"column_end":60},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9448},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":158465,"byte_end":158487,"line_start":69,"line_end":69,"column_start":38,"column_end":60},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":158678,"byte_end":158700,"line_start":78,"line_end":78,"column_start":69,"column_end":91},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":158929,"byte_end":158951,"line_start":89,"line_end":89,"column_start":58,"column_end":80},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":159139,"byte_end":159161,"line_start":98,"line_end":98,"column_start":68,"column_end":90},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/maybe_changed.rs","byte_start":159386,"byte_end":159408,"line_start":109,"line_end":109,"column_start":57,"column_end":79},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160020,"byte_end":160023,"line_start":13,"line_end":13,"column_start":26,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9458},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160056,"byte_end":160059,"line_start":15,"line_end":15,"column_start":26,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9458},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160235,"byte_end":160238,"line_start":24,"line_end":24,"column_start":40,"column_end":43},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9458},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":160569,"byte_end":160572,"line_start":33,"line_end":33,"column_start":42,"column_end":45},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9458},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161000,"byte_end":161003,"line_start":46,"line_end":46,"column_start":58,"column_end":61},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9458},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161221,"byte_end":161224,"line_start":57,"line_end":57,"column_start":47,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9458},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161401,"byte_end":161404,"line_start":66,"line_end":66,"column_start":57,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9458},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/not.rs","byte_start":161618,"byte_end":161621,"line_start":77,"line_end":77,"column_start":46,"column_end":49},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9458},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166257,"byte_end":166268,"line_start":8,"line_end":8,"column_start":23,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10071},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166423,"byte_end":166434,"line_start":17,"line_end":17,"column_start":23,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10071},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166567,"byte_end":166578,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10071},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166753,"byte_end":166764,"line_start":30,"line_end":30,"column_start":24,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10071},"to":{"krate":2,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":166906,"byte_end":166917,"line_start":39,"line_end":39,"column_start":37,"column_end":48},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10071},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/passthrough.rs","byte_start":167062,"byte_end":167073,"line_start":48,"line_end":48,"column_start":36,"column_end":47},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10071},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167681,"byte_end":167699,"line_start":13,"line_end":13,"column_start":32,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167809,"byte_end":167827,"line_start":19,"line_end":19,"column_start":29,"column_end":47},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167863,"byte_end":167881,"line_start":20,"line_end":20,"column_start":30,"column_end":48},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":167976,"byte_end":167994,"line_start":26,"line_end":26,"column_start":37,"column_end":55},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10079},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168038,"byte_end":168056,"line_start":28,"line_end":28,"column_start":37,"column_end":55},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10079},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168229,"byte_end":168247,"line_start":37,"line_end":37,"column_start":37,"column_end":55},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10079},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168570,"byte_end":168588,"line_start":48,"line_end":48,"column_start":38,"column_end":56},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":168779,"byte_end":168797,"line_start":57,"line_end":57,"column_start":69,"column_end":87},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":169026,"byte_end":169044,"line_start":68,"line_end":68,"column_start":58,"column_end":76},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":169232,"byte_end":169250,"line_start":77,"line_end":77,"column_start":68,"column_end":86},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/try_component.rs","byte_start":169475,"byte_end":169493,"line_start":88,"line_end":88,"column_start":57,"column_end":75},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10079},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":141746,"byte_end":141758,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":142825,"byte_end":142837,"line_start":90,"line_end":90,"column_start":40,"column_end":52},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143011,"byte_end":143023,"line_start":97,"line_end":97,"column_start":41,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143578,"byte_end":143585,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143588,"byte_end":143592,"line_start":113,"line_end":113,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":143595,"byte_end":143599,"line_start":113,"line_end":113,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144430,"byte_end":144437,"line_start":136,"line_end":136,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144440,"byte_end":144444,"line_start":136,"line_end":136,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144447,"byte_end":144451,"line_start":136,"line_end":136,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":144887,"byte_end":144888,"line_start":149,"line_end":149,"column_start":40,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1364},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145075,"byte_end":145076,"line_start":155,"line_end":155,"column_start":41,"column_end":42},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1367},"to":{"krate":0,"index":1350}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145444,"byte_end":145445,"line_start":167,"line_end":167,"column_start":40,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1372},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":145816,"byte_end":145833,"line_start":183,"line_end":183,"column_start":29,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10086},"to":{"krate":0,"index":1358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":146217,"byte_end":146234,"line_start":200,"line_end":200,"column_start":30,"column_end":47},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10086},"to":{"krate":2,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":146710,"byte_end":146727,"line_start":218,"line_end":218,"column_start":74,"column_end":91},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10086},"to":{"krate":2,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/filter/mod.rs","byte_start":147343,"byte_end":147360,"line_start":238,"line_end":238,"column_start":73,"column_end":90},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10086},"to":{"krate":2,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183482,"byte_end":183488,"line_start":20,"line_end":20,"column_start":26,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6261},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183516,"byte_end":183522,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6261},"to":{"krate":0,"index":2311}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183601,"byte_end":183607,"line_start":26,"line_end":26,"column_start":19,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6261},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":183663,"byte_end":183669,"line_start":30,"line_end":30,"column_start":29,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6261},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":184801,"byte_end":184805,"line_start":88,"line_end":88,"column_start":23,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185186,"byte_end":185197,"line_start":106,"line_end":106,"column_start":35,"column_end":46},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":2344}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185326,"byte_end":185337,"line_start":113,"line_end":113,"column_start":32,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":2330}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185548,"byte_end":185559,"line_start":122,"line_end":122,"column_start":27,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/entity.rs","byte_start":185783,"byte_end":185794,"line_start":131,"line_end":131,"column_start":20,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187217,"byte_end":187221,"line_start":26,"line_end":26,"column_start":25,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":10099},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187258,"byte_end":187262,"line_start":27,"line_end":27,"column_start":31,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":10099},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187297,"byte_end":187301,"line_start":28,"line_end":28,"column_start":29,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":10099},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187346,"byte_end":187350,"line_start":30,"line_end":30,"column_start":38,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10099},"to":{"krate":0,"index":2311}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187461,"byte_end":187465,"line_start":34,"line_end":34,"column_start":33,"column_end":37},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10099},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":187538,"byte_end":187542,"line_start":38,"line_end":38,"column_start":43,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10099},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":189505,"byte_end":189513,"line_start":120,"line_end":120,"column_start":37,"column_end":45},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190126,"byte_end":190135,"line_start":143,"line_end":143,"column_start":56,"column_end":65},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190359,"byte_end":190368,"line_start":152,"line_end":152,"column_start":46,"column_end":55},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1722},"to":{"krate":0,"index":2330}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190588,"byte_end":190597,"line_start":161,"line_end":161,"column_start":41,"column_end":50},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1722},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190853,"byte_end":190862,"line_start":170,"line_end":170,"column_start":49,"column_end":58},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1722},"to":{"krate":0,"index":2344}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/read.rs","byte_start":190997,"byte_end":191006,"line_start":177,"line_end":177,"column_start":34,"column_end":43},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1722},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":192960,"byte_end":192967,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10114},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193004,"byte_end":193011,"line_start":27,"line_end":27,"column_start":31,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":10114},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193046,"byte_end":193053,"line_start":28,"line_end":28,"column_start":29,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10114},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193098,"byte_end":193105,"line_start":30,"line_end":30,"column_start":38,"column_end":45},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10114},"to":{"krate":0,"index":2311}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193219,"byte_end":193226,"line_start":34,"line_end":34,"column_start":33,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10114},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":193299,"byte_end":193306,"line_start":38,"line_end":38,"column_start":43,"column_end":50},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10114},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":194880,"byte_end":194891,"line_start":102,"line_end":102,"column_start":37,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1876},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195570,"byte_end":195575,"line_start":129,"line_end":129,"column_start":56,"column_end":61},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":195805,"byte_end":195810,"line_start":138,"line_end":138,"column_start":46,"column_end":51},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1891},"to":{"krate":0,"index":2330}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":196205,"byte_end":196210,"line_start":151,"line_end":151,"column_start":41,"column_end":46},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":196466,"byte_end":196471,"line_start":160,"line_end":160,"column_start":49,"column_end":54},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1891},"to":{"krate":0,"index":2344}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":196702,"byte_end":196707,"line_start":169,"line_end":169,"column_start":34,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1891},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_read.rs","byte_start":198035,"byte_end":198039,"line_start":222,"line_end":222,"column_start":55,"column_end":59},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1932},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200026,"byte_end":200034,"line_start":26,"line_end":26,"column_start":31,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10129},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200065,"byte_end":200073,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10129},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200118,"byte_end":200126,"line_start":29,"line_end":29,"column_start":38,"column_end":46},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":10129},"to":{"krate":0,"index":2311}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200240,"byte_end":200248,"line_start":33,"line_end":33,"column_start":33,"column_end":41},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":10129},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":200321,"byte_end":200329,"line_start":37,"line_end":37,"column_start":43,"column_end":51},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":10129},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":201961,"byte_end":201973,"line_start":101,"line_end":101,"column_start":37,"column_end":49},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2060},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202701,"byte_end":202706,"line_start":129,"line_end":129,"column_start":59,"column_end":64},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":202991,"byte_end":202996,"line_start":139,"line_end":139,"column_start":46,"column_end":51},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":2330}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":203395,"byte_end":203400,"line_start":152,"line_end":152,"column_start":41,"column_end":46},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":203641,"byte_end":203646,"line_start":161,"line_end":161,"column_start":34,"column_end":39},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/try_write.rs","byte_start":205629,"byte_end":205633,"line_start":236,"line_end":236,"column_start":55,"column_end":59},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2113},"to":{"krate":0,"index":500}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207550,"byte_end":207555,"line_start":26,"line_end":26,"column_start":31,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":10144},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207586,"byte_end":207591,"line_start":27,"line_end":27,"column_start":25,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":10144},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207636,"byte_end":207641,"line_start":29,"line_end":29,"column_start":38,"column_end":43},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":10144},"to":{"krate":0,"index":2311}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207752,"byte_end":207757,"line_start":33,"line_end":33,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":10144},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":207830,"byte_end":207835,"line_start":37,"line_end":37,"column_start":43,"column_end":48},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":10144},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":209867,"byte_end":209876,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2240},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":210540,"byte_end":210550,"line_start":143,"line_end":143,"column_start":59,"column_end":69},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":210830,"byte_end":210840,"line_start":153,"line_end":153,"column_start":46,"column_end":56},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2258},"to":{"krate":0,"index":2330}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":211068,"byte_end":211078,"line_start":162,"line_end":162,"column_start":41,"column_end":51},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2258},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/write.rs","byte_start":211319,"byte_end":211329,"line_start":171,"line_end":171,"column_start":34,"column_end":44},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2258},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170590,"byte_end":170596,"line_start":41,"line_end":41,"column_start":37,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":2,"index":37335},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":170683,"byte_end":170689,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":179}},"from":{"krate":2,"index":37335},"to":{"krate":0,"index":2292}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171198,"byte_end":171211,"line_start":60,"line_end":60,"column_start":24,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":2311},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":171214,"byte_end":171219,"line_start":60,"line_end":60,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":2313}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173455,"byte_end":173472,"line_start":119,"line_end":119,"column_start":18,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":2330},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173475,"byte_end":173479,"line_start":119,"line_end":119,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":173482,"byte_end":173486,"line_start":119,"line_end":119,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":2334}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174480,"byte_end":174485,"line_start":144,"line_end":144,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":2334},"to":{"krate":0,"index":2344}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/view/mod.rs","byte_start":174765,"byte_end":174771,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":2,"index":37335},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97060,"byte_end":97068,"line_start":20,"line_end":20,"column_start":22,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":2292},"to":{"krate":0,"index":2358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97071,"byte_end":97076,"line_start":20,"line_end":20,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":2358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97212,"byte_end":97213,"line_start":25,"line_end":25,"column_start":33,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2361},"to":{"krate":0,"index":2358}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":97757,"byte_end":97768,"line_start":46,"line_end":46,"column_start":10,"column_end":21},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100264,"byte_end":100269,"line_start":132,"line_end":132,"column_start":48,"column_end":53},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2373},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":100369,"byte_end":100374,"line_start":138,"line_end":138,"column_start":36,"column_end":41},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":124807,"byte_end":124816,"line_start":766,"line_end":766,"column_start":20,"column_end":29},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":127306,"byte_end":127315,"line_start":845,"line_end":845,"column_start":37,"column_end":46},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2522},"to":{"krate":2,"index":6998}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":127608,"byte_end":127617,"line_start":854,"line_end":854,"column_start":58,"column_end":67},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2522},"to":{"krate":18,"index":4648}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":128429,"byte_end":128438,"line_start":877,"line_end":877,"column_start":41,"column_end":50},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2555},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":130640,"byte_end":130644,"line_start":948,"line_end":948,"column_start":45,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2594},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":131775,"byte_end":131787,"line_start":986,"line_end":986,"column_start":20,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":132216,"byte_end":132228,"line_start":1005,"line_end":1005,"column_start":36,"column_end":48},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2612},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":132349,"byte_end":132361,"line_start":1012,"line_end":1012,"column_start":36,"column_end":48},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2612},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":132488,"byte_end":132500,"line_start":1019,"line_end":1019,"column_start":42,"column_end":54},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2612},"to":{"krate":18,"index":436}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/query/mod.rs","byte_start":134094,"byte_end":134106,"line_start":1072,"line_end":1072,"column_start":41,"column_end":53},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2612},"to":{"krate":18,"index":4674}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":232802,"byte_end":232827,"line_start":25,"line_end":25,"column_start":65,"column_end":90},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2765},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":234878,"byte_end":234899,"line_start":85,"line_end":85,"column_start":48,"column_end":69},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2780},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":236399,"byte_end":236430,"line_start":126,"line_end":126,"column_start":48,"column_end":79},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2792},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":237563,"byte_end":237589,"line_start":159,"line_end":159,"column_start":48,"column_end":74},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2805},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":238693,"byte_end":238720,"line_start":196,"line_end":196,"column_start":66,"column_end":93},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2873},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":239115,"byte_end":239125,"line_start":208,"line_end":208,"column_start":66,"column_end":76},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2885},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":240255,"byte_end":240278,"line_start":243,"line_end":243,"column_start":66,"column_end":89},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2898},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":240676,"byte_end":240689,"line_start":255,"line_end":255,"column_start":66,"column_end":79},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2910},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":243819,"byte_end":243837,"line_start":345,"line_end":345,"column_start":66,"column_end":84},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2933},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":244204,"byte_end":244214,"line_start":356,"line_end":356,"column_start":66,"column_end":76},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2944},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":245435,"byte_end":245453,"line_start":391,"line_end":391,"column_start":60,"column_end":78},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":246191,"byte_end":246209,"line_start":411,"line_end":411,"column_start":13,"column_end":31},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2956},"to":{"krate":0,"index":422}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":246543,"byte_end":246561,"line_start":424,"line_end":424,"column_start":13,"column_end":31},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2956},"to":{"krate":0,"index":426}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":247041,"byte_end":247059,"line_start":439,"line_end":439,"column_start":13,"column_end":31},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2956},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":247508,"byte_end":247526,"line_start":455,"line_end":455,"column_start":60,"column_end":78},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":248356,"byte_end":248374,"line_start":477,"line_end":477,"column_start":13,"column_end":31},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3001},"to":{"krate":0,"index":422}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":248708,"byte_end":248726,"line_start":490,"line_end":490,"column_start":13,"column_end":31},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3001},"to":{"krate":0,"index":426}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":249206,"byte_end":249224,"line_start":505,"line_end":505,"column_start":13,"column_end":31},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3001},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":249494,"byte_end":249503,"line_start":517,"line_end":517,"column_start":48,"column_end":57},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3044},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":249851,"byte_end":249861,"line_start":528,"line_end":528,"column_start":48,"column_end":58},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3055},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":250917,"byte_end":250929,"line_start":562,"line_end":562,"column_start":70,"column_end":82},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3067},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":251367,"byte_end":251377,"line_start":574,"line_end":574,"column_start":70,"column_end":80},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3081},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/archetypes.rs","byte_start":252830,"byte_end":252844,"line_start":613,"line_end":613,"column_start":70,"column_end":84},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3096},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/de.rs","byte_start":255717,"byte_end":255729,"line_start":54,"line_end":54,"column_start":54,"column_end":66},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3173},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":258414,"byte_end":258438,"line_start":22,"line_end":22,"column_start":65,"column_end":89},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3243},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":261119,"byte_end":261135,"line_start":98,"line_end":98,"column_start":48,"column_end":64},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3260},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":262788,"byte_end":262807,"line_start":142,"line_end":142,"column_start":48,"column_end":67},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3275},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":263793,"byte_end":263819,"line_start":174,"line_end":174,"column_start":66,"column_end":92},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3346},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":264220,"byte_end":264236,"line_start":186,"line_end":186,"column_start":66,"column_end":82},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3358},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":265462,"byte_end":265480,"line_start":222,"line_end":222,"column_start":66,"column_end":84},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3371},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":265916,"byte_end":265935,"line_start":235,"line_end":235,"column_start":66,"column_end":85},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3384},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":267960,"byte_end":267972,"line_start":279,"line_end":279,"column_start":46,"column_end":58},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3398},"to":{"krate":0,"index":422}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":268374,"byte_end":268386,"line_start":291,"line_end":291,"column_start":46,"column_end":58},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3398},"to":{"krate":0,"index":426}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":269077,"byte_end":269089,"line_start":305,"line_end":305,"column_start":50,"column_end":62},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3398},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/entities.rs","byte_start":269972,"byte_end":269993,"line_start":335,"line_end":335,"column_start":66,"column_end":87},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3413},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":272877,"byte_end":272883,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6261},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":273753,"byte_end":273759,"line_start":87,"line_end":87,"column_start":32,"column_end":38},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6261},"to":{"krate":38,"index":1447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":275087,"byte_end":275092,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":11070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/id.rs","byte_start":277494,"byte_end":277499,"line_start":189,"line_end":189,"column_start":33,"column_end":38},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":11070},"to":{"krate":0,"index":3589}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":280121,"byte_end":280138,"line_start":57,"line_end":57,"column_start":47,"column_end":64},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/ser.rs","byte_start":280400,"byte_end":280417,"line_start":67,"line_end":67,"column_start":61,"column_end":78},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3553},"to":{"krate":38,"index":1983}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213680,"byte_end":213689,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":38,"index":1983},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213708,"byte_end":213719,"line_start":31,"line_end":31,"column_start":40,"column_end":51},"kind":"SuperTrait","from":{"krate":38,"index":1447},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213727,"byte_end":213730,"line_start":31,"line_end":31,"column_start":59,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213733,"byte_end":213738,"line_start":31,"line_end":31,"column_start":65,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":2447},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213741,"byte_end":213745,"line_start":31,"line_end":31,"column_start":73,"column_end":77},"kind":"SuperTrait","from":{"krate":2,"index":8907},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213771,"byte_end":213772,"line_start":35,"line_end":35,"column_start":21,"column_end":22},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3580},"to":{"krate":0,"index":3577}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":213983,"byte_end":213990,"line_start":40,"line_end":40,"column_start":38,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":3577},"to":{"krate":0,"index":3582}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":216208,"byte_end":216216,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":219839,"byte_end":219847,"line_start":206,"line_end":206,"column_start":24,"column_end":32},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3594},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":220780,"byte_end":220788,"line_start":240,"line_end":240,"column_start":32,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3594},"to":{"krate":0,"index":3545}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":223085,"byte_end":223093,"line_start":313,"line_end":313,"column_start":34,"column_end":42},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3594},"to":{"krate":0,"index":3160}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":225241,"byte_end":225253,"line_start":376,"line_end":376,"column_start":9,"column_end":21},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3664},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":225714,"byte_end":225724,"line_start":390,"line_end":390,"column_start":17,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3677},"to":{"krate":38,"index":1531}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227046,"byte_end":227066,"line_start":428,"line_end":428,"column_start":62,"column_end":82},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3692},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/serialize/mod.rs","byte_start":227659,"byte_end":227678,"line_start":446,"line_end":446,"column_start":62,"column_end":81},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3705},"to":{"krate":38,"index":1458}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300237,"byte_end":300240,"line_start":46,"line_end":46,"column_start":32,"column_end":35},"kind":{"Impl":{"id":252}},"from":{"krate":5,"index":6703},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300421,"byte_end":300424,"line_start":54,"line_end":54,"column_start":35,"column_end":38},"kind":{"Impl":{"id":253}},"from":{"krate":5,"index":6703},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":300807,"byte_end":300816,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":11179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":302818,"byte_end":302827,"line_start":136,"line_end":136,"column_start":15,"column_end":24},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":11179},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":303255,"byte_end":303267,"line_start":152,"line_end":152,"column_start":6,"column_end":18},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":11186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":305270,"byte_end":305282,"line_start":210,"line_end":210,"column_start":23,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":11186},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/archetype.rs","byte_start":305563,"byte_end":305565,"line_start":219,"line_end":219,"column_start":23,"column_end":25},"kind":{"Impl":{"id":258}},"from":{"krate":5,"index":4347},"to":{"krate":0,"index":1348}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306460,"byte_end":306475,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":11195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":306891,"byte_end":306906,"line_start":34,"line_end":34,"column_start":26,"column_end":41},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":11195},"to":{"krate":2,"index":8907}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307018,"byte_end":307033,"line_start":40,"line_end":40,"column_start":20,"column_end":35},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":11195},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307143,"byte_end":307158,"line_start":46,"line_end":46,"column_start":18,"column_end":33},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":11195},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307605,"byte_end":307610,"line_start":61,"line_end":61,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2827},"to":{"krate":0,"index":3888}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307613,"byte_end":307617,"line_start":61,"line_end":61,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":3888}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307620,"byte_end":307624,"line_start":61,"line_end":61,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":3888}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/component.rs","byte_start":307823,"byte_end":307824,"line_start":66,"line_end":66,"column_start":54,"column_end":55},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3892},"to":{"krate":0,"index":3888}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":308248,"byte_end":308256,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":11210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309081,"byte_end":309089,"line_start":41,"line_end":41,"column_start":37,"column_end":45},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":11210},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":309506,"byte_end":309511,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":11229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":311699,"byte_end":311704,"line_start":131,"line_end":131,"column_start":26,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":11229},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/group.rs","byte_start":311945,"byte_end":311950,"line_start":139,"line_end":139,"column_start":25,"column_end":30},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":11229},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/index.rs","byte_start":313434,"byte_end":313445,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":11298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":315099,"byte_end":315107,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":11304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":316866,"byte_end":316874,"line_start":81,"line_end":81,"column_start":18,"column_end":26},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":11304},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":317526,"byte_end":317538,"line_start":109,"line_end":109,"column_start":9,"column_end":21},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":11311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":321805,"byte_end":321817,"line_start":249,"line_end":249,"column_start":19,"column_end":31},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":11311},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322026,"byte_end":322038,"line_start":257,"line_end":257,"column_start":22,"column_end":34},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":11311},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":322236,"byte_end":322248,"line_start":264,"line_end":264,"column_start":18,"column_end":30},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":11311},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":323374,"byte_end":323387,"line_start":298,"line_end":298,"column_start":36,"column_end":49},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":11325},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":323429,"byte_end":323442,"line_start":299,"line_end":299,"column_start":36,"column_end":49},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":11325},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":323469,"byte_end":323482,"line_start":301,"line_end":301,"column_start":20,"column_end":33},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":11325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":324261,"byte_end":324274,"line_start":325,"line_end":325,"column_start":48,"column_end":61},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":11325},"to":{"krate":0,"index":4175}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":330936,"byte_end":330949,"line_start":521,"line_end":521,"column_start":32,"column_end":45},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":11325},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":331250,"byte_end":331263,"line_start":534,"line_end":534,"column_start":52,"column_end":65},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":11325},"to":{"krate":0,"index":4237}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":333273,"byte_end":333286,"line_start":587,"line_end":587,"column_start":37,"column_end":50},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4115},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/packed.rs","byte_start":333834,"byte_end":333850,"line_start":605,"line_end":605,"column_start":37,"column_end":53},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4125},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":338266,"byte_end":338274,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":11336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":339138,"byte_end":339150,"line_start":46,"line_end":46,"column_start":26,"column_end":38},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":11347},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":339783,"byte_end":339795,"line_start":72,"line_end":72,"column_start":35,"column_end":47},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":11347},"to":{"krate":2,"index":7050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/slicevec.rs","byte_start":339836,"byte_end":339848,"line_start":73,"line_end":73,"column_start":31,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":11347},"to":{"krate":2,"index":7432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":282784,"byte_end":282797,"line_start":27,"line_end":27,"column_start":6,"column_end":19},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":11356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284604,"byte_end":284612,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":42,"index":18},"to":{"krate":0,"index":4175}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284615,"byte_end":284619,"line_start":82,"line_end":82,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":4175}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":284622,"byte_end":284626,"line_start":82,"line_end":82,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":4175}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":287743,"byte_end":287757,"line_start":157,"line_end":157,"column_start":24,"column_end":38},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288084,"byte_end":288098,"line_start":171,"line_end":171,"column_start":42,"column_end":56},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4189},"to":{"krate":2,"index":2725}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288205,"byte_end":288219,"line_start":177,"line_end":177,"column_start":34,"column_end":48},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4189},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288375,"byte_end":288389,"line_start":185,"line_end":185,"column_start":50,"column_end":64},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4189},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":288867,"byte_end":288884,"line_start":199,"line_end":199,"column_start":24,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289310,"byte_end":289327,"line_start":215,"line_end":215,"column_start":34,"column_end":51},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4213},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289483,"byte_end":289500,"line_start":223,"line_end":223,"column_start":50,"column_end":67},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4213},"to":{"krate":2,"index":3111}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":289688,"byte_end":289705,"line_start":230,"line_end":230,"column_start":53,"column_end":70},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4213},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290025,"byte_end":290048,"line_start":238,"line_end":238,"column_start":47,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":4175},"to":{"krate":0,"index":4237}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":290051,"byte_end":290058,"line_start":238,"line_end":238,"column_start":73,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2800},"to":{"krate":0,"index":4237}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":292072,"byte_end":292082,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":11400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":294422,"byte_end":294432,"line_start":359,"line_end":359,"column_start":26,"column_end":36},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":11400},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295230,"byte_end":295241,"line_start":382,"line_end":382,"column_start":6,"column_end":17},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":11404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295474,"byte_end":295485,"line_start":393,"line_end":393,"column_start":18,"column_end":29},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":11404},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/storage/mod.rs","byte_start":295964,"byte_end":295972,"line_start":410,"line_end":410,"column_start":10,"column_end":18},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":341557,"byte_end":341572,"line_start":27,"line_end":27,"column_start":6,"column_end":21},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":342574,"byte_end":342589,"line_start":59,"line_end":59,"column_start":10,"column_end":25},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":11413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":346749,"byte_end":346757,"line_start":164,"line_end":164,"column_start":10,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":11426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":349514,"byte_end":349522,"line_start":247,"line_end":247,"column_start":26,"column_end":34},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":11426},"to":{"krate":0,"index":5230}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/subworld.rs","byte_start":350932,"byte_end":350940,"line_start":294,"line_end":294,"column_start":34,"column_end":42},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":11426},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358913,"byte_end":358917,"line_start":33,"line_end":33,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":358920,"byte_end":358924,"line_start":33,"line_end":33,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359140,"byte_end":359161,"line_start":40,"line_end":40,"column_start":8,"column_end":29},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":11434},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359279,"byte_end":359300,"line_start":46,"line_end":46,"column_start":27,"column_end":48},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":11434},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":359886,"byte_end":359909,"line_start":66,"line_end":66,"column_start":9,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4456},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":360054,"byte_end":360077,"line_start":75,"line_end":75,"column_start":54,"column_end":77},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":360335,"byte_end":360358,"line_start":85,"line_end":85,"column_start":9,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4456},"to":{"krate":0,"index":422}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":360652,"byte_end":360675,"line_start":97,"line_end":97,"column_start":9,"column_end":32},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4456},"to":{"krate":0,"index":426}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361223,"byte_end":361233,"line_start":118,"line_end":118,"column_start":9,"column_end":19},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361426,"byte_end":361439,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":11441},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361529,"byte_end":361542,"line_start":134,"line_end":134,"column_start":27,"column_end":40},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":11441},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361835,"byte_end":361854,"line_start":146,"line_end":146,"column_start":8,"column_end":27},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":11447},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":361888,"byte_end":361907,"line_start":148,"line_end":148,"column_start":24,"column_end":43},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":11447},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362081,"byte_end":362100,"line_start":156,"line_end":156,"column_start":8,"column_end":27},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":11452},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362245,"byte_end":362264,"line_start":163,"line_end":163,"column_start":27,"column_end":46},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":11452},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362628,"byte_end":362650,"line_start":178,"line_end":178,"column_start":8,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":11459},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":362734,"byte_end":362756,"line_start":183,"line_end":183,"column_start":27,"column_end":49},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":11459},"to":{"krate":0,"index":4451}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/command.rs","byte_start":364188,"byte_end":364201,"line_start":232,"line_end":232,"column_start":6,"column_end":19},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370669,"byte_end":370683,"line_start":30,"line_end":30,"column_start":6,"column_end":20},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":11466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":370972,"byte_end":370986,"line_start":41,"line_end":41,"column_start":26,"column_end":40},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":11466},"to":{"krate":2,"index":8907}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371098,"byte_end":371112,"line_start":47,"line_end":47,"column_start":20,"column_end":34},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":11466},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371222,"byte_end":371236,"line_start":53,"line_end":53,"column_start":18,"column_end":32},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":11466},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371587,"byte_end":371595,"line_start":66,"line_end":66,"column_start":31,"column_end":39},"kind":"SuperTrait","from":{"krate":42,"index":18},"to":{"krate":0,"index":4613}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":371620,"byte_end":371621,"line_start":67,"line_end":67,"column_start":22,"column_end":23},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4615},"to":{"krate":0,"index":4613}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":373347,"byte_end":373351,"line_start":128,"line_end":128,"column_start":43,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":10099},"to":{"krate":0,"index":4616}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":373632,"byte_end":373637,"line_start":137,"line_end":137,"column_start":43,"column_end":48},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":10144},"to":{"krate":0,"index":4616}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":374973,"byte_end":374978,"line_start":182,"line_end":182,"column_start":33,"column_end":38},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4638},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375156,"byte_end":375161,"line_start":191,"line_end":191,"column_start":66,"column_end":71},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4638},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375324,"byte_end":375329,"line_start":197,"line_end":197,"column_start":32,"column_end":37},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4638},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375645,"byte_end":375653,"line_start":210,"line_end":210,"column_start":38,"column_end":46},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375808,"byte_end":375816,"line_start":219,"line_end":219,"column_start":41,"column_end":49},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":375979,"byte_end":375987,"line_start":226,"line_end":226,"column_start":66,"column_end":74},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":376150,"byte_end":376158,"line_start":232,"line_end":232,"column_start":32,"column_end":40},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":376392,"byte_end":376404,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379290,"byte_end":379305,"line_start":332,"line_end":332,"column_start":22,"column_end":37},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":11560},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379330,"byte_end":379345,"line_start":333,"line_end":333,"column_start":22,"column_end":37},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":11560},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":379355,"byte_end":379370,"line_start":335,"line_end":335,"column_start":6,"column_end":21},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":11560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":381039,"byte_end":381048,"line_start":383,"line_end":383,"column_start":6,"column_end":15},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":11564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/resources.rs","byte_start":387156,"byte_end":387169,"line_start":534,"line_end":534,"column_start":10,"column_end":23},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390320,"byte_end":390328,"line_start":31,"line_end":31,"column_start":29,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":4802},"to":{"krate":0,"index":4799}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390331,"byte_end":390335,"line_start":31,"line_end":31,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":4799}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390338,"byte_end":390342,"line_start":31,"line_end":31,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":4799}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":390400,"byte_end":390401,"line_start":33,"line_end":33,"column_start":54,"column_end":55},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4801},"to":{"krate":0,"index":4799}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392851,"byte_end":392860,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4817},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392885,"byte_end":392894,"line_start":96,"line_end":96,"column_start":22,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4817},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":392904,"byte_end":392913,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":393222,"byte_end":393230,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":394684,"byte_end":394698,"line_start":147,"line_end":147,"column_start":18,"column_end":32},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":11569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":404874,"byte_end":404881,"line_start":401,"line_end":401,"column_start":6,"column_end":13},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":406685,"byte_end":406692,"line_start":454,"line_end":454,"column_start":18,"column_end":25},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":407916,"byte_end":407924,"line_start":499,"line_end":499,"column_start":6,"column_end":14},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":410795,"byte_end":410803,"line_start":579,"line_end":579,"column_start":24,"column_end":32},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4874},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/schedule.rs","byte_start":410908,"byte_end":410916,"line_start":585,"line_end":585,"column_start":26,"column_end":34},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4874},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":416655,"byte_end":416659,"line_start":27,"line_end":27,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2822},"to":{"krate":0,"index":4997}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":416662,"byte_end":416666,"line_start":27,"line_end":27,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2834},"to":{"krate":0,"index":4997}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":417924,"byte_end":417929,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":2373},"to":{"krate":0,"index":4997}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418640,"byte_end":418648,"line_start":96,"line_end":96,"column_start":28,"column_end":36},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":11635},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":418813,"byte_end":418821,"line_start":102,"line_end":102,"column_start":46,"column_end":54},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":11635},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419057,"byte_end":419071,"line_start":112,"line_end":112,"column_start":31,"column_end":45},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5014},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419108,"byte_end":419122,"line_start":113,"line_end":113,"column_start":31,"column_end":45},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5014},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":419861,"byte_end":419867,"line_start":132,"line_end":132,"column_start":28,"column_end":34},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5022},"to":{"krate":0,"index":4802}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":422579,"byte_end":422580,"line_start":207,"line_end":207,"column_start":34,"column_end":35},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5051},"to":{"krate":0,"index":5046}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424421,"byte_end":424434,"line_start":262,"line_end":262,"column_start":6,"column_end":19},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":424837,"byte_end":424850,"line_start":275,"line_end":275,"column_start":18,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5055},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/systems/system.rs","byte_start":425158,"byte_end":425171,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434391,"byte_end":434398,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":11671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":434517,"byte_end":434524,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":11671},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435545,"byte_end":435550,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":11693},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":435637,"byte_end":435642,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":11693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":462230,"byte_end":462235,"line_start":829,"line_end":829,"column_start":22,"column_end":27},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":11693},"to":{"krate":0,"index":5230}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":463664,"byte_end":463679,"line_start":880,"line_end":880,"column_start":10,"column_end":25},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":11705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467158,"byte_end":467171,"line_start":997,"line_end":997,"column_start":18,"column_end":31},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5335},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":467883,"byte_end":467892,"line_start":1025,"line_end":1025,"column_start":6,"column_end":15},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":11719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/legion-0.3.1/src/internals/world.rs","byte_start":471294,"byte_end":471303,"line_start":1114,"line_end":1114,"column_start":17,"column_end":26},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":11719},"to":{"krate":0,"index":5329}}]}