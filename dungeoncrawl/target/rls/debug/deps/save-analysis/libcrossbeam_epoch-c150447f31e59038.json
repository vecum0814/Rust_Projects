{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9","program":"/Users/raylee/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=c150447f31e59038","-C","extra-filename=-c150447f31e59038","--out-dir","/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps","-L","dependency=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps","--extern","cfg_if=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libcfg_if-d56095977dca4166.rmeta","--extern","crossbeam_utils=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libcrossbeam_utils-c57e6827f75c3378.rmeta","--extern","memoffset=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libmemoffset-280f2b7512520a86.rmeta","--extern","once_cell=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libonce_cell-cb056a8fc5fd79f3.rmeta","--extern","scopeguard=/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libscopeguard-befa600eff0fa458.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raylee/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raylee/Rust/dungeoncrawl/target/rls/debug/deps/libcrossbeam_epoch-c150447f31e59038.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[14838943252961605658,13441946862974726659]},"crate_root":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src","external_crates":[{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8089372304544504840,2527656813180266519]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8996585198574955197,10064433740309368892]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11464076584146293375,1944750198668660233]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13665112390248177411,18026488694072058539]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4173548784217791313,6413716694370064316]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4417783556059781835,6377966464484580742]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16465050104586441903,11486803546517078730]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4077680908246514517,3259883106732070033]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1548350640775673346,17931765307891215690]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3115519341803559472,4584691163881866229]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8103449524405359139,17525483118853280774]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16653067590616142994,3376435367795585491]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[12324169339618228571,8193712517758892028]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[11110532902483564599,1367988466669347686]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9623270257962620076,7602523633458697349]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[14450564791605029788,113709828964997141]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[8353845630783687070,8394744790924754535]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","num":18,"id":{"name":"once_cell","disambiguator":[16132929313450625360,6673490609048877202]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","num":19,"id":{"name":"scopeguard","disambiguator":[5640782450401488257,2357455914816469932]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","num":20,"id":{"name":"memoffset","disambiguator":[17789376797747000994,17862723367763143364]}}],"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5873,"byte_end":5882,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5884,"byte_end":5890,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5892,"byte_end":5912,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5926,"byte_end":5931,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5933,"byte_end":5940,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5942,"byte_end":5948,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5995,"byte_end":6004,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6006,"byte_end":6017,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6050,"byte_end":6061,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6063,"byte_end":6068,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6132,"byte_end":6150,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6152,"byte_end":6173,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6281,"byte_end":6298,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6300,"byte_end":6309,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6311,"byte_end":6314,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":354},{"krate":0,"index":397},{"krate":0,"index":434},{"krate":0,"index":453},{"krate":0,"index":505},{"krate":0,"index":650},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":871},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977261,"byte_end":9977279,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977090,"byte_end":9977149,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977193,"byte_end":9977251,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977397,"byte_end":9977417,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977325,"byte_end":9977385,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977547,"byte_end":9977554,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977466,"byte_end":9977538,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977640,"byte_end":9977643,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977576,"byte_end":9977631,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978754,"byte_end":9978775,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977958,"byte_end":9978010,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978011,"byte_end":9978014,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978015,"byte_end":9978106,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978107,"byte_end":9978199,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978200,"byte_end":9978203,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978204,"byte_end":9978269,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978270,"byte_end":9978273,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978274,"byte_end":9978368,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978369,"byte_end":9978395,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978396,"byte_end":9978488,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978489,"byte_end":9978517,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978561,"byte_end":9978743,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978841,"byte_end":9978848,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978782,"byte_end":9978833,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9979066,"byte_end":9979073,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978874,"byte_end":9978922,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978927,"byte_end":9978930,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9978935,"byte_end":9979028,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9979033,"byte_end":9979058,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981423,"byte_end":9981432,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980450,"byte_end":9980497,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980498,"byte_end":9980501,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980502,"byte_end":9980600,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980601,"byte_end":9980696,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980697,"byte_end":9980759,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980760,"byte_end":9980763,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980764,"byte_end":9980856,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980857,"byte_end":9980956,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9980957,"byte_end":9981057,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981058,"byte_end":9981080,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981081,"byte_end":9981084,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981085,"byte_end":9981178,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981179,"byte_end":9981250,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981251,"byte_end":9981254,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981255,"byte_end":9981262,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981263,"byte_end":9981293,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981294,"byte_end":9981325,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981326,"byte_end":9981329,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981330,"byte_end":9981404,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981405,"byte_end":9981412,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981479,"byte_end":9981484,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981439,"byte_end":9981468,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981538,"byte_end":9981542,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981498,"byte_end":9981528,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981694,"byte_end":9981698,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981549,"byte_end":9981594,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981599,"byte_end":9981602,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981607,"byte_end":9981619,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981624,"byte_end":9981627,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981632,"byte_end":9981679,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982062,"byte_end":9982067,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981732,"byte_end":9981767,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981772,"byte_end":9981775,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981780,"byte_end":9981792,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981797,"byte_end":9981800,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981805,"byte_end":9981881,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981886,"byte_end":9981954,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9981959,"byte_end":9982047,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982466,"byte_end":9982475,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982102,"byte_end":9982145,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982150,"byte_end":9982153,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982158,"byte_end":9982170,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982175,"byte_end":9982178,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982183,"byte_end":9982259,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982264,"byte_end":9982332,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982337,"byte_end":9982427,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982432,"byte_end":9982451,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982888,"byte_end":9982892,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982514,"byte_end":9982567,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982572,"byte_end":9982575,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982580,"byte_end":9982592,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982597,"byte_end":9982600,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982605,"byte_end":9982681,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982686,"byte_end":9982754,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982759,"byte_end":9982849,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982854,"byte_end":9982873,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986001,"byte_end":9986007,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985483,"byte_end":9985547,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985548,"byte_end":9985551,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985552,"byte_end":9985650,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985651,"byte_end":9985748,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985749,"byte_end":9985820,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985821,"byte_end":9985824,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985825,"byte_end":9985905,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985906,"byte_end":9985909,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9985910,"byte_end":9985989,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986493,"byte_end":9986496,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986260,"byte_end":9986342,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986347,"byte_end":9986350,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986355,"byte_end":9986369,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986374,"byte_end":9986377,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986382,"byte_end":9986389,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986394,"byte_end":9986426,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986431,"byte_end":9986434,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986439,"byte_end":9986469,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986474,"byte_end":9986481,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986840,"byte_end":9986844,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986599,"byte_end":9986681,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986686,"byte_end":9986689,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986694,"byte_end":9986708,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986713,"byte_end":9986716,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986721,"byte_end":9986728,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986733,"byte_end":9986765,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986770,"byte_end":9986773,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986778,"byte_end":9986816,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986821,"byte_end":9986828,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987672,"byte_end":9987676,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.\n","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987548,"byte_end":9987586,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"cfg(not(all(crossbeam_const_fn_trait_bound, not(crossbeam_loom))))","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987591,"byte_end":9987660,"line_start":354,"line_end":354,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988261,"byte_end":9988265,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987803,"byte_end":9987848,"line_start":362,"line_end":362,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987853,"byte_end":9987856,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987861,"byte_end":9987951,"line_start":364,"line_end":364,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987956,"byte_end":9987970,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987975,"byte_end":9987978,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9987983,"byte_end":9987997,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988002,"byte_end":9988005,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988010,"byte_end":9988017,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988022,"byte_end":9988071,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988076,"byte_end":9988120,"line_start":371,"line_end":371,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988125,"byte_end":9988128,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988133,"byte_end":9988163,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988168,"byte_end":9988198,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988203,"byte_end":9988237,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988242,"byte_end":9988249,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989272,"byte_end":9989284,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988395,"byte_end":9988474,"line_start":381,"line_end":381,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988479,"byte_end":9988482,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988487,"byte_end":9988560,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988565,"byte_end":9988641,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988646,"byte_end":9988717,"line_start":385,"line_end":385,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988722,"byte_end":9988796,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988801,"byte_end":9988824,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988829,"byte_end":9988832,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988837,"byte_end":9988912,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988917,"byte_end":9988991,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9988996,"byte_end":9989030,"line_start":391,"line_end":391,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989035,"byte_end":9989038,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989043,"byte_end":9989057,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989062,"byte_end":9989065,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989070,"byte_end":9989077,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989082,"byte_end":9989131,"line_start":396,"line_end":396,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989136,"byte_end":9989139,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989144,"byte_end":9989174,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989179,"byte_end":9989209,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989214,"byte_end":9989248,"line_start":400,"line_end":400,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989253,"byte_end":9989260,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989892,"byte_end":9989897,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989404,"byte_end":9989469,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989474,"byte_end":9989477,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989482,"byte_end":9989572,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989577,"byte_end":9989591,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989596,"byte_end":9989599,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989604,"byte_end":9989618,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989623,"byte_end":9989626,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989631,"byte_end":9989638,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989643,"byte_end":9989692,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989697,"byte_end":9989741,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989746,"byte_end":9989749,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989754,"byte_end":9989784,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989789,"byte_end":9989825,"line_start":418,"line_end":418,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989830,"byte_end":9989868,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9989873,"byte_end":9989880,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990547,"byte_end":9990551,"line_start":441,"line_end":441,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990004,"byte_end":9990092,"line_start":425,"line_end":425,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990097,"byte_end":9990110,"line_start":426,"line_end":426,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990115,"byte_end":9990118,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990123,"byte_end":9990213,"line_start":428,"line_end":428,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990218,"byte_end":9990232,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990237,"byte_end":9990240,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990245,"byte_end":9990259,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990264,"byte_end":9990267,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990272,"byte_end":9990279,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990284,"byte_end":9990341,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990346,"byte_end":9990390,"line_start":435,"line_end":435,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990395,"byte_end":9990398,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990403,"byte_end":9990433,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990438,"byte_end":9990468,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990473,"byte_end":9990523,"line_start":439,"line_end":439,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990528,"byte_end":9990535,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992387,"byte_end":9992403,"line_start":475,"line_end":475,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990722,"byte_end":9990818,"line_start":445,"line_end":445,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990823,"byte_end":9990917,"line_start":446,"line_end":446,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990922,"byte_end":9990993,"line_start":447,"line_end":447,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9990998,"byte_end":9991001,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991006,"byte_end":9991101,"line_start":449,"line_end":449,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991106,"byte_end":9991197,"line_start":450,"line_end":450,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991202,"byte_end":9991215,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991220,"byte_end":9991223,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991228,"byte_end":9991297,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991302,"byte_end":9991383,"line_start":454,"line_end":454,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991388,"byte_end":9991479,"line_start":455,"line_end":455,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991484,"byte_end":9991574,"line_start":456,"line_end":456,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991579,"byte_end":9991661,"line_start":457,"line_end":457,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991666,"byte_end":9991744,"line_start":458,"line_end":458,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991749,"byte_end":9991829,"line_start":459,"line_end":459,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991834,"byte_end":9991900,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991905,"byte_end":9991908,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991913,"byte_end":9991927,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991932,"byte_end":9991935,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991940,"byte_end":9991947,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9991952,"byte_end":9992016,"line_start":465,"line_end":465,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992021,"byte_end":9992065,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992070,"byte_end":9992073,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992078,"byte_end":9992108,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992113,"byte_end":9992116,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992121,"byte_end":9992151,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992156,"byte_end":9992193,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992198,"byte_end":9992277,"line_start":472,"line_end":472,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992282,"byte_end":9992363,"line_start":473,"line_end":473,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9992368,"byte_end":9992375,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995437,"byte_end":9995458,"line_start":550,"line_end":550,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993065,"byte_end":9993161,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993166,"byte_end":9993260,"line_start":499,"line_end":499,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993265,"byte_end":9993336,"line_start":500,"line_end":500,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993341,"byte_end":9993344,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993349,"byte_end":9993444,"line_start":502,"line_end":502,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993449,"byte_end":9993544,"line_start":503,"line_end":503,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993549,"byte_end":9993639,"line_start":504,"line_end":504,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993644,"byte_end":9993728,"line_start":505,"line_end":505,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993733,"byte_end":9993736,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993741,"byte_end":9993810,"line_start":507,"line_end":507,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993815,"byte_end":9993896,"line_start":508,"line_end":508,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993901,"byte_end":9993992,"line_start":509,"line_end":509,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9993997,"byte_end":9994087,"line_start":510,"line_end":510,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994092,"byte_end":9994174,"line_start":511,"line_end":511,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994179,"byte_end":9994257,"line_start":512,"line_end":512,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994262,"byte_end":9994342,"line_start":513,"line_end":513,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994347,"byte_end":9994413,"line_start":514,"line_end":514,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994418,"byte_end":9994421,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994426,"byte_end":9994476,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994481,"byte_end":9994484,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994489,"byte_end":9994503,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994508,"byte_end":9994511,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994516,"byte_end":9994523,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994528,"byte_end":9994592,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994597,"byte_end":9994641,"line_start":522,"line_end":522,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994646,"byte_end":9994649,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994654,"byte_end":9994684,"line_start":524,"line_end":524,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994689,"byte_end":9994719,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994724,"byte_end":9994727,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994732,"byte_end":9994767,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994772,"byte_end":9994812,"line_start":528,"line_end":528,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994817,"byte_end":9994827,"line_start":529,"line_end":529,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994832,"byte_end":9994904,"line_start":530,"line_end":530,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994909,"byte_end":9994931,"line_start":531,"line_end":531,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994936,"byte_end":9994960,"line_start":532,"line_end":532,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994965,"byte_end":9994987,"line_start":533,"line_end":533,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9994992,"byte_end":9995005,"line_start":534,"line_end":534,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995010,"byte_end":9995035,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995040,"byte_end":9995074,"line_start":536,"line_end":536,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995079,"byte_end":9995109,"line_start":537,"line_end":537,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995114,"byte_end":9995127,"line_start":538,"line_end":538,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995132,"byte_end":9995141,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995146,"byte_end":9995151,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995156,"byte_end":9995159,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995164,"byte_end":9995205,"line_start":542,"line_end":542,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995210,"byte_end":9995220,"line_start":543,"line_end":543,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995225,"byte_end":9995309,"line_start":544,"line_end":544,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995314,"byte_end":9995341,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995346,"byte_end":9995389,"line_start":546,"line_end":546,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995394,"byte_end":9995403,"line_start":547,"line_end":547,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995408,"byte_end":9995413,"line_start":548,"line_end":548,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9995418,"byte_end":9995425,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997955,"byte_end":9997967,"line_start":612,"line_end":612,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996125,"byte_end":9996209,"line_start":573,"line_end":573,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996214,"byte_end":9996308,"line_start":574,"line_end":574,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996313,"byte_end":9996316,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996321,"byte_end":9996415,"line_start":576,"line_end":576,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996420,"byte_end":9996514,"line_start":577,"line_end":577,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996519,"byte_end":9996576,"line_start":578,"line_end":578,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996581,"byte_end":9996584,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996589,"byte_end":9996663,"line_start":580,"line_end":580,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996668,"byte_end":9996745,"line_start":581,"line_end":581,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996750,"byte_end":9996820,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996825,"byte_end":9996901,"line_start":583,"line_end":583,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996906,"byte_end":9996965,"line_start":584,"line_end":584,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996970,"byte_end":9996973,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9996978,"byte_end":9997048,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997053,"byte_end":9997128,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997133,"byte_end":9997205,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997210,"byte_end":9997285,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997290,"byte_end":9997311,"line_start":590,"line_end":590,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997316,"byte_end":9997319,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997324,"byte_end":9997358,"line_start":592,"line_end":592,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997363,"byte_end":9997397,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997402,"byte_end":9997436,"line_start":594,"line_end":594,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997441,"byte_end":9997473,"line_start":595,"line_end":595,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997478,"byte_end":9997481,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997486,"byte_end":9997500,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997505,"byte_end":9997508,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997513,"byte_end":9997520,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997525,"byte_end":9997574,"line_start":600,"line_end":600,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997579,"byte_end":9997623,"line_start":601,"line_end":601,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997628,"byte_end":9997631,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997636,"byte_end":9997666,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997671,"byte_end":9997701,"line_start":604,"line_end":604,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997706,"byte_end":9997709,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997714,"byte_end":9997792,"line_start":606,"line_end":606,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997797,"byte_end":9997823,"line_start":607,"line_end":607,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997828,"byte_end":9997831,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997836,"byte_end":9997899,"line_start":609,"line_end":609,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997904,"byte_end":9997931,"line_start":610,"line_end":610,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9997936,"byte_end":9997943,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000267,"byte_end":10000282,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9998565,"byte_end":9998661,"line_start":632,"line_end":632,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9998666,"byte_end":9998760,"line_start":633,"line_end":633,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9998765,"byte_end":9998836,"line_start":634,"line_end":634,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9998841,"byte_end":9998844,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9998849,"byte_end":9998944,"line_start":636,"line_end":636,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9998949,"byte_end":9999040,"line_start":637,"line_end":637,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999045,"byte_end":9999058,"line_start":638,"line_end":638,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999063,"byte_end":9999066,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999071,"byte_end":9999156,"line_start":640,"line_end":640,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999161,"byte_end":9999192,"line_start":641,"line_end":641,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999197,"byte_end":9999200,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999205,"byte_end":9999242,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999247,"byte_end":9999250,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999255,"byte_end":9999343,"line_start":645,"line_end":645,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999348,"byte_end":9999369,"line_start":646,"line_end":646,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999374,"byte_end":9999377,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999382,"byte_end":9999414,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999419,"byte_end":9999451,"line_start":649,"line_end":649,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999456,"byte_end":9999488,"line_start":650,"line_end":650,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999493,"byte_end":9999525,"line_start":651,"line_end":651,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999530,"byte_end":9999562,"line_start":652,"line_end":652,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999567,"byte_end":9999599,"line_start":653,"line_end":653,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999604,"byte_end":9999635,"line_start":654,"line_end":654,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999640,"byte_end":9999643,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999648,"byte_end":9999662,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999667,"byte_end":9999670,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999675,"byte_end":9999682,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999687,"byte_end":9999714,"line_start":659,"line_end":659,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999719,"byte_end":9999783,"line_start":660,"line_end":660,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999788,"byte_end":9999832,"line_start":661,"line_end":661,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999837,"byte_end":9999840,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999845,"byte_end":9999875,"line_start":663,"line_end":663,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999880,"byte_end":9999883,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999888,"byte_end":9999918,"line_start":665,"line_end":665,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999923,"byte_end":9999960,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9999965,"byte_end":10000035,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000040,"byte_end":10000112,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000117,"byte_end":10000124,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000176,"byte_end":10000196,"line_start":671,"line_end":671,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000201,"byte_end":10000255,"line_start":672,"line_end":672,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003051,"byte_end":10003071,"line_start":750,"line_end":750,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000625,"byte_end":10000721,"line_start":687,"line_end":687,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000726,"byte_end":10000820,"line_start":688,"line_end":688,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000825,"byte_end":10000896,"line_start":689,"line_end":689,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000901,"byte_end":10000904,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10000909,"byte_end":10001003,"line_start":691,"line_end":691,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001008,"byte_end":10001103,"line_start":692,"line_end":692,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001108,"byte_end":10001198,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001203,"byte_end":10001287,"line_start":694,"line_end":694,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001292,"byte_end":10001295,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001300,"byte_end":10001385,"line_start":696,"line_end":696,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001390,"byte_end":10001421,"line_start":697,"line_end":697,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001426,"byte_end":10001429,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001434,"byte_end":10001482,"line_start":699,"line_end":699,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001487,"byte_end":10001490,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001495,"byte_end":10001537,"line_start":701,"line_end":701,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001542,"byte_end":10001545,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001550,"byte_end":10001648,"line_start":703,"line_end":703,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001653,"byte_end":10001674,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001679,"byte_end":10001682,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001687,"byte_end":10001719,"line_start":706,"line_end":706,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001724,"byte_end":10001756,"line_start":707,"line_end":707,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001761,"byte_end":10001793,"line_start":708,"line_end":708,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001798,"byte_end":10001830,"line_start":709,"line_end":709,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001835,"byte_end":10001867,"line_start":710,"line_end":710,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001872,"byte_end":10001904,"line_start":711,"line_end":711,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001909,"byte_end":10001940,"line_start":712,"line_end":712,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001945,"byte_end":10001948,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001953,"byte_end":10001967,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001972,"byte_end":10001975,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001980,"byte_end":10001987,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10001992,"byte_end":10002019,"line_start":717,"line_end":717,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002024,"byte_end":10002088,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002093,"byte_end":10002137,"line_start":719,"line_end":719,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002142,"byte_end":10002145,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002150,"byte_end":10002180,"line_start":721,"line_end":721,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002185,"byte_end":10002215,"line_start":722,"line_end":722,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002220,"byte_end":10002223,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002228,"byte_end":10002263,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002268,"byte_end":10002308,"line_start":725,"line_end":725,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002313,"byte_end":10002323,"line_start":726,"line_end":726,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002328,"byte_end":10002391,"line_start":727,"line_end":727,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002396,"byte_end":10002418,"line_start":728,"line_end":728,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002423,"byte_end":10002447,"line_start":729,"line_end":729,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002452,"byte_end":10002474,"line_start":730,"line_end":730,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002479,"byte_end":10002492,"line_start":731,"line_end":731,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002497,"byte_end":10002522,"line_start":732,"line_end":732,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002527,"byte_end":10002561,"line_start":733,"line_end":733,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002566,"byte_end":10002596,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002601,"byte_end":10002614,"line_start":735,"line_end":735,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002619,"byte_end":10002628,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002633,"byte_end":10002638,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002643,"byte_end":10002646,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002651,"byte_end":10002692,"line_start":739,"line_end":739,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002697,"byte_end":10002707,"line_start":740,"line_end":740,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002712,"byte_end":10002787,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002792,"byte_end":10002819,"line_start":742,"line_end":742,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002824,"byte_end":10002867,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002872,"byte_end":10002881,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002886,"byte_end":10002891,"line_start":745,"line_end":745,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002896,"byte_end":10002903,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002955,"byte_end":10002975,"line_start":748,"line_end":748,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10002980,"byte_end":10003039,"line_start":749,"line_end":749,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004150,"byte_end":10004159,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003419,"byte_end":10003458,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003463,"byte_end":10003466,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003471,"byte_end":10003565,"line_start":766,"line_end":766,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003570,"byte_end":10003626,"line_start":767,"line_end":767,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003631,"byte_end":10003634,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003639,"byte_end":10003729,"line_start":769,"line_end":769,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003734,"byte_end":10003748,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003753,"byte_end":10003756,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003761,"byte_end":10003775,"line_start":772,"line_end":772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003780,"byte_end":10003783,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003788,"byte_end":10003795,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003800,"byte_end":10003857,"line_start":775,"line_end":775,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003862,"byte_end":10003906,"line_start":776,"line_end":776,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003911,"byte_end":10003914,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003919,"byte_end":10003979,"line_start":778,"line_end":778,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10003984,"byte_end":10004014,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004019,"byte_end":10004074,"line_start":780,"line_end":780,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004079,"byte_end":10004126,"line_start":781,"line_end":781,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004131,"byte_end":10004138,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005058,"byte_end":10005066,"line_start":806,"line_end":806,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004330,"byte_end":10004368,"line_start":787,"line_end":787,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004373,"byte_end":10004376,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004381,"byte_end":10004474,"line_start":789,"line_end":789,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004479,"byte_end":10004535,"line_start":790,"line_end":790,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004540,"byte_end":10004543,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004548,"byte_end":10004638,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004643,"byte_end":10004657,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004662,"byte_end":10004665,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004670,"byte_end":10004684,"line_start":795,"line_end":795,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004689,"byte_end":10004692,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004697,"byte_end":10004704,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004709,"byte_end":10004766,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004771,"byte_end":10004815,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004820,"byte_end":10004823,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004828,"byte_end":10004888,"line_start":801,"line_end":801,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004893,"byte_end":10004923,"line_start":802,"line_end":802,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004928,"byte_end":10004982,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10004987,"byte_end":10005034,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005039,"byte_end":10005046,"line_start":805,"line_end":805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005966,"byte_end":10005975,"line_start":829,"line_end":829,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005235,"byte_end":10005274,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005279,"byte_end":10005282,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005287,"byte_end":10005381,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005386,"byte_end":10005442,"line_start":813,"line_end":813,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005447,"byte_end":10005450,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005455,"byte_end":10005545,"line_start":815,"line_end":815,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005550,"byte_end":10005564,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005569,"byte_end":10005572,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005577,"byte_end":10005591,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005596,"byte_end":10005599,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005604,"byte_end":10005611,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005616,"byte_end":10005673,"line_start":821,"line_end":821,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005678,"byte_end":10005722,"line_start":822,"line_end":822,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005727,"byte_end":10005730,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005735,"byte_end":10005795,"line_start":824,"line_end":824,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005800,"byte_end":10005830,"line_start":825,"line_end":825,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005835,"byte_end":10005890,"line_start":826,"line_end":826,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005895,"byte_end":10005942,"line_start":827,"line_end":827,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10005947,"byte_end":10005954,"line_start":828,"line_end":828,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007272,"byte_end":10007282,"line_start":867,"line_end":867,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006145,"byte_end":10006180,"line_start":833,"line_end":833,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006185,"byte_end":10006188,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006193,"byte_end":10006282,"line_start":835,"line_end":835,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006287,"byte_end":10006373,"line_start":836,"line_end":836,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006378,"byte_end":10006413,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006418,"byte_end":10006421,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006426,"byte_end":10006438,"line_start":839,"line_end":839,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006443,"byte_end":10006446,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006451,"byte_end":10006510,"line_start":841,"line_end":841,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006515,"byte_end":10006518,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006523,"byte_end":10006535,"line_start":843,"line_end":843,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006540,"byte_end":10006543,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006548,"byte_end":10006635,"line_start":845,"line_end":845,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006640,"byte_end":10006673,"line_start":846,"line_end":846,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006678,"byte_end":10006681,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006686,"byte_end":10006700,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006705,"byte_end":10006708,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006713,"byte_end":10006724,"line_start":850,"line_end":850,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006729,"byte_end":10006748,"line_start":851,"line_end":851,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006753,"byte_end":10006787,"line_start":852,"line_end":852,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006792,"byte_end":10006818,"line_start":853,"line_end":853,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006823,"byte_end":10006850,"line_start":854,"line_end":854,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006855,"byte_end":10006860,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006865,"byte_end":10006868,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006873,"byte_end":10006906,"line_start":857,"line_end":857,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006911,"byte_end":10006939,"line_start":858,"line_end":858,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10006944,"byte_end":10007038,"line_start":859,"line_end":859,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007043,"byte_end":10007090,"line_start":860,"line_end":860,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007095,"byte_end":10007115,"line_start":861,"line_end":861,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007120,"byte_end":10007199,"line_start":862,"line_end":862,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007204,"byte_end":10007217,"line_start":863,"line_end":863,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007222,"byte_end":10007231,"line_start":864,"line_end":864,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007236,"byte_end":10007241,"line_start":865,"line_end":865,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007246,"byte_end":10007253,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010299,"byte_end":10010306,"line_start":980,"line_end":980,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010236,"byte_end":10010288,"line_start":979,"line_end":979,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010398,"byte_end":10010408,"line_start":982,"line_end":982,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010336,"byte_end":10010390,"line_start":981,"line_end":981,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010715,"byte_end":10010725,"line_start":990,"line_end":990,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010430,"byte_end":10010494,"line_start":984,"line_end":984,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010499,"byte_end":10010502,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010507,"byte_end":10010519,"line_start":986,"line_end":986,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010524,"byte_end":10010527,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010532,"byte_end":10010627,"line_start":988,"line_end":988,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010632,"byte_end":10010700,"line_start":989,"line_end":989,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010991,"byte_end":10010996,"line_start":999,"line_end":999,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010751,"byte_end":10010786,"line_start":993,"line_end":993,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010787,"byte_end":10010790,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010791,"byte_end":10010833,"line_start":995,"line_end":995,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010834,"byte_end":10010837,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010838,"byte_end":10010936,"line_start":997,"line_end":997,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10010937,"byte_end":10010979,"line_start":998,"line_end":998,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012394,"byte_end":10012402,"line_start":1050,"line_end":1050,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011646,"byte_end":10011696,"line_start":1028,"line_end":1028,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011701,"byte_end":10011704,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011709,"byte_end":10011801,"line_start":1030,"line_end":1030,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011806,"byte_end":10011899,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011904,"byte_end":10011929,"line_start":1032,"line_end":1032,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011934,"byte_end":10011937,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011942,"byte_end":10011954,"line_start":1034,"line_end":1034,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011959,"byte_end":10011962,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011967,"byte_end":10012011,"line_start":1036,"line_end":1036,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012016,"byte_end":10012019,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012024,"byte_end":10012036,"line_start":1038,"line_end":1038,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012041,"byte_end":10012044,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012049,"byte_end":10012145,"line_start":1040,"line_end":1040,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012150,"byte_end":10012197,"line_start":1041,"line_end":1041,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012202,"byte_end":10012205,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012210,"byte_end":10012224,"line_start":1043,"line_end":1043,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012229,"byte_end":10012232,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012237,"byte_end":10012244,"line_start":1045,"line_end":1045,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012249,"byte_end":10012280,"line_start":1046,"line_end":1046,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012285,"byte_end":10012288,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012293,"byte_end":10012363,"line_start":1048,"line_end":1048,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012368,"byte_end":10012375,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012800,"byte_end":10012808,"line_start":1067,"line_end":1067,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012537,"byte_end":10012581,"line_start":1056,"line_end":1056,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012586,"byte_end":10012589,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012594,"byte_end":10012608,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012613,"byte_end":10012616,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012621,"byte_end":10012628,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012633,"byte_end":10012664,"line_start":1061,"line_end":1061,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012669,"byte_end":10012672,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012677,"byte_end":10012706,"line_start":1063,"line_end":1063,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012711,"byte_end":10012746,"line_start":1064,"line_end":1064,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012751,"byte_end":10012776,"line_start":1065,"line_end":1065,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012781,"byte_end":10012788,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013197,"byte_end":10013200,"line_start":1082,"line_end":1082,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10012967,"byte_end":10013048,"line_start":1073,"line_end":1073,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013053,"byte_end":10013056,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013061,"byte_end":10013075,"line_start":1075,"line_end":1075,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013080,"byte_end":10013083,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013088,"byte_end":10013095,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013100,"byte_end":10013131,"line_start":1078,"line_end":1078,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013136,"byte_end":10013139,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013144,"byte_end":10013173,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013178,"byte_end":10013185,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013539,"byte_end":10013543,"line_start":1097,"line_end":1097,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013301,"byte_end":10013382,"line_start":1088,"line_end":1088,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013387,"byte_end":10013390,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013395,"byte_end":10013409,"line_start":1090,"line_end":1090,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013414,"byte_end":10013417,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013422,"byte_end":10013429,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013434,"byte_end":10013465,"line_start":1093,"line_end":1093,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013470,"byte_end":10013473,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013478,"byte_end":10013515,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013520,"byte_end":10013527,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013964,"byte_end":10013975,"line_start":1113,"line_end":1113,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013635,"byte_end":10013684,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013689,"byte_end":10013692,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013697,"byte_end":10013711,"line_start":1103,"line_end":1103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013716,"byte_end":10013719,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013724,"byte_end":10013731,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013736,"byte_end":10013784,"line_start":1106,"line_end":1106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013789,"byte_end":10013792,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013797,"byte_end":10013826,"line_start":1108,"line_end":1108,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013831,"byte_end":10013861,"line_start":1109,"line_end":1109,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013866,"byte_end":10013899,"line_start":1110,"line_end":1110,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013904,"byte_end":10013911,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013916,"byte_end":10013952,"line_start":1112,"line_end":1112,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014295,"byte_end":10014298,"line_start":1126,"line_end":1126,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014087,"byte_end":10014133,"line_start":1117,"line_end":1117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014138,"byte_end":10014141,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014146,"byte_end":10014160,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014165,"byte_end":10014168,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014173,"byte_end":10014180,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014185,"byte_end":10014216,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014221,"byte_end":10014224,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014229,"byte_end":10014271,"line_start":1124,"line_end":1124,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014276,"byte_end":10014283,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014771,"byte_end":10014779,"line_start":1144,"line_end":1144,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014394,"byte_end":10014484,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014489,"byte_end":10014527,"line_start":1132,"line_end":1132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014532,"byte_end":10014535,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014540,"byte_end":10014554,"line_start":1134,"line_end":1134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014559,"byte_end":10014562,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014567,"byte_end":10014574,"line_start":1136,"line_end":1136,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014579,"byte_end":10014610,"line_start":1137,"line_end":1137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014615,"byte_end":10014618,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014623,"byte_end":10014652,"line_start":1139,"line_end":1139,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014657,"byte_end":10014684,"line_start":1140,"line_end":1140,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014689,"byte_end":10014715,"line_start":1141,"line_end":1141,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014720,"byte_end":10014747,"line_start":1142,"line_end":1142,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014752,"byte_end":10014759,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017241,"byte_end":10017247,"line_start":1247,"line_end":1247,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016962,"byte_end":10017015,"line_start":1241,"line_end":1241,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017016,"byte_end":10017019,"line_start":1242,"line_end":1242,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017020,"byte_end":10017083,"line_start":1243,"line_end":1243,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017084,"byte_end":10017087,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017088,"byte_end":10017186,"line_start":1245,"line_end":1245,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017187,"byte_end":10017229,"line_start":1246,"line_end":1246,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018369,"byte_end":10018375,"line_start":1295,"line_end":1295,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017899,"byte_end":10017959,"line_start":1279,"line_end":1279,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017964,"byte_end":10017967,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017972,"byte_end":10017986,"line_start":1281,"line_end":1281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017991,"byte_end":10017994,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017999,"byte_end":10018006,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018011,"byte_end":10018067,"line_start":1284,"line_end":1284,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018072,"byte_end":10018116,"line_start":1285,"line_end":1285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018121,"byte_end":10018124,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018129,"byte_end":10018158,"line_start":1287,"line_end":1287,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018163,"byte_end":10018193,"line_start":1288,"line_end":1288,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018198,"byte_end":10018226,"line_start":1289,"line_end":1289,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018231,"byte_end":10018234,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018239,"byte_end":10018269,"line_start":1291,"line_end":1291,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018274,"byte_end":10018308,"line_start":1292,"line_end":1292,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018313,"byte_end":10018345,"line_start":1293,"line_end":1293,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018350,"byte_end":10018357,"line_start":1294,"line_end":1294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018752,"byte_end":10018756,"line_start":1312,"line_end":1312,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018536,"byte_end":10018567,"line_start":1302,"line_end":1302,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018572,"byte_end":10018575,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018580,"byte_end":10018594,"line_start":1304,"line_end":1304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018599,"byte_end":10018602,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018607,"byte_end":10018614,"line_start":1306,"line_end":1306,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018619,"byte_end":10018651,"line_start":1307,"line_end":1307,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018656,"byte_end":10018659,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018664,"byte_end":10018698,"line_start":1309,"line_end":1309,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018703,"byte_end":10018728,"line_start":1310,"line_end":1310,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018733,"byte_end":10018740,"line_start":1311,"line_end":1311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019313,"byte_end":10019320,"line_start":1333,"line_end":1333,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018871,"byte_end":10018913,"line_start":1319,"line_end":1319,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018918,"byte_end":10018921,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018926,"byte_end":10018940,"line_start":1321,"line_end":1321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018945,"byte_end":10018948,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018953,"byte_end":10018960,"line_start":1323,"line_end":1323,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018965,"byte_end":10019021,"line_start":1324,"line_end":1324,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019026,"byte_end":10019070,"line_start":1325,"line_end":1325,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019075,"byte_end":10019078,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019083,"byte_end":10019110,"line_start":1327,"line_end":1327,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019115,"byte_end":10019145,"line_start":1328,"line_end":1328,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019150,"byte_end":10019195,"line_start":1329,"line_end":1329,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019200,"byte_end":10019238,"line_start":1330,"line_end":1330,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019243,"byte_end":10019289,"line_start":1331,"line_end":1331,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019294,"byte_end":10019301,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020600,"byte_end":10020605,"line_start":1369,"line_end":1369,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019420,"byte_end":10019449,"line_start":1338,"line_end":1338,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019454,"byte_end":10019457,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019462,"byte_end":10019540,"line_start":1340,"line_end":1340,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019545,"byte_end":10019548,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019553,"byte_end":10019565,"line_start":1342,"line_end":1342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019570,"byte_end":10019573,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019578,"byte_end":10019663,"line_start":1344,"line_end":1344,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019668,"byte_end":10019671,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019676,"byte_end":10019767,"line_start":1346,"line_end":1346,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019772,"byte_end":10019821,"line_start":1347,"line_end":1347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019826,"byte_end":10019829,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019834,"byte_end":10019906,"line_start":1349,"line_end":1349,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019911,"byte_end":10019986,"line_start":1350,"line_end":1350,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019991,"byte_end":10019994,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10019999,"byte_end":10020092,"line_start":1352,"line_end":1352,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020097,"byte_end":10020190,"line_start":1353,"line_end":1353,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020195,"byte_end":10020233,"line_start":1354,"line_end":1354,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020238,"byte_end":10020241,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020246,"byte_end":10020260,"line_start":1356,"line_end":1356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020265,"byte_end":10020268,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020273,"byte_end":10020280,"line_start":1358,"line_end":1358,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020285,"byte_end":10020334,"line_start":1359,"line_end":1359,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020339,"byte_end":10020383,"line_start":1360,"line_end":1360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020388,"byte_end":10020391,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020396,"byte_end":10020426,"line_start":1362,"line_end":1362,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020431,"byte_end":10020461,"line_start":1363,"line_end":1363,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020466,"byte_end":10020500,"line_start":1364,"line_end":1364,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020505,"byte_end":10020517,"line_start":1365,"line_end":1365,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020522,"byte_end":10020559,"line_start":1366,"line_end":1366,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020564,"byte_end":10020569,"line_start":1367,"line_end":1367,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020574,"byte_end":10020581,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021871,"byte_end":10021880,"line_start":1410,"line_end":1410,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020711,"byte_end":10020740,"line_start":1374,"line_end":1374,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020745,"byte_end":10020748,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020753,"byte_end":10020839,"line_start":1376,"line_end":1376,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020844,"byte_end":10020847,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020852,"byte_end":10020864,"line_start":1378,"line_end":1378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020869,"byte_end":10020872,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020877,"byte_end":10020972,"line_start":1380,"line_end":1380,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10020977,"byte_end":10021014,"line_start":1381,"line_end":1381,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021019,"byte_end":10021022,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021027,"byte_end":10021116,"line_start":1383,"line_end":1383,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021121,"byte_end":10021124,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021129,"byte_end":10021203,"line_start":1385,"line_end":1385,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021208,"byte_end":10021211,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021216,"byte_end":10021230,"line_start":1387,"line_end":1387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021235,"byte_end":10021238,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021243,"byte_end":10021250,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021255,"byte_end":10021304,"line_start":1390,"line_end":1390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021309,"byte_end":10021353,"line_start":1391,"line_end":1391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021358,"byte_end":10021361,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021366,"byte_end":10021408,"line_start":1393,"line_end":1393,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021413,"byte_end":10021443,"line_start":1394,"line_end":1394,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021448,"byte_end":10021451,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021456,"byte_end":10021494,"line_start":1396,"line_end":1396,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021499,"byte_end":10021511,"line_start":1397,"line_end":1397,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021516,"byte_end":10021546,"line_start":1398,"line_end":1398,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021551,"byte_end":10021581,"line_start":1399,"line_end":1399,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021586,"byte_end":10021627,"line_start":1400,"line_end":1400,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021632,"byte_end":10021650,"line_start":1401,"line_end":1401,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021655,"byte_end":10021699,"line_start":1402,"line_end":1402,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021704,"byte_end":10021709,"line_start":1403,"line_end":1403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021714,"byte_end":10021717,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021722,"byte_end":10021756,"line_start":1405,"line_end":1405,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021761,"byte_end":10021773,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021778,"byte_end":10021830,"line_start":1407,"line_end":1407,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021835,"byte_end":10021840,"line_start":1408,"line_end":1408,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021845,"byte_end":10021852,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023213,"byte_end":10023219,"line_start":1446,"line_end":1446,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10021998,"byte_end":10022038,"line_start":1415,"line_end":1415,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022043,"byte_end":10022046,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022051,"byte_end":10022146,"line_start":1417,"line_end":1417,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022151,"byte_end":10022154,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022159,"byte_end":10022171,"line_start":1419,"line_end":1419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022176,"byte_end":10022179,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022184,"byte_end":10022269,"line_start":1421,"line_end":1421,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022274,"byte_end":10022277,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022282,"byte_end":10022373,"line_start":1423,"line_end":1423,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022378,"byte_end":10022427,"line_start":1424,"line_end":1424,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022432,"byte_end":10022435,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022440,"byte_end":10022512,"line_start":1426,"line_end":1426,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022517,"byte_end":10022592,"line_start":1427,"line_end":1427,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022597,"byte_end":10022600,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022605,"byte_end":10022698,"line_start":1429,"line_end":1429,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022703,"byte_end":10022796,"line_start":1430,"line_end":1430,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022801,"byte_end":10022839,"line_start":1431,"line_end":1431,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022844,"byte_end":10022847,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022852,"byte_end":10022866,"line_start":1433,"line_end":1433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022871,"byte_end":10022874,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022879,"byte_end":10022886,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022891,"byte_end":10022940,"line_start":1436,"line_end":1436,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022945,"byte_end":10022989,"line_start":1437,"line_end":1437,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10022994,"byte_end":10022997,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023002,"byte_end":10023032,"line_start":1439,"line_end":1439,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023037,"byte_end":10023067,"line_start":1440,"line_end":1440,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023072,"byte_end":10023106,"line_start":1441,"line_end":1441,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023111,"byte_end":10023123,"line_start":1442,"line_end":1442,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023128,"byte_end":10023172,"line_start":1443,"line_end":1443,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023177,"byte_end":10023182,"line_start":1444,"line_end":1444,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023187,"byte_end":10023194,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024079,"byte_end":10024089,"line_start":1479,"line_end":1479,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023409,"byte_end":10023444,"line_start":1455,"line_end":1455,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023449,"byte_end":10023452,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023457,"byte_end":10023469,"line_start":1457,"line_end":1457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023474,"byte_end":10023477,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023482,"byte_end":10023541,"line_start":1459,"line_end":1459,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023546,"byte_end":10023549,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023554,"byte_end":10023566,"line_start":1461,"line_end":1461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023571,"byte_end":10023574,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023579,"byte_end":10023666,"line_start":1463,"line_end":1463,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023671,"byte_end":10023704,"line_start":1464,"line_end":1464,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023709,"byte_end":10023712,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023717,"byte_end":10023731,"line_start":1466,"line_end":1466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023736,"byte_end":10023739,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023744,"byte_end":10023751,"line_start":1468,"line_end":1468,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023756,"byte_end":10023805,"line_start":1469,"line_end":1469,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023810,"byte_end":10023854,"line_start":1470,"line_end":1470,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023859,"byte_end":10023862,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023867,"byte_end":10023897,"line_start":1472,"line_end":1472,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023902,"byte_end":10023914,"line_start":1473,"line_end":1473,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023919,"byte_end":10023961,"line_start":1474,"line_end":1474,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10023966,"byte_end":10024004,"line_start":1475,"line_end":1475,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024009,"byte_end":10024038,"line_start":1476,"line_end":1476,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024043,"byte_end":10024048,"line_start":1477,"line_end":1477,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024053,"byte_end":10024060,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024649,"byte_end":10024652,"line_start":1497,"line_end":1497,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024241,"byte_end":10024287,"line_start":1484,"line_end":1484,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024292,"byte_end":10024295,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024300,"byte_end":10024314,"line_start":1486,"line_end":1486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024319,"byte_end":10024322,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024327,"byte_end":10024334,"line_start":1488,"line_end":1488,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024339,"byte_end":10024395,"line_start":1489,"line_end":1489,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024400,"byte_end":10024444,"line_start":1490,"line_end":1490,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024449,"byte_end":10024452,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024457,"byte_end":10024519,"line_start":1492,"line_end":1492,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024524,"byte_end":10024554,"line_start":1493,"line_end":1493,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024559,"byte_end":10024593,"line_start":1494,"line_end":1494,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024598,"byte_end":10024625,"line_start":1495,"line_end":1495,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024630,"byte_end":10024637,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025326,"byte_end":10025334,"line_start":1520,"line_end":1520,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024748,"byte_end":10024838,"line_start":1502,"line_end":1502,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024843,"byte_end":10024881,"line_start":1503,"line_end":1503,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024886,"byte_end":10024889,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024894,"byte_end":10024908,"line_start":1505,"line_end":1505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024913,"byte_end":10024916,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024921,"byte_end":10024928,"line_start":1507,"line_end":1507,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024933,"byte_end":10024982,"line_start":1508,"line_end":1508,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10024987,"byte_end":10025031,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025036,"byte_end":10025039,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025044,"byte_end":10025074,"line_start":1511,"line_end":1511,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025079,"byte_end":10025109,"line_start":1512,"line_end":1512,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025114,"byte_end":10025149,"line_start":1513,"line_end":1513,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025154,"byte_end":10025182,"line_start":1514,"line_end":1514,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025187,"byte_end":10025190,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025195,"byte_end":10025223,"line_start":1516,"line_end":1516,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025228,"byte_end":10025256,"line_start":1517,"line_end":1517,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025261,"byte_end":10025302,"line_start":1518,"line_end":1518,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025307,"byte_end":10025314,"line_start":1519,"line_end":1519,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028263,"byte_end":10028272,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028214,"byte_end":10028251,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028579,"byte_end":10028582,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028539,"byte_end":10028567,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028687,"byte_end":10028695,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028630,"byte_end":10028675,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029363,"byte_end":10029374,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029315,"byte_end":10029351,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029485,"byte_end":10029488,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029439,"byte_end":10029459,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029464,"byte_end":10029473,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029626,"byte_end":10029635,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029557,"byte_end":10029600,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029605,"byte_end":10029614,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029791,"byte_end":10029800,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029709,"byte_end":10029765,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029770,"byte_end":10029779,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050452,"byte_end":10050457,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048736,"byte_end":10048785,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048786,"byte_end":10048789,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048790,"byte_end":10048803,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048804,"byte_end":10048807,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048808,"byte_end":10048887,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048888,"byte_end":10048891,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048892,"byte_end":10048899,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048900,"byte_end":10048933,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048934,"byte_end":10048937,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10048938,"byte_end":10049036,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049037,"byte_end":10049129,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049130,"byte_end":10049160,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049161,"byte_end":10049168,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049169,"byte_end":10049172,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049173,"byte_end":10049249,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049250,"byte_end":10049253,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049254,"byte_end":10049281,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049282,"byte_end":10049285,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049286,"byte_end":10049373,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049374,"byte_end":10049390,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049391,"byte_end":10049394,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049395,"byte_end":10049402,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049403,"byte_end":10049452,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049453,"byte_end":10049497,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049498,"byte_end":10049501,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049502,"byte_end":10049540,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049541,"byte_end":10049570,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049571,"byte_end":10049574,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049575,"byte_end":10049605,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049606,"byte_end":10049636,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049637,"byte_end":10049640,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049641,"byte_end":10049715,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049716,"byte_end":10049750,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049751,"byte_end":10049754,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049755,"byte_end":10049806,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049807,"byte_end":10049853,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049854,"byte_end":10049897,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049898,"byte_end":10049903,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049904,"byte_end":10049911,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049912,"byte_end":10049915,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049916,"byte_end":10049937,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049938,"byte_end":10049941,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10049942,"byte_end":10050037,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050038,"byte_end":10050136,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050137,"byte_end":10050156,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050157,"byte_end":10050160,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050161,"byte_end":10050168,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050169,"byte_end":10050202,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050203,"byte_end":10050206,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050207,"byte_end":10050237,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050238,"byte_end":10050268,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050269,"byte_end":10050301,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050302,"byte_end":10050319,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050320,"byte_end":10050352,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050353,"byte_end":10050370,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050371,"byte_end":10050404,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050405,"byte_end":10050412,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050413,"byte_end":10050416,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050417,"byte_end":10050440,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051432,"byte_end":10051437,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050516,"byte_end":10050605,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050610,"byte_end":10050635,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050640,"byte_end":10050643,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050648,"byte_end":10050741,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050746,"byte_end":10050834,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050839,"byte_end":10050929,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050934,"byte_end":10050974,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050979,"byte_end":10050982,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050987,"byte_end":10051077,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051082,"byte_end":10051173,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051178,"byte_end":10051265,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051270,"byte_end":10051290,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051295,"byte_end":10051298,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051303,"byte_end":10051390,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051395,"byte_end":10051420,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055737,"byte_end":10055752,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051601,"byte_end":10051690,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051695,"byte_end":10051720,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051725,"byte_end":10051728,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051733,"byte_end":10051826,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051831,"byte_end":10051919,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10051924,"byte_end":10052014,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052019,"byte_end":10052059,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052064,"byte_end":10052067,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052072,"byte_end":10052162,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052167,"byte_end":10052258,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052263,"byte_end":10052350,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052355,"byte_end":10052375,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052380,"byte_end":10052383,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052388,"byte_end":10052475,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052480,"byte_end":10052505,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052510,"byte_end":10052513,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052518,"byte_end":10052530,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052535,"byte_end":10052538,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052543,"byte_end":10052635,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052640,"byte_end":10052727,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052732,"byte_end":10052744,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052749,"byte_end":10052752,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052757,"byte_end":10052764,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052769,"byte_end":10052802,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052807,"byte_end":10052810,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052815,"byte_end":10052845,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052850,"byte_end":10052877,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052882,"byte_end":10052894,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052899,"byte_end":10052974,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10052979,"byte_end":10053018,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053023,"byte_end":10053059,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053064,"byte_end":10053075,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053080,"byte_end":10053085,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053090,"byte_end":10053097,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053102,"byte_end":10053105,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053110,"byte_end":10053204,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053209,"byte_end":10053240,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053245,"byte_end":10053248,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053253,"byte_end":10053348,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053353,"byte_end":10053445,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053450,"byte_end":10053539,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053544,"byte_end":10053547,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053552,"byte_end":10053565,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053570,"byte_end":10053623,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053628,"byte_end":10053710,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053715,"byte_end":10053722,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053727,"byte_end":10053730,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053735,"byte_end":10053828,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053833,"byte_end":10053928,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053933,"byte_end":10053993,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10053998,"byte_end":10054001,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054006,"byte_end":10054020,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054025,"byte_end":10054028,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054033,"byte_end":10054119,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054124,"byte_end":10054218,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054223,"byte_end":10054319,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054324,"byte_end":10054416,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054421,"byte_end":10054477,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054482,"byte_end":10054485,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054490,"byte_end":10054497,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054502,"byte_end":10054558,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054563,"byte_end":10054607,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054612,"byte_end":10054615,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054620,"byte_end":10054651,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054656,"byte_end":10054659,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054664,"byte_end":10054741,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054746,"byte_end":10054777,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054782,"byte_end":10054785,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054790,"byte_end":10054820,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054825,"byte_end":10054855,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054860,"byte_end":10054863,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054868,"byte_end":10054945,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10054950,"byte_end":10055022,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055027,"byte_end":10055030,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055035,"byte_end":10055056,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055061,"byte_end":10055121,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055126,"byte_end":10055208,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055213,"byte_end":10055229,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055234,"byte_end":10055313,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055318,"byte_end":10055361,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055366,"byte_end":10055434,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055439,"byte_end":10055531,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055536,"byte_end":10055620,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055625,"byte_end":10055662,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055667,"byte_end":10055682,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055687,"byte_end":10055696,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055701,"byte_end":10055706,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055711,"byte_end":10055718,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059339,"byte_end":10059352,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10055991,"byte_end":10056084,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056089,"byte_end":10056141,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056146,"byte_end":10056149,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056154,"byte_end":10056247,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056252,"byte_end":10056342,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056347,"byte_end":10056436,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056441,"byte_end":10056495,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056500,"byte_end":10056503,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056508,"byte_end":10056601,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056606,"byte_end":10056699,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056704,"byte_end":10056797,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056802,"byte_end":10056833,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056838,"byte_end":10056841,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056846,"byte_end":10056935,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056940,"byte_end":10056965,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056970,"byte_end":10056973,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056978,"byte_end":10056990,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10056995,"byte_end":10056998,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057003,"byte_end":10057096,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057101,"byte_end":10057134,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057139,"byte_end":10057142,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057147,"byte_end":10057242,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057247,"byte_end":10057285,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057290,"byte_end":10057293,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057298,"byte_end":10057393,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057398,"byte_end":10057490,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057495,"byte_end":10057584,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057589,"byte_end":10057592,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057597,"byte_end":10057610,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057615,"byte_end":10057668,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057673,"byte_end":10057732,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057737,"byte_end":10057744,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057749,"byte_end":10057752,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057757,"byte_end":10057851,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057856,"byte_end":10057943,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10057948,"byte_end":10058008,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058013,"byte_end":10058016,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058021,"byte_end":10058035,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058040,"byte_end":10058043,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058048,"byte_end":10058134,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058139,"byte_end":10058233,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058238,"byte_end":10058334,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058339,"byte_end":10058431,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058436,"byte_end":10058492,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058497,"byte_end":10058500,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058505,"byte_end":10058512,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058517,"byte_end":10058573,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058578,"byte_end":10058622,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058627,"byte_end":10058630,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058635,"byte_end":10058666,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058671,"byte_end":10058674,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058679,"byte_end":10058756,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058761,"byte_end":10058792,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058797,"byte_end":10058800,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058805,"byte_end":10058835,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058840,"byte_end":10058870,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058875,"byte_end":10058878,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058883,"byte_end":10058960,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10058965,"byte_end":10059037,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059042,"byte_end":10059045,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059050,"byte_end":10059071,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059076,"byte_end":10059136,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059141,"byte_end":10059223,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059228,"byte_end":10059244,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059249,"byte_end":10059284,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059289,"byte_end":10059298,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059303,"byte_end":10059308,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059313,"byte_end":10059320,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060237,"byte_end":10060242,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059452,"byte_end":10059547,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059552,"byte_end":10059569,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059574,"byte_end":10059577,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059582,"byte_end":10059676,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059681,"byte_end":10059773,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059778,"byte_end":10059846,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059851,"byte_end":10059854,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059859,"byte_end":10059951,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059956,"byte_end":10059959,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059964,"byte_end":10059978,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059983,"byte_end":10059986,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10059991,"byte_end":10059998,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060003,"byte_end":10060036,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060041,"byte_end":10060044,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060049,"byte_end":10060079,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060084,"byte_end":10060109,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060114,"byte_end":10060178,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060183,"byte_end":10060190,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060195,"byte_end":10060213,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060218,"byte_end":10060225,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061404,"byte_end":10061409,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060366,"byte_end":10060417,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060422,"byte_end":10060425,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060430,"byte_end":10060520,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060525,"byte_end":10060619,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060624,"byte_end":10060718,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060723,"byte_end":10060775,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060780,"byte_end":10060783,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060788,"byte_end":10060881,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060886,"byte_end":10060889,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060894,"byte_end":10060908,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060913,"byte_end":10060916,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060921,"byte_end":10060928,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060933,"byte_end":10060982,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10060987,"byte_end":10061031,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061036,"byte_end":10061039,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061044,"byte_end":10061073,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061078,"byte_end":10061111,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061116,"byte_end":10061121,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061126,"byte_end":10061165,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061170,"byte_end":10061224,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061229,"byte_end":10061234,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061239,"byte_end":10061257,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061262,"byte_end":10061267,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061272,"byte_end":10061311,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061316,"byte_end":10061370,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061375,"byte_end":10061380,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061385,"byte_end":10061392,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062736,"byte_end":10062747,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061533,"byte_end":10061624,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061629,"byte_end":10061632,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061637,"byte_end":10061728,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061733,"byte_end":10061829,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061834,"byte_end":10061928,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061933,"byte_end":10061952,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061957,"byte_end":10061960,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10061965,"byte_end":10062059,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062064,"byte_end":10062106,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062111,"byte_end":10062114,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062119,"byte_end":10062133,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062138,"byte_end":10062141,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062146,"byte_end":10062153,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062158,"byte_end":10062207,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062212,"byte_end":10062256,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062261,"byte_end":10062281,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062286,"byte_end":10062314,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062319,"byte_end":10062322,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062327,"byte_end":10062356,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062361,"byte_end":10062394,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062399,"byte_end":10062404,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062409,"byte_end":10062448,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062453,"byte_end":10062507,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062512,"byte_end":10062517,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062522,"byte_end":10062589,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062594,"byte_end":10062599,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062604,"byte_end":10062643,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062648,"byte_end":10062702,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062707,"byte_end":10062712,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10062717,"byte_end":10062724,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063893,"byte_end":10063902,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063352,"byte_end":10063407,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063412,"byte_end":10063415,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063420,"byte_end":10063495,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063500,"byte_end":10063550,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063555,"byte_end":10063558,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063563,"byte_end":10063647,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063652,"byte_end":10063655,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063660,"byte_end":10063674,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063679,"byte_end":10063682,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063687,"byte_end":10063694,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063699,"byte_end":10063732,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063737,"byte_end":10063740,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063745,"byte_end":10063775,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063780,"byte_end":10063810,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063815,"byte_end":10063869,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10063874,"byte_end":10063881,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067201,"byte_end":10067212,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064312,"byte_end":10064399,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064400,"byte_end":10064403,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064404,"byte_end":10064499,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064500,"byte_end":10064589,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064590,"byte_end":10064593,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064594,"byte_end":10064687,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064688,"byte_end":10064725,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064726,"byte_end":10064729,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064730,"byte_end":10064826,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064827,"byte_end":10064830,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064831,"byte_end":10064843,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064844,"byte_end":10064847,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064848,"byte_end":10064938,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064939,"byte_end":10065006,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065007,"byte_end":10065010,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065011,"byte_end":10065025,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065026,"byte_end":10065029,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065030,"byte_end":10065037,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065038,"byte_end":10065087,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065088,"byte_end":10065133,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065134,"byte_end":10065137,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065138,"byte_end":10065165,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065166,"byte_end":10065169,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065170,"byte_end":10065182,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065183,"byte_end":10065238,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065239,"byte_end":10065285,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065286,"byte_end":10065289,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065290,"byte_end":10065364,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065365,"byte_end":10065415,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065416,"byte_end":10065419,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065420,"byte_end":10065449,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065450,"byte_end":10065506,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065507,"byte_end":10065518,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065519,"byte_end":10065522,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065523,"byte_end":10065604,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065605,"byte_end":10065610,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065611,"byte_end":10065618,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065619,"byte_end":10065622,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065623,"byte_end":10065717,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065718,"byte_end":10065721,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065722,"byte_end":10065816,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065817,"byte_end":10065902,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065903,"byte_end":10065906,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10065907,"byte_end":10066006,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066007,"byte_end":10066105,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066106,"byte_end":10066126,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066127,"byte_end":10066130,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066131,"byte_end":10066138,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066139,"byte_end":10066188,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066189,"byte_end":10066220,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066221,"byte_end":10066266,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066267,"byte_end":10066270,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066271,"byte_end":10066292,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066293,"byte_end":10066323,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066324,"byte_end":10066329,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066330,"byte_end":10066333,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066334,"byte_end":10066354,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066355,"byte_end":10066385,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066386,"byte_end":10066416,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066417,"byte_end":10066422,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066423,"byte_end":10066426,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066427,"byte_end":10066458,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066459,"byte_end":10066487,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066488,"byte_end":10066508,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066509,"byte_end":10066545,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066546,"byte_end":10066623,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066624,"byte_end":10066627,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066628,"byte_end":10066679,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066680,"byte_end":10066720,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066721,"byte_end":10066795,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066796,"byte_end":10066799,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066800,"byte_end":10066888,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066889,"byte_end":10066939,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066940,"byte_end":10066992,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10066993,"byte_end":10067021,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067022,"byte_end":10067025,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067026,"byte_end":10067058,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067059,"byte_end":10067076,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067077,"byte_end":10067090,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067091,"byte_end":10067100,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067101,"byte_end":10067106,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067107,"byte_end":10067114,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067115,"byte_end":10067118,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067119,"byte_end":10067148,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067149,"byte_end":10067176,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067177,"byte_end":10067186,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123532,"byte_end":10123535,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123486,"byte_end":10123514,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123515,"byte_end":10123524,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123660,"byte_end":10123669,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123591,"byte_end":10123642,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123643,"byte_end":10123652,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123779,"byte_end":10123796,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":10123730,"byte_end":10123771,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977702,"byte_end":9977722,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9979149,"byte_end":9979157,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982931,"byte_end":9982932,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986151,"byte_end":9986157,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986222,"byte_end":9986228,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986244,"byte_end":9986250,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986583,"byte_end":9986589,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007791,"byte_end":10007797,"line_start":882,"line_end":882,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008144,"byte_end":10008150,"line_start":894,"line_end":894,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008438,"byte_end":10008444,"line_start":902,"line_end":902,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008791,"byte_end":10008797,"line_start":913,"line_end":913,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008909,"byte_end":10008915,"line_start":919,"line_end":919,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009310,"byte_end":10009316,"line_start":936,"line_end":936,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009419,"byte_end":10009425,"line_start":942,"line_end":942,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009545,"byte_end":10009551,"line_start":948,"line_end":948,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009900,"byte_end":10009906,"line_start":963,"line_end":963,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011119,"byte_end":10011124,"line_start":1004,"line_end":1004,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011631,"byte_end":10011636,"line_start":1027,"line_end":1027,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013286,"byte_end":10013291,"line_start":1087,"line_end":1087,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014961,"byte_end":10014966,"line_start":1150,"line_end":1150,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015156,"byte_end":10015161,"line_start":1159,"line_end":1159,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015439,"byte_end":10015444,"line_start":1170,"line_end":1170,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015585,"byte_end":10015590,"line_start":1176,"line_end":1176,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015783,"byte_end":10015788,"line_start":1185,"line_end":1185,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015954,"byte_end":10015959,"line_start":1192,"line_end":1192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016049,"byte_end":10016054,"line_start":1198,"line_end":1198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016527,"byte_end":10016532,"line_start":1217,"line_end":1217,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016642,"byte_end":10016647,"line_start":1223,"line_end":1223,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016769,"byte_end":10016774,"line_start":1229,"line_end":1229,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016880,"byte_end":10016885,"line_start":1235,"line_end":1235,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017386,"byte_end":10017392,"line_start":1252,"line_end":1252,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017566,"byte_end":10017572,"line_start":1261,"line_end":1261,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017627,"byte_end":10017633,"line_start":1263,"line_end":1263,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017879,"byte_end":10017885,"line_start":1278,"line_end":1278,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018516,"byte_end":10018522,"line_start":1301,"line_end":1301,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025479,"byte_end":10025485,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026048,"byte_end":10026054,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026181,"byte_end":10026187,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026261,"byte_end":10026267,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026432,"byte_end":10026438,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026586,"byte_end":10026592,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026895,"byte_end":10026901,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10027092,"byte_end":10027098,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028335,"byte_end":10028344,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028369,"byte_end":10028378,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028400,"byte_end":10028409,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028523,"byte_end":10028532,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028774,"byte_end":10028783,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028981,"byte_end":10028990,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029118,"byte_end":10029127,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029301,"byte_end":10029310,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029421,"byte_end":10029432,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029892,"byte_end":10029903,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10030050,"byte_end":10030061,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":10040804,"byte_end":10040812,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":10040936,"byte_end":10040944,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":10044804,"byte_end":10044809,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":10046613,"byte_end":10046624,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050504,"byte_end":10050509,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064027,"byte_end":10064032,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064202,"byte_end":10064207,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067491,"byte_end":10067503,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10070576,"byte_end":10070579,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10070589,"byte_end":10070592,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10071541,"byte_end":10071544,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10074818,"byte_end":10074821,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10075220,"byte_end":10075223,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10075650,"byte_end":10075659,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10075669,"byte_end":10075678,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10076360,"byte_end":10076366,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10081490,"byte_end":10081495,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10090220,"byte_end":10090225,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10096290,"byte_end":10096295,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10096431,"byte_end":10096436,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10096949,"byte_end":10096953,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10099536,"byte_end":10099540,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10100072,"byte_end":10100076,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10109897,"byte_end":10109902,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10109939,"byte_end":10109944,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10109960,"byte_end":10109965,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10115885,"byte_end":10115890,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9977702,"byte_end":9977722,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9979149,"byte_end":9979157,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":37554},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9982931,"byte_end":9982932,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986151,"byte_end":9986157,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986222,"byte_end":9986228,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986244,"byte_end":9986250,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":9986583,"byte_end":9986589,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10007791,"byte_end":10007797,"line_start":882,"line_end":882,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008144,"byte_end":10008150,"line_start":894,"line_end":894,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":8718}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008438,"byte_end":10008444,"line_start":902,"line_end":902,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008791,"byte_end":10008797,"line_start":913,"line_end":913,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10008909,"byte_end":10008915,"line_start":919,"line_end":919,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009310,"byte_end":10009316,"line_start":936,"line_end":936,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009419,"byte_end":10009425,"line_start":942,"line_end":942,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009545,"byte_end":10009551,"line_start":948,"line_end":948,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10009900,"byte_end":10009906,"line_start":963,"line_end":963,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011119,"byte_end":10011124,"line_start":1004,"line_end":1004,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10011631,"byte_end":10011636,"line_start":1027,"line_end":1027,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10013286,"byte_end":10013291,"line_start":1087,"line_end":1087,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10014961,"byte_end":10014966,"line_start":1150,"line_end":1150,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015156,"byte_end":10015161,"line_start":1159,"line_end":1159,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015439,"byte_end":10015444,"line_start":1170,"line_end":1170,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015585,"byte_end":10015590,"line_start":1176,"line_end":1176,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015783,"byte_end":10015788,"line_start":1185,"line_end":1185,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3039}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10015954,"byte_end":10015959,"line_start":1192,"line_end":1192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016049,"byte_end":10016054,"line_start":1198,"line_end":1198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016527,"byte_end":10016532,"line_start":1217,"line_end":1217,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2425}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016642,"byte_end":10016647,"line_start":1223,"line_end":1223,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2428}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016769,"byte_end":10016774,"line_start":1229,"line_end":1229,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2719}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10016880,"byte_end":10016885,"line_start":1235,"line_end":1235,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017386,"byte_end":10017392,"line_start":1252,"line_end":1252,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017566,"byte_end":10017572,"line_start":1261,"line_end":1261,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017627,"byte_end":10017633,"line_start":1263,"line_end":1263,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10017879,"byte_end":10017885,"line_start":1278,"line_end":1278,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10018516,"byte_end":10018522,"line_start":1301,"line_end":1301,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10025479,"byte_end":10025485,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026048,"byte_end":10026054,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026181,"byte_end":10026187,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026261,"byte_end":10026267,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2520}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026432,"byte_end":10026438,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026586,"byte_end":10026592,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10026895,"byte_end":10026901,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":8718}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":10027092,"byte_end":10027098,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028335,"byte_end":10028344,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028369,"byte_end":10028378,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028400,"byte_end":10028409,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028523,"byte_end":10028532,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028774,"byte_end":10028783,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10028981,"byte_end":10028990,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029118,"byte_end":10029127,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029301,"byte_end":10029310,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029421,"byte_end":10029432,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10029892,"byte_end":10029903,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":10030050,"byte_end":10030061,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":10040804,"byte_end":10040812,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":10040936,"byte_end":10040944,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":10044804,"byte_end":10044809,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":10046613,"byte_end":10046624,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10050504,"byte_end":10050509,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064027,"byte_end":10064032,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10064202,"byte_end":10064207,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":10067491,"byte_end":10067503,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10070576,"byte_end":10070579,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10070589,"byte_end":10070592,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10071541,"byte_end":10071544,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10074818,"byte_end":10074821,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10075220,"byte_end":10075223,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10075650,"byte_end":10075659,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10075669,"byte_end":10075678,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10076360,"byte_end":10076366,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10081490,"byte_end":10081495,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":10090220,"byte_end":10090225,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":678}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10096290,"byte_end":10096295,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10096431,"byte_end":10096436,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10096949,"byte_end":10096953,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10099536,"byte_end":10099540,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":10100072,"byte_end":10100076,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":7161}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10109897,"byte_end":10109902,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2834}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10109939,"byte_end":10109944,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2822}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10109960,"byte_end":10109965,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":10115885,"byte_end":10115890,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3050}}]}