{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2","program":"/Users/raylee/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","safe_arch","--edition=2018","/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytemuck\"","--cfg","feature=\"default\"","-C","metadata=6189aa9fb75e4e60","-C","extra-filename=-6189aa9fb75e4e60","--out-dir","/Users/raylee/Rust/flappy/target/rls/debug/deps","-L","dependency=/Users/raylee/Rust/flappy/target/rls/debug/deps","--extern","bytemuck=/Users/raylee/Rust/flappy/target/rls/debug/deps/libbytemuck-d9a004f0e5f61873.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/raylee/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/raylee/Rust/flappy/target/rls/debug/deps/libsafe_arch-6189aa9fb75e4e60.rmeta"},"prelude":{"crate_id":{"name":"safe_arch","disambiguator":[6506041723723955852,8723930185045383250]},"crate_root":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src","external_crates":[{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8996585198574955197,10064433740309368892]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11464076584146293375,1944750198668660233]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13665112390248177411,18026488694072058539]}},{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","num":4,"id":{"name":"bytemuck","disambiguator":[9086021034364331297,5161938630379813666]}}],"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":0,"byte_end":12154,"line_start":1,"line_end":286,"column_start":1,"column_end":4}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":0,"byte_end":12154,"line_start":1,"line_end":286,"column_start":1,"column_end":4},"name":"","qualname":"::","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":91}],"decl_id":null,"docs":" A crate that safely exposes arch intrinsics via `#[cfg()]`.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":11,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":34,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"allow(clippy :: transmute_ptr_to_ptr)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":60,"byte_end":99,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/ A crate that safely exposes arch intrinsics via `#[cfg()]`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":141,"byte_end":204,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":205,"byte_end":208,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `safe_arch` lets you safely use CPU intrinsics. Those things in the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":209,"byte_end":280,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ [`core::arch`](core::arch) modules. It works purely via `#[cfg()]` and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":281,"byte_end":355,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ compile time CPU feature declaration. If you want to check for a feature at","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":356,"byte_end":435,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ runtime and then call an intrinsic or use a fallback path based on that then","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":436,"byte_end":516,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ this crate is sadly not for you.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":517,"byte_end":553,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":554,"byte_end":557,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ SIMD register types are \"newtype'd\" so that better trait impls can be given","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":558,"byte_end":637,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ to them, but the inner value is a `pub` field so feel free to just grab it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":638,"byte_end":716,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ out if you need to. Trait impls of the newtypes include: `Default` (zeroed),","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":717,"byte_end":797,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ `From`/`Into` of appropriate data types, and appropriate operator","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":798,"byte_end":867,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ overloading.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":868,"byte_end":884,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":885,"byte_end":888,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * Most intrinsics (like addition and multiplication) are totally safe to use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":889,"byte_end":969,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/   as long as the CPU feature is available. In this case, what you get is 1:1","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":970,"byte_end":1050,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/   with the actual intrinsic.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1051,"byte_end":1083,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ * Some intrinsics take a pointer of an assumed minimum alignment and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1084,"byte_end":1156,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   validity span. For these, the `safe_arch` function takes a reference of an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1157,"byte_end":1237,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/   appropriate type to uphold safety.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1238,"byte_end":1278,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/   * Try the [bytemuck](https://docs.rs/bytemuck) crate (and turn on the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1279,"byte_end":1354,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/     `bytemuck` feature of this crate) if you want help safely casting","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1355,"byte_end":1428,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/     between reference types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1429,"byte_end":1461,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ * Some intrinsics are not safe unless you're _very_ careful about how you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1462,"byte_end":1539,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/   use them, such as the streaming operations requiring you to use them in","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1540,"byte_end":1617,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/   combination with an appropriate memory fence. Those operations aren't","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1618,"byte_end":1693,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/   exposed here.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1694,"byte_end":1713,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ * Some intrinsics mess with the processor state, such as changing the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1714,"byte_end":1787,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/   floating point flags, saving and loading special register state, and so","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1788,"byte_end":1865,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/   on. LLVM doesn't really support you messing with that within a high level","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1866,"byte_end":1945,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/   language, so those operations aren't exposed here. Use assembly or","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":1946,"byte_end":2018,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/   something if you want to do that.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2019,"byte_end":2058,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2059,"byte_end":2062,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Naming Conventions","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2063,"byte_end":2088,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ The `safe_arch` crate does not simply use the \"official\" names for each","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2089,"byte_end":2164,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ intrinsic, because the official names are generally poor. Instead, the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2165,"byte_end":2239,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ operations have been given better names that makes things hopefully easier","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2240,"byte_end":2318,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ to understand then you're reading the code.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2319,"byte_end":2366,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2367,"byte_end":2370,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ For a full explanation of the naming used, see the [Naming","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2371,"byte_end":2433,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ Conventions](crate::naming_conventions) page.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2434,"byte_end":2483,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2484,"byte_end":2487,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Current Support","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2488,"byte_end":2510,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/ * `x86` / `x86_64` (Intel, AMD, etc)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2511,"byte_end":2551,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/   * 128-bit: `sse`, `sse2`, `sse3`, `ssse3`, `sse4.1`, `sse4.2`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2552,"byte_end":2619,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/   * 256-bit: `avx`, `avx2`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2620,"byte_end":2650,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/   * Other: `adx`, `aes`, `bmi1`, `bmi2`, `fma`, `lzcnt`, `pclmulqdq`,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2651,"byte_end":2724,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/     `popcnt`, `rdrand`, `rdseed`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2725,"byte_end":2761,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2762,"byte_end":2765,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Compile Time CPU Target Features","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2766,"byte_end":2805,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2806,"byte_end":2809,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ At the time of me writing this, Rust enables the `sse` and `sse2` CPU","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2810,"byte_end":2883,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ features by default for all `i686` (x86) and `x86_64` builds. Those CPU","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2884,"byte_end":2959,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ features are built into the design of `x86_64`, and you'd need a _super_ old","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":2960,"byte_end":3040,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ `x86` CPU for it to not support at least `sse` and `sse2`, so they're a safe","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3041,"byte_end":3121,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ bet for the language to enable all the time. In fact, because the standard","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3122,"byte_end":3200,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ library is compiled with them enabled, simply trying to _disable_ those","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3201,"byte_end":3276,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ features would actually cause ABI issues and fill your program with UB","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3277,"byte_end":3351,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ ([link][rustc_docs]).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3352,"byte_end":3377,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3378,"byte_end":3381,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ If you want additional CPU features available at compile time you'll have to","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3382,"byte_end":3462,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ enable them with an additional arg to `rustc`. For a feature named `name`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3463,"byte_end":3540,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ you pass `-C target-feature=+name`, such as `-C target-feature=+sse3` for","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3541,"byte_end":3618,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ `sse3`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3619,"byte_end":3630,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3631,"byte_end":3634,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ You can alternately enable _all_ target features of the current CPU with `-C","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3635,"byte_end":3715,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ target-cpu=native`. This is primarily of use if you're building a program","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3716,"byte_end":3793,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ you'll only run on your own system.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3794,"byte_end":3833,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3834,"byte_end":3837,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ It's sometimes hard to know if your target platform will support a given","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3838,"byte_end":3914,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ feature set, but the [Steam Hardware Survey][steam-survey] is generally","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3915,"byte_end":3990,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ taken as a guide to what you can expect people to have available. If you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":3991,"byte_end":4067,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ click \"Other Settings\" it'll expand into a list of CPU target features and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4068,"byte_end":4146,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ how common they are. These days, it seems that `sse3` can be safely assumed,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4147,"byte_end":4227,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ and `ssse3`, `sse4.1`, and `sse4.2` are pretty safe bets as well. The stuff","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4228,"byte_end":4307,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ above 128-bit isn't as common yet, give it another few years.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4308,"byte_end":4373,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4374,"byte_end":4377,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ **Please note that executing a program on a CPU that doesn't support the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4378,"byte_end":4454,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ target features it was compiles for is Undefined Behavior.**","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4455,"byte_end":4519,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4520,"byte_end":4523,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Currently, Rust doesn't actually support an easy way for you to check that a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4524,"byte_end":4604,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ feature enabled at compile time is _actually_ available at runtime. There is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4605,"byte_end":4685,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ the \"[feature_detected][feature_detected]\" family of macros, but if you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4686,"byte_end":4761,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ enable a feature they will evaluate to a constant `true` instead of actually","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4762,"byte_end":4842,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ deferring the check for the feature to runtime. This means that, if you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4843,"byte_end":4918,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ _did_ want a check at the start of your program, to confirm that all the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4919,"byte_end":4995,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ assumed features are present and error out when the assumptions don't hold,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":4996,"byte_end":5075,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ you can't use that macro. You gotta use CPUID and check manually. rip.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5076,"byte_end":5150,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ Hopefully we can make that process easier in a future version of this crate.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5151,"byte_end":5231,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5232,"byte_end":5235,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [steam-survey]:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5236,"byte_end":5255,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/ https://store.steampowered.com/hwsurvey/Steam-Hardware-Software-Survey-Welcome-to-Steam","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5256,"byte_end":5347,"line_start":98,"line_end":98,"column_start":1,"column_end":92}},{"value":"/ [feature_detected]:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5348,"byte_end":5371,"line_start":99,"line_end":99,"column_start":1,"column_end":24}},{"value":"/ https://doc.rust-lang.org/std/index.html?search=feature_detected","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5372,"byte_end":5440,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/ [rustc_docs]: https://doc.rust-lang.org/rustc/targets/known-issues.html","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5441,"byte_end":5516,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5517,"byte_end":5520,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### A Note On Working With Cfg","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5521,"byte_end":5555,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5556,"byte_end":5559,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ There's two main ways to use `cfg`:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5560,"byte_end":5599,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ * Via an attribute placed on an item, block, or expression:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5600,"byte_end":5663,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/   * `#[cfg(debug_assertions)] println!(\"hello\");`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5664,"byte_end":5717,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/ * Via a macro used within an expression position:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5718,"byte_end":5771,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/   * `if cfg!(debug_assertions) { println!(\"hello\"); }`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5772,"byte_end":5830,"line_start":109,"line_end":109,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5831,"byte_end":5834,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The difference might seem small but it's actually very important:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5835,"byte_end":5904,"line_start":111,"line_end":111,"column_start":1,"column_end":70}},{"value":"/ * The attribute form will include code or not _before_ deciding if all the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5905,"byte_end":5983,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/   items named and so forth really exist or not. This means that code that is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":5984,"byte_end":6064,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/   configured via attribute can safely name things that don't always exist as","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6065,"byte_end":6145,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/   long as the things they name do exist whenever that code is configured","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6146,"byte_end":6222,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/   into the build.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6223,"byte_end":6244,"line_start":116,"line_end":116,"column_start":1,"column_end":22}},{"value":"/ * The macro form will include the configured code _no matter what_, and then","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6245,"byte_end":6325,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/   the macro resolves to a constant `true` or `false` and the compiler uses","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6326,"byte_end":6404,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/   dead code elimination to cut out the path not taken.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6405,"byte_end":6463,"line_start":119,"line_end":119,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6464,"byte_end":6467,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This crate uses `cfg` via the attribute, so the functions it exposes don't","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6468,"byte_end":6546,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ exist at all when the appropriate CPU target features aren't enabled.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6547,"byte_end":6620,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ Accordingly, if you plan to call this crate or not depending on what","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6621,"byte_end":6693,"line_start":123,"line_end":123,"column_start":1,"column_end":73}},{"value":"/ features are enabled in the build you'll also need to control your use of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6694,"byte_end":6771,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/ this crate via cfg attribute, not cfg macro.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":6772,"byte_end":6820,"line_start":125,"line_end":125,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"naming_conventions","qualname":"::naming_conventions","value":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","parent":null,"children":[],"decl_id":null,"docs":" An explanation of the crate's naming conventions.","sig":null,"attributes":[{"value":"/ An explanation of the crate's naming conventions.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12442,"byte_end":12495,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12496,"byte_end":12499,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate attempts to follow the general naming scheme of `verb_type` when","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12500,"byte_end":12579,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ the operation is \"simple\", and `verb_description_words_type` when the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12580,"byte_end":12653,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ operation (op) needs to be more specific than normal. Like this:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12654,"byte_end":12722,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ * `add_m128`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12723,"byte_end":12739,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/ * `add_saturating_i8_m128i`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12740,"byte_end":12771,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12772,"byte_end":12775,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Types","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12776,"byte_end":12788,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/ Currently, only `x86` and `x86_64` types are supported. Among those types:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12789,"byte_end":12867,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ * `m128` and `m256` are always considered to hold `f32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12868,"byte_end":12934,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ * `m128d` and `m256d` are always considered to hold `f64` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":12935,"byte_end":13003,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ * `m128i` and `m256i` hold integer data, but each op specifies what lane","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13004,"byte_end":13080,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/   width of integers the operation uses.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13081,"byte_end":13124,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/ * If the type has `_s` on the end then it's a \"scalar\" operation that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13125,"byte_end":13198,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/   affects just the lowest lane. The other lanes are generally copied forward","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13199,"byte_end":13279,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/   from one of the inputs, though the details there vary from op to op.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13280,"byte_end":13354,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ * The SIMD types are often referred to as \"registers\" because each SIMD","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13355,"byte_end":13430,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/   typed value represents exactly one CPU register when you're doing work.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13431,"byte_end":13508,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13509,"byte_end":13512,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Operations","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13513,"byte_end":13530,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/ There's many operations that can be performed. When possible, `safe_arch`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13531,"byte_end":13608,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ tries to follow normal Rust naming (eg: adding is still `add` and left","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13609,"byte_end":13683,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ shifting is still `shl`), but if an operation doesn't normally exist at all","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13684,"byte_end":13763,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ in Rust then we basically have to make something up.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13764,"byte_end":13820,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13821,"byte_end":13824,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Many operations have more than one variant, such as `add` and also","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13825,"byte_end":13895,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ `add_saturating`. In this case, `safe_arch` puts the \"core operation\" first","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13896,"byte_end":13975,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ and then any \"modifiers\" go after, which isn't how you might normally say it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":13976,"byte_end":14056,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ in English, but it makes the list of functions sort better.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14057,"byte_end":14120,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14121,"byte_end":14124,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ As a general note on SIMD terminology: When an operation uses the same","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14125,"byte_end":14199,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ indexed lane in two _different_ registers to determine the output, that is a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14200,"byte_end":14280,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ \"vertical\" operation. When an operation uses more than one lane in the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14281,"byte_end":14355,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ _same_ register to determine the output, that is a \"horizontal\" operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14356,"byte_end":14434,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ * Vertical: `out[0] = a[0] + b[0]`, `out[1] = a[1] + b[1]`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14435,"byte_end":14497,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ * Horizontal: `out[0] = a[0] + a[1]`, `out[1] = b[0] + b[1]`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14498,"byte_end":14562,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14563,"byte_end":14566,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Operation Glossary","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14567,"byte_end":14592,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ Here follows the list of all the main operations and their explanations.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14593,"byte_end":14669,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14670,"byte_end":14673,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * `abs`: Absolute value (wrapping).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14674,"byte_end":14713,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ * `add`: Addition. This is \"wrapping\" by default, though some other types of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14714,"byte_end":14794,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/   addition are available. Remember that wrapping signed addition is the same","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14795,"byte_end":14875,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/   as wrapping unsigned addition.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14876,"byte_end":14912,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ * `average`: Averages the two inputs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14913,"byte_end":14954,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ * `bitand`: Bitwise And, `a & b`, like [the trait](core::ops::BitAnd).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":14955,"byte_end":15029,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ * `bitandnot`: Bitwise `(!a) & b`. This seems a little funny at first but","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15030,"byte_end":15107,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/   it's useful for clearing bits. The output will be based on the `b` side's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15108,"byte_end":15187,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/   bit pattern, but with all active bits in `a` cleared:","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15188,"byte_end":15247,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/   * `bitandnot(0b0010, 0b1011) == 0b1001`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15248,"byte_end":15293,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/ * `bitor`: Bitwise Or, `a | b`, like [the trait](core::ops::BitOr).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15294,"byte_end":15365,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ * `bitxor`: Bitwise eXclusive Or, `a ^ b`, like [the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15366,"byte_end":15422,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/   trait](core::ops::BitXor).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15423,"byte_end":15455,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/ * `blend`: Merge the data lanes of two SIMD values by taking either the `b`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15456,"byte_end":15535,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/   value or `a` value for each lane. Depending on the instruction, the blend","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15536,"byte_end":15615,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/   mask can be either an immediate or a runtime value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15616,"byte_end":15673,"line_start":57,"line_end":57,"column_start":1,"column_end":58}},{"value":"/ * `cast`: Convert between data types while preserving the exact bit","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15674,"byte_end":15745,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"/   patterns, like how [`transmute`](core::mem::transmute) works.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15746,"byte_end":15813,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/ * `ceil`: \"Ceiling\", rounds towards positive infinity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15814,"byte_end":15872,"line_start":60,"line_end":60,"column_start":1,"column_end":59}},{"value":"/ * `cmp`: Numeric comparisons of various kinds. This generally gives \"mask\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15873,"byte_end":15951,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/   output where the output value is of the same data type as the inputs, but","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":15952,"byte_end":16031,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/   with all the bits in a \"true\" lane as 1 and all the bits in a \"false\" lane","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16032,"byte_end":16112,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/   as 0. Remember that with floating point values all 1s bits is a NaN, and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16113,"byte_end":16191,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/   with signed integers all 1s bits is -1.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16192,"byte_end":16237,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/   * An \"Ordered comparison\" checks if _neither_ floating point value is NaN.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16238,"byte_end":16318,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/   * An \"Unordered comparison\" checks if _either_ floating point value is","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16319,"byte_end":16395,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/     NaN.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16396,"byte_end":16408,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/ * `convert`: This does some sort of numeric type change. The details can","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16409,"byte_end":16485,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/   vary wildly. Generally, if the number of lanes goes down then the lowest","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16486,"byte_end":16564,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   lanes will be kept. If the number of lanes goes up then the new high lanes","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16565,"byte_end":16645,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/   will be zero.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16646,"byte_end":16665,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/ * `div`: Division.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16666,"byte_end":16688,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ * `dot_product`: This works like the matrix math operation. The lanes are","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16689,"byte_end":16766,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/   multiplied and then the results are summed up into a single value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16767,"byte_end":16839,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/ * `duplicate`: Copy the even or odd indexed lanes to the other set of lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16840,"byte_end":16920,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/   Eg, `[1, 2, 3, 4]` becomes `[1, 1, 3, 3]` or `[2, 2, 4, 4]`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16921,"byte_end":16987,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ * `extract`: Get a value from the lane of a SIMD type into a scalar type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":16988,"byte_end":17065,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ * `floor`: Rounds towards negative infinity.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17066,"byte_end":17114,"line_start":79,"line_end":79,"column_start":1,"column_end":49}},{"value":"/ * `fused`: All the fused operations are a multiply as well as some sort of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17115,"byte_end":17193,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   adding or subtracting. The details depend on which fused operation you","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17194,"byte_end":17270,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/   select. The benefit of this operation over a non-fused operation are that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17271,"byte_end":17350,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/   it can compute slightly faster than doing the mul and add separately, and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17351,"byte_end":17430,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/   also the output can have higher accuracy in the result.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17431,"byte_end":17492,"line_start":84,"line_end":84,"column_start":1,"column_end":62}},{"value":"/ * `insert`: The opposite of `extract`, this puts a new value into a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17493,"byte_end":17564,"line_start":85,"line_end":85,"column_start":1,"column_end":72}},{"value":"/   particular lane of a SIMD type.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17565,"byte_end":17602,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/ * `load`: Reads an address and makes a SIMD register value. The details can","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17603,"byte_end":17682,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/   vary because there's more than one type of `load`, but generally this is a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17683,"byte_end":17763,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/   `&T -> U` style operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17764,"byte_end":17796,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ * `max`: Picks the larger value from each of the two inputs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17797,"byte_end":17861,"line_start":90,"line_end":90,"column_start":1,"column_end":65}},{"value":"/ * `min`: Picks the smaller value from each of the two inputs.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17862,"byte_end":17927,"line_start":91,"line_end":91,"column_start":1,"column_end":66}},{"value":"/ * `mul`: Multiplication. For floating point this is just \"normal\"","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17928,"byte_end":17997,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/   multiplication, but for integer types you tend to have some options. An","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":17998,"byte_end":18075,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/   integer multiplication of X bits will produce a 2X bit output, so","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18076,"byte_end":18147,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/   generally you'll get to pick if you want to keep the high half of that,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18148,"byte_end":18225,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/   the low half of that (a normal \"wrapping\" mul), or \"widen\" the outputs to","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18226,"byte_end":18305,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/   be all the bits at the expense of not multiplying half the lanes the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18306,"byte_end":18380,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/   lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18381,"byte_end":18393,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/ * `pack`: Take the integers in the `a` and `b` inputs, reduce them to fit","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18394,"byte_end":18471,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/   within the half-sized integer type (eg: `i16` to `i8`), and pack them all","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18472,"byte_end":18551,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   together into the output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18552,"byte_end":18583,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ * `population`: The \"population\" operations refer to the bits within an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18584,"byte_end":18659,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/   integer. Either counting them or adjusting them in various ways.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18660,"byte_end":18730,"line_start":103,"line_end":103,"column_start":1,"column_end":71}},{"value":"/ * `rdrand`: Use the hardware RNG to make a random value of the given length.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18731,"byte_end":18811,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ * `rdseed`: Use the hardware RNG to make a random seed of the given length.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18812,"byte_end":18891,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/   This is less commonly available, but theoretically an improvement over","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18892,"byte_end":18968,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/   `rdrand` in that if you have to combine more than one usage of this","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":18969,"byte_end":19042,"line_start":107,"line_end":107,"column_start":1,"column_end":74}},{"value":"/   operation to make your full seed size then the guess difficulty rises at a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19043,"byte_end":19123,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/   multiplicative rate instead of just an additive rate. For example, two","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19124,"byte_end":19200,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/   `u64` outputs concatenated to a single `u128` have a guess difficulty of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19201,"byte_end":19279,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/   2^(64*64) with `rdseed` but only 2^(64+64) with `rdrand`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19280,"byte_end":19343,"line_start":111,"line_end":111,"column_start":1,"column_end":64}},{"value":"/ * `read_timestamp_counter`: Lets you read the CPU's cycle counter, which","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19344,"byte_end":19420,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/   doesn't strictly mean anything in particular since even the CPU's clock","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19421,"byte_end":19498,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/   rate isn't even stable over time, but you might find it interesting as an","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19499,"byte_end":19578,"line_start":114,"line_end":114,"column_start":1,"column_end":80}},{"value":"/   approximation during benchmarks, or something like that.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19579,"byte_end":19641,"line_start":115,"line_end":115,"column_start":1,"column_end":63}},{"value":"/ * `reciprocal`: Turns `x` into `1/x`. Can also be combined with a `sqrt`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19642,"byte_end":19718,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/   operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19719,"byte_end":19735,"line_start":117,"line_end":117,"column_start":1,"column_end":17}},{"value":"/ * `round`: Convert floating point values to whole numbers, according to one","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19736,"byte_end":19815,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/   of several available methods.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19816,"byte_end":19851,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ * `set`: Places a list of scalar values into a SIMD lane. Conceptually","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19852,"byte_end":19926,"line_start":120,"line_end":120,"column_start":1,"column_end":75}},{"value":"/   similar to how building an array works in Rust.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19927,"byte_end":19980,"line_start":121,"line_end":121,"column_start":1,"column_end":54}},{"value":"/ * `splat`: Not generally an operation of its own, but a modifier to other","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":19981,"byte_end":20058,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/   operations such as `load` and `set`. This will copy a given value across a","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20059,"byte_end":20139,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/   SIMD type as many times as it can be copied. For example, a 32-bit value","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20140,"byte_end":20218,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/   splatted into a 128-bit register will be copied four times.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20219,"byte_end":20284,"line_start":125,"line_end":125,"column_start":1,"column_end":66}},{"value":"/ * `shl`: Bit shift left. New bits shifted in are always 0. Because the shift","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20285,"byte_end":20365,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/   is the same for both signed and unsigned values, this crate simply marks","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20366,"byte_end":20444,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/   left shift as always being an unsigned operation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20445,"byte_end":20500,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/   * You can shift by an immediate value (\"imm\"), all lanes by the same value","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20501,"byte_end":20581,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/     (\"all\"), or each lane by its own value (\"each\").","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20582,"byte_end":20638,"line_start":130,"line_end":130,"column_start":1,"column_end":57}},{"value":"/ * `shr`: Bit shift right. This comes in two forms: \"Arithmetic\" shifts shift","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20639,"byte_end":20719,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/   in the starting sign bit (which preserves the sign of the value), and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20720,"byte_end":20795,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/   \"Logical\" shifts shift in 0 regardless of the starting sign bit (so the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20796,"byte_end":20873,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/   result ends up being positive). With normal Rust types, signed integers","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20874,"byte_end":20951,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/   use arithmetic shifts and unsigned integers use logical shifts, so these","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":20952,"byte_end":21030,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/   functions are marked as being for signed or unsigned integers","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21031,"byte_end":21098,"line_start":136,"line_end":136,"column_start":1,"column_end":68}},{"value":"/   appropriately.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21099,"byte_end":21119,"line_start":137,"line_end":137,"column_start":1,"column_end":21}},{"value":"/   * As with `shl`, you can shift by an immediate value (\"imm\"), all lanes by","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21120,"byte_end":21200,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/     the same value (\"all\"), or each lane by its own value (\"each\").","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21201,"byte_end":21272,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/ * `sign_apply`: Multiplies one set of values by the signum (1, 0, or -1) of","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21273,"byte_end":21352,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/   another set of values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21353,"byte_end":21381,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/ * `sqrt`: Square Root.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21382,"byte_end":21408,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/ * `store`: Writes a SIMD value to a memory location.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21409,"byte_end":21465,"line_start":143,"line_end":143,"column_start":1,"column_end":57}},{"value":"/ * `string_search`: A rather specialized instruction that lets you do byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21466,"byte_end":21543,"line_start":144,"line_end":144,"column_start":1,"column_end":78}},{"value":"/   based searching within a register. This lets you do some very high speed","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21544,"byte_end":21622,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/   searching through ASCII strings when the stars align.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21623,"byte_end":21682,"line_start":146,"line_end":146,"column_start":1,"column_end":60}},{"value":"/ * `sub`: Subtract.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21683,"byte_end":21705,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ * `shuffle`: This lets you re-order the data lanes. Sometimes x86/x64 calls","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21706,"byte_end":21785,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/   this is called \"shuffle\", and sometimes it's called \"permute\", and there's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21786,"byte_end":21866,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/   no particular reasoning behind the different names, so we just call them","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21867,"byte_end":21945,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"/   all shuffle.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21946,"byte_end":21964,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/   * `shuffle_{args}_{lane-type}_{lane-sources}_{simd-type}`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":21965,"byte_end":22029,"line_start":152,"line_end":152,"column_start":1,"column_end":65}},{"value":"/   * \"args\" is the input arguments: `a` (one arg) or `ab` (two args), then","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22030,"byte_end":22107,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/     either `v` (runtime-varying) or `i` (immediate). All the immediate","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22108,"byte_end":22182,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/     shuffles are macros, of course.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22183,"byte_end":22222,"line_start":155,"line_end":155,"column_start":1,"column_end":40}},{"value":"/   * \"lane type\" is `f32`, `f64`, `i8`, etc. If there's a `z` after the type","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22223,"byte_end":22302,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"/     then you'll also be able to zero an output position instead of making it","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22303,"byte_end":22383,"line_start":157,"line_end":157,"column_start":1,"column_end":81}},{"value":"/     come from a particular source lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22384,"byte_end":22427,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"/   * \"lane sources\" is generally either \"all\" which means that all lanes can","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22428,"byte_end":22507,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/     go to all other lanes, or \"half\" which means that each half of the lanes","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22508,"byte_end":22588,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/     is isolated from the other half, and you can't cross data between the","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22589,"byte_end":22666,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/     two halves, only within a half (this is how most of the 256-bit x86/x64","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22667,"byte_end":22746,"line_start":162,"line_end":162,"column_start":1,"column_end":80}},{"value":"/     shuffles work).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22747,"byte_end":22770,"line_start":163,"line_end":163,"column_start":1,"column_end":24}},{"value":"/ * `unpack`: Takes a SIMD value and gets out some of the lanes while widening","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22771,"byte_end":22851,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/   them, such as converting `i16` to `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/naming_conventions.rs","byte_start":22852,"byte_end":22898,"line_start":165,"line_end":165,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903273,"byte_end":6903277,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"m128","qualname":"::x86_x64::m128_::m128","value":"","parent":null,"children":[],"decl_id":null,"docs":" The data for a 128-bit SSE register of four `f32` lanes.","sig":null,"attributes":[{"value":"/ The data for a 128-bit SSE register of four `f32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6902950,"byte_end":6903010,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903011,"byte_end":6903014,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * This is _very similar to_ having `[f32; 4]`. The main difference is that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903015,"byte_end":6903093,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/   it's aligned to 16 instead of just 4, and of course you can perform","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903094,"byte_end":6903167,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/   various intrinsic operations on it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903168,"byte_end":6903209,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903210,"byte_end":6903230,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903231,"byte_end":6903261,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":96},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903278,"byte_end":6903288,"line_start":16,"line_end":16,"column_start":17,"column_end":27},"name":"0","qualname":"::x86_x64::m128_::m128::0","value":"core::arch::x86_64::__m128","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903841,"byte_end":6903849,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"to_array","qualname":"<m128>::to_array","value":"pub fn to_array(Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes the `m128` to an array.","sig":null,"attributes":[{"value":"/ Transmutes the `m128` to an array.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903672,"byte_end":6903710,"line_start":32,"line_end":32,"column_start":3,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903713,"byte_end":6903716,"line_start":33,"line_end":33,"column_start":3,"column_end":6}},{"value":"/ Same as `m.into()`, just lets you be more explicit about what's happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903719,"byte_end":6903797,"line_start":34,"line_end":34,"column_start":3,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903800,"byte_end":6903811,"line_start":35,"line_end":35,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903814,"byte_end":6903831,"line_start":36,"line_end":36,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904076,"byte_end":6904086,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"from_array","qualname":"<m128>::from_array","value":"pub fn from_array([f32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transmutes an array into `m128`.","sig":null,"attributes":[{"value":"/ Transmutes an array into `m128`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903893,"byte_end":6903929,"line_start":41,"line_end":41,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903932,"byte_end":6903935,"line_start":42,"line_end":42,"column_start":3,"column_end":6}},{"value":"/ Same as `m128::from(arr)`, it just lets you be more explicit about what's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903938,"byte_end":6904015,"line_start":43,"line_end":43,"column_start":3,"column_end":80}},{"value":"/ happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904018,"byte_end":6904032,"line_start":44,"line_end":44,"column_start":3,"column_end":17}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904035,"byte_end":6904046,"line_start":45,"line_end":45,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904049,"byte_end":6904066,"line_start":46,"line_end":46,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904320,"byte_end":6904327,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"name":"to_bits","qualname":"<m128>::to_bits","value":"pub fn to_bits(Self) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":" Converts into the bit patterns of these floats (`[u32;4]`).","sig":null,"attributes":[{"value":"/ Converts into the bit patterns of these floats (`[u32;4]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904136,"byte_end":6904199,"line_start":53,"line_end":53,"column_start":3,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904202,"byte_end":6904205,"line_start":54,"line_end":54,"column_start":3,"column_end":6}},{"value":"/ Like [`f32::to_bits`](f32::to_bits), but all four lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904208,"byte_end":6904276,"line_start":55,"line_end":55,"column_start":3,"column_end":71}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904279,"byte_end":6904290,"line_start":56,"line_end":56,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904293,"byte_end":6904310,"line_start":57,"line_end":57,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904585,"byte_end":6904594,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"from_bits","qualname":"<m128>::from_bits","value":"pub fn from_bits([u32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts from the bit patterns of these floats (`[u32;4]`).","sig":null,"attributes":[{"value":"/ Converts from the bit patterns of these floats (`[u32;4]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904397,"byte_end":6904460,"line_start":62,"line_end":62,"column_start":3,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904463,"byte_end":6904466,"line_start":63,"line_end":63,"column_start":3,"column_end":6}},{"value":"/ Like [`f32::from_bits`](f32::from_bits), but all four lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904469,"byte_end":6904541,"line_start":64,"line_end":64,"column_start":3,"column_end":75}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904544,"byte_end":6904555,"line_start":65,"line_end":65,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904558,"byte_end":6904575,"line_start":66,"line_end":66,"column_start":3,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910268,"byte_end":6910273,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"m128d","qualname":"::x86_x64::m128d_::m128d","value":"","parent":null,"children":[],"decl_id":null,"docs":" The data for a 128-bit SSE register of two `f64` values.","sig":null,"attributes":[{"value":"/ The data for a 128-bit SSE register of two `f64` values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6909945,"byte_end":6910005,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910006,"byte_end":6910009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * This is _very similar to_ having `[f64; 2]`. The main difference is that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910010,"byte_end":6910088,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/   it's aligned to 16 instead of just 4, and of course you can perform","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910089,"byte_end":6910162,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/   various intrinsic operations on it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910163,"byte_end":6910204,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910205,"byte_end":6910225,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910226,"byte_end":6910256,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910274,"byte_end":6910285,"line_start":16,"line_end":16,"column_start":18,"column_end":29},"name":"0","qualname":"::x86_x64::m128d_::m128d::0","value":"core::arch::x86_64::__m128d","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910847,"byte_end":6910855,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"to_array","qualname":"<m128d>::to_array","value":"pub fn to_array(Self) -> [f64; ]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes the `m128d` to an array.","sig":null,"attributes":[{"value":"/ Transmutes the `m128d` to an array.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910677,"byte_end":6910716,"line_start":32,"line_end":32,"column_start":3,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910719,"byte_end":6910722,"line_start":33,"line_end":33,"column_start":3,"column_end":6}},{"value":"/ Same as `m.into()`, just lets you be more explicit about what's happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910725,"byte_end":6910803,"line_start":34,"line_end":34,"column_start":3,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910806,"byte_end":6910817,"line_start":35,"line_end":35,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910820,"byte_end":6910837,"line_start":36,"line_end":36,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911084,"byte_end":6911094,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"from_array","qualname":"<m128d>::from_array","value":"pub fn from_array([f64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transmutes an array into `m128d`.","sig":null,"attributes":[{"value":"/ Transmutes an array into `m128d`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910899,"byte_end":6910936,"line_start":41,"line_end":41,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910939,"byte_end":6910942,"line_start":42,"line_end":42,"column_start":3,"column_end":6}},{"value":"/ Same as `m128d::from(arr)`, it just lets you be more explicit about what's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910945,"byte_end":6911023,"line_start":43,"line_end":43,"column_start":3,"column_end":81}},{"value":"/ happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911026,"byte_end":6911040,"line_start":44,"line_end":44,"column_start":3,"column_end":17}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911043,"byte_end":6911054,"line_start":45,"line_end":45,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911057,"byte_end":6911074,"line_start":46,"line_end":46,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911325,"byte_end":6911332,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"name":"to_bits","qualname":"<m128d>::to_bits","value":"pub fn to_bits(Self) -> [u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Converts into the bit patterns of these doubles (`[u64;2]`).","sig":null,"attributes":[{"value":"/ Converts into the bit patterns of these doubles (`[u64;2]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911144,"byte_end":6911208,"line_start":53,"line_end":53,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911211,"byte_end":6911214,"line_start":54,"line_end":54,"column_start":3,"column_end":6}},{"value":"/ Like [`f64::to_bits`](f64::to_bits), but both lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911217,"byte_end":6911281,"line_start":55,"line_end":55,"column_start":3,"column_end":67}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911284,"byte_end":6911295,"line_start":56,"line_end":56,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911298,"byte_end":6911315,"line_start":57,"line_end":57,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911587,"byte_end":6911596,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"from_bits","qualname":"<m128d>::from_bits","value":"pub fn from_bits([u64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts from the bit patterns of these doubles (`[u64;2]`).","sig":null,"attributes":[{"value":"/ Converts from the bit patterns of these doubles (`[u64;2]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911402,"byte_end":6911466,"line_start":62,"line_end":62,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911469,"byte_end":6911472,"line_start":63,"line_end":63,"column_start":3,"column_end":6}},{"value":"/ Like [`f64::from_bits`](f64::from_bits), but both lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911475,"byte_end":6911543,"line_start":64,"line_end":64,"column_start":3,"column_end":71}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911546,"byte_end":6911557,"line_start":65,"line_end":65,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911560,"byte_end":6911577,"line_start":66,"line_end":66,"column_start":3,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917106,"byte_end":6917111,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"m128i","qualname":"::x86_x64::m128i_::m128i","value":"","parent":null,"children":[],"decl_id":null,"docs":" The data for a 128-bit SSE register of integer data.","sig":null,"attributes":[{"value":"/ The data for a 128-bit SSE register of integer data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916626,"byte_end":6916682,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916683,"byte_end":6916686,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * The exact layout to view the type as depends on the operation used.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916687,"byte_end":6916760,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ * `From` and `Into` impls are provided for all the relevant signed integer","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916761,"byte_end":6916839,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/   array types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916840,"byte_end":6916858,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ * Formatting impls print as four `i32` values just because they have to pick","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916859,"byte_end":6916939,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/   something. If you want an alternative you can turn it into an array and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6916940,"byte_end":6917017,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   print as you like.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917018,"byte_end":6917042,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917043,"byte_end":6917063,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917064,"byte_end":6917094,"line_start":18,"line_end":18,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":188},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917112,"byte_end":6917123,"line_start":19,"line_end":19,"column_start":18,"column_end":29},"name":"0","qualname":"::x86_x64::m128i_::m128i::0","value":"core::arch::x86_64::__m128i","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925455,"byte_end":6925459,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"m256","qualname":"::x86_x64::m256_::m256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The data for a 256-bit AVX register of eight `f32` lanes.","sig":null,"attributes":[{"value":"/ The data for a 256-bit AVX register of eight `f32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925131,"byte_end":6925192,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925193,"byte_end":6925196,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * This is _very similar to_ having `[f32; 8]`. The main difference is that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925197,"byte_end":6925275,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/   it's aligned to 32 instead of just 4, and of course you can perform","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925276,"byte_end":6925349,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/   various intrinsic operations on it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925350,"byte_end":6925391,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925392,"byte_end":6925412,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925413,"byte_end":6925443,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925460,"byte_end":6925470,"line_start":16,"line_end":16,"column_start":17,"column_end":27},"name":"0","qualname":"::x86_x64::m256_::m256::0","value":"core::arch::x86_64::__m256","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926023,"byte_end":6926031,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"to_array","qualname":"<m256>::to_array","value":"pub fn to_array(Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes the `m256` to an array.","sig":null,"attributes":[{"value":"/ Transmutes the `m256` to an array.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925854,"byte_end":6925892,"line_start":32,"line_end":32,"column_start":3,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925895,"byte_end":6925898,"line_start":33,"line_end":33,"column_start":3,"column_end":6}},{"value":"/ Same as `m.into()`, just lets you be more explicit about what's happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925901,"byte_end":6925979,"line_start":34,"line_end":34,"column_start":3,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925982,"byte_end":6925993,"line_start":35,"line_end":35,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925996,"byte_end":6926013,"line_start":36,"line_end":36,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926258,"byte_end":6926268,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"from_array","qualname":"<m256>::from_array","value":"pub fn from_array([f32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transmutes an array into `m256`.","sig":null,"attributes":[{"value":"/ Transmutes an array into `m256`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926075,"byte_end":6926111,"line_start":41,"line_end":41,"column_start":3,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926114,"byte_end":6926117,"line_start":42,"line_end":42,"column_start":3,"column_end":6}},{"value":"/ Same as `m256::from(arr)`, it just lets you be more explicit about what's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926120,"byte_end":6926197,"line_start":43,"line_end":43,"column_start":3,"column_end":80}},{"value":"/ happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926200,"byte_end":6926214,"line_start":44,"line_end":44,"column_start":3,"column_end":17}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926217,"byte_end":6926228,"line_start":45,"line_end":45,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926231,"byte_end":6926248,"line_start":46,"line_end":46,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926497,"byte_end":6926504,"line_start":56,"line_end":56,"column_start":10,"column_end":17},"name":"to_bits","qualname":"<m256>::to_bits","value":"pub fn to_bits(Self) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":" Converts into the bit patterns of these floats (`[u32;8]`).","sig":null,"attributes":[{"value":"/ Converts into the bit patterns of these floats (`[u32;8]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926312,"byte_end":6926375,"line_start":51,"line_end":51,"column_start":3,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926378,"byte_end":6926381,"line_start":52,"line_end":52,"column_start":3,"column_end":6}},{"value":"/ Like [`f32::to_bits`](f32::to_bits), but all eight lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926384,"byte_end":6926453,"line_start":53,"line_end":53,"column_start":3,"column_end":72}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926456,"byte_end":6926467,"line_start":54,"line_end":54,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926470,"byte_end":6926487,"line_start":55,"line_end":55,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926763,"byte_end":6926772,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"from_bits","qualname":"<m256>::from_bits","value":"pub fn from_bits([u32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts from the bit patterns of these floats (`[u32;8]`).","sig":null,"attributes":[{"value":"/ Converts from the bit patterns of these floats (`[u32;8]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926574,"byte_end":6926637,"line_start":60,"line_end":60,"column_start":3,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926640,"byte_end":6926643,"line_start":61,"line_end":61,"column_start":3,"column_end":6}},{"value":"/ Like [`f32::from_bits`](f32::from_bits), but all eight lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926646,"byte_end":6926719,"line_start":62,"line_end":62,"column_start":3,"column_end":76}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926722,"byte_end":6926733,"line_start":63,"line_end":63,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926736,"byte_end":6926753,"line_start":64,"line_end":64,"column_start":3,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932565,"byte_end":6932570,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"m256d","qualname":"::x86_x64::m256d_::m256d","value":"","parent":null,"children":[],"decl_id":null,"docs":" The data for a 256-bit AVX register of four `f64` values.","sig":null,"attributes":[{"value":"/ The data for a 256-bit AVX register of four `f64` values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932241,"byte_end":6932302,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932303,"byte_end":6932306,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * This is _very similar to_ having `[f64; 4]`. The main difference is that","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932307,"byte_end":6932385,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/   it's aligned to 32 instead of just 4, and of course you can perform","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932386,"byte_end":6932459,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/   various intrinsic operations on it.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932460,"byte_end":6932501,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932502,"byte_end":6932522,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932523,"byte_end":6932553,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":336},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932571,"byte_end":6932582,"line_start":16,"line_end":16,"column_start":18,"column_end":29},"name":"0","qualname":"::x86_x64::m256d_::m256d::0","value":"core::arch::x86_64::__m256d","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933144,"byte_end":6933152,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"to_array","qualname":"<m256d>::to_array","value":"pub fn to_array(Self) -> [f64; ]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes the `m256d` to an array.","sig":null,"attributes":[{"value":"/ Transmutes the `m256d` to an array.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932974,"byte_end":6933013,"line_start":32,"line_end":32,"column_start":3,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933016,"byte_end":6933019,"line_start":33,"line_end":33,"column_start":3,"column_end":6}},{"value":"/ Same as `m.into()`, just lets you be more explicit about what's happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933022,"byte_end":6933100,"line_start":34,"line_end":34,"column_start":3,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933103,"byte_end":6933114,"line_start":35,"line_end":35,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933117,"byte_end":6933134,"line_start":36,"line_end":36,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933381,"byte_end":6933391,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"from_array","qualname":"<m256d>::from_array","value":"pub fn from_array([f64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transmutes an array into `m256d`.","sig":null,"attributes":[{"value":"/ Transmutes an array into `m256d`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933196,"byte_end":6933233,"line_start":41,"line_end":41,"column_start":3,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933236,"byte_end":6933239,"line_start":42,"line_end":42,"column_start":3,"column_end":6}},{"value":"/ Same as `m256d::from(arr)`, it just lets you be more explicit about what's","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933242,"byte_end":6933320,"line_start":43,"line_end":43,"column_start":3,"column_end":81}},{"value":"/ happening.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933323,"byte_end":6933337,"line_start":44,"line_end":44,"column_start":3,"column_end":17}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933340,"byte_end":6933351,"line_start":45,"line_end":45,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933354,"byte_end":6933371,"line_start":46,"line_end":46,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933622,"byte_end":6933629,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"name":"to_bits","qualname":"<m256d>::to_bits","value":"pub fn to_bits(Self) -> [u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Converts into the bit patterns of these doubles (`[u64;4]`).","sig":null,"attributes":[{"value":"/ Converts into the bit patterns of these doubles (`[u64;4]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933441,"byte_end":6933505,"line_start":53,"line_end":53,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933508,"byte_end":6933511,"line_start":54,"line_end":54,"column_start":3,"column_end":6}},{"value":"/ Like [`f64::to_bits`](f64::to_bits), but both lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933514,"byte_end":6933578,"line_start":55,"line_end":55,"column_start":3,"column_end":67}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933581,"byte_end":6933592,"line_start":56,"line_end":56,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933595,"byte_end":6933612,"line_start":57,"line_end":57,"column_start":3,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933884,"byte_end":6933893,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"from_bits","qualname":"<m256d>::from_bits","value":"pub fn from_bits([u64; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts from the bit patterns of these doubles (`[u64;4]`).","sig":null,"attributes":[{"value":"/ Converts from the bit patterns of these doubles (`[u64;4]`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933699,"byte_end":6933763,"line_start":62,"line_end":62,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933766,"byte_end":6933769,"line_start":63,"line_end":63,"column_start":3,"column_end":6}},{"value":"/ Like [`f64::from_bits`](f64::from_bits), but both lanes at once.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933772,"byte_end":6933840,"line_start":64,"line_end":64,"column_start":3,"column_end":71}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933843,"byte_end":6933854,"line_start":65,"line_end":65,"column_start":3,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933857,"byte_end":6933874,"line_start":66,"line_end":66,"column_start":3,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939403,"byte_end":6939408,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"m256i","qualname":"::x86_x64::m256i_::m256i","value":"","parent":null,"children":[],"decl_id":null,"docs":" The data for a 256-bit AVX register of integer data.","sig":null,"attributes":[{"value":"/ The data for a 256-bit AVX register of integer data.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6938923,"byte_end":6938979,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6938980,"byte_end":6938983,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * The exact layout to view the type as depends on the operation used.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6938984,"byte_end":6939057,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ * `From` and `Into` impls are provided for all the relevant signed integer","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939058,"byte_end":6939136,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/   array types.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939137,"byte_end":6939155,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ * Formatting impls print as four `i32` values just because they have to pick","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939156,"byte_end":6939236,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/   something. If you want an alternative you can turn it into an array and","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939237,"byte_end":6939314,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   print as you like.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939315,"byte_end":6939339,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"repr(transparent)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939340,"byte_end":6939360,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939361,"byte_end":6939391,"line_start":18,"line_end":18,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":382},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939409,"byte_end":6939420,"line_start":19,"line_end":19,"column_start":18,"column_end":29},"name":"0","qualname":"::x86_x64::m256i_::m256i::0","value":"core::arch::x86_64::__m256i","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947705,"byte_end":6947713,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"add_m128","qualname":"::x86_x64::sse::add_m128","value":"pub fn add_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a + b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = add_m128(a, b).to_array();\n assert_eq!(c, [6.0, 8.0, 10.0, 12.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a + b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947365,"byte_end":6947386,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947387,"byte_end":6947394,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947395,"byte_end":6947418,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947419,"byte_end":6947470,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947471,"byte_end":6947522,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/ let c = add_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947523,"byte_end":6947561,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(c, [6.0, 8.0, 10.0, 12.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947562,"byte_end":6947604,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947605,"byte_end":6947612,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947613,"byte_end":6947624,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947625,"byte_end":6947642,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948148,"byte_end":6948158,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"add_m128_s","qualname":"::x86_x64::sse::add_m128_s","value":"pub fn add_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a + b`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = add_m128_s(a, b).to_array();\n assert_eq!(c, [6.0, 2.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `a + b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947785,"byte_end":6947829,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947830,"byte_end":6947837,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947838,"byte_end":6947861,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947862,"byte_end":6947913,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947914,"byte_end":6947965,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ let c = add_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6947966,"byte_end":6948006,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [6.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948007,"byte_end":6948047,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948048,"byte_end":6948055,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948056,"byte_end":6948067,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948068,"byte_end":6948085,"line_start":29,"line_end":29,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":490},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948570,"byte_end":6948581,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"bitand_m128","qualname":"::x86_x64::sse::bitand_m128","value":"pub fn bitand_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a & b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);\n let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);\n let c = bitand_m128(a, b).to_array();\n assert_eq!(c, [1.0, 0.0, 0.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a & b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948230,"byte_end":6948250,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948251,"byte_end":6948258,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948259,"byte_end":6948282,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948283,"byte_end":6948334,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948335,"byte_end":6948386,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/ let c = bitand_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948387,"byte_end":6948428,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [1.0, 0.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948429,"byte_end":6948469,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948470,"byte_end":6948477,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948478,"byte_end":6948489,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948490,"byte_end":6948507,"line_start":44,"line_end":44,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948999,"byte_end":6949013,"line_start":61,"line_end":61,"column_start":8,"column_end":22},"name":"bitandnot_m128","qualname":"::x86_x64::sse::bitandnot_m128","value":"pub fn bitandnot_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!a) & b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);\n let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);\n let c = bitandnot_m128(a, b).to_array();\n assert_eq!(c, [0.0, 1.0, 0.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `(!a) & b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948653,"byte_end":6948676,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948677,"byte_end":6948684,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948685,"byte_end":6948708,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948709,"byte_end":6948760,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948761,"byte_end":6948812,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let c = bitandnot_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948813,"byte_end":6948857,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(c, [0.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948858,"byte_end":6948898,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948899,"byte_end":6948906,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948907,"byte_end":6948918,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6948919,"byte_end":6948936,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":492},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949461,"byte_end":6949477,"line_start":78,"line_end":78,"column_start":8,"column_end":24},"name":"cmp_eq_mask_m128","qualname":"::x86_x64::sse::cmp_eq_mask_m128","value":"pub fn cmp_eq_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a == b`.","sig":null,"attributes":[{"value":"/ Lanewise `a == b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949088,"byte_end":6949110,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949111,"byte_end":6949114,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949115,"byte_end":6949131,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949132,"byte_end":6949139,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949140,"byte_end":6949163,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949164,"byte_end":6949215,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949216,"byte_end":6949267,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_eq_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949268,"byte_end":6949313,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [u32::MAX, 0, 0, u32::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949314,"byte_end":6949360,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949361,"byte_end":6949368,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949369,"byte_end":6949380,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949381,"byte_end":6949398,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949956,"byte_end":6949974,"line_start":95,"line_end":95,"column_start":8,"column_end":26},"name":"cmp_eq_mask_m128_s","qualname":"::x86_x64::sse::cmp_eq_mask_m128_s","value":"pub fn cmp_eq_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a == b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a == b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949551,"byte_end":6949596,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949597,"byte_end":6949600,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949601,"byte_end":6949617,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949618,"byte_end":6949625,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949626,"byte_end":6949649,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949650,"byte_end":6949701,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949702,"byte_end":6949753,"line_start":88,"line_end":88,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_eq_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949754,"byte_end":6949801,"line_start":89,"line_end":89,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u32::MAX, 0, 1_f32.to_bits(), 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949802,"byte_end":6949855,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949856,"byte_end":6949863,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949864,"byte_end":6949875,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6949876,"byte_end":6949893,"line_start":93,"line_end":93,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950428,"byte_end":6950444,"line_start":112,"line_end":112,"column_start":8,"column_end":24},"name":"cmp_ge_mask_m128","qualname":"::x86_x64::sse::cmp_ge_mask_m128","value":"pub fn cmp_ge_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a >= b`.","sig":null,"attributes":[{"value":"/ Lanewise `a >= b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950048,"byte_end":6950070,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950071,"byte_end":6950074,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950075,"byte_end":6950091,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950092,"byte_end":6950099,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950100,"byte_end":6950123,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950124,"byte_end":6950175,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950176,"byte_end":6950227,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_ge_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950228,"byte_end":6950273,"line_start":106,"line_end":106,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [0, u32::MAX, u32::MAX, u32::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950274,"byte_end":6950327,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950328,"byte_end":6950335,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950336,"byte_end":6950347,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950348,"byte_end":6950365,"line_start":110,"line_end":110,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950951,"byte_end":6950969,"line_start":129,"line_end":129,"column_start":8,"column_end":26},"name":"cmp_ge_mask_m128_s","qualname":"::x86_x64::sse::cmp_ge_mask_m128_s","value":"pub fn cmp_ge_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a >= b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a >= b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950518,"byte_end":6950563,"line_start":116,"line_end":116,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950564,"byte_end":6950567,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950568,"byte_end":6950584,"line_start":118,"line_end":118,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950585,"byte_end":6950592,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950593,"byte_end":6950616,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950617,"byte_end":6950668,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950669,"byte_end":6950720,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_ge_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950721,"byte_end":6950768,"line_start":123,"line_end":123,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u32::MAX, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950769,"byte_end":6950850,"line_start":124,"line_end":124,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950851,"byte_end":6950858,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950859,"byte_end":6950870,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6950871,"byte_end":6950888,"line_start":127,"line_end":127,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":496},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951415,"byte_end":6951431,"line_start":146,"line_end":146,"column_start":8,"column_end":24},"name":"cmp_gt_mask_m128","qualname":"::x86_x64::sse::cmp_gt_mask_m128","value":"pub fn cmp_gt_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a > b`.","sig":null,"attributes":[{"value":"/ Lanewise `a > b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951043,"byte_end":6951064,"line_start":133,"line_end":133,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951065,"byte_end":6951068,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951069,"byte_end":6951085,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951086,"byte_end":6951093,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951094,"byte_end":6951117,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951118,"byte_end":6951169,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951170,"byte_end":6951221,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_gt_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951222,"byte_end":6951267,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [0, 0, u32::MAX, u32::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951268,"byte_end":6951314,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951315,"byte_end":6951322,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951323,"byte_end":6951334,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951335,"byte_end":6951352,"line_start":144,"line_end":144,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951937,"byte_end":6951955,"line_start":163,"line_end":163,"column_start":8,"column_end":26},"name":"cmp_gt_mask_m128_s","qualname":"::x86_x64::sse::cmp_gt_mask_m128_s","value":"pub fn cmp_gt_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a > b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a > b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951505,"byte_end":6951549,"line_start":150,"line_end":150,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951550,"byte_end":6951553,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951554,"byte_end":6951570,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951571,"byte_end":6951578,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951579,"byte_end":6951602,"line_start":154,"line_end":154,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.5, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951603,"byte_end":6951654,"line_start":155,"line_end":155,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951655,"byte_end":6951706,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_gt_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951707,"byte_end":6951754,"line_start":157,"line_end":157,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u32::MAX, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951755,"byte_end":6951836,"line_start":158,"line_end":158,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951837,"byte_end":6951844,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951845,"byte_end":6951856,"line_start":160,"line_end":160,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6951857,"byte_end":6951874,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952402,"byte_end":6952418,"line_start":180,"line_end":180,"column_start":8,"column_end":24},"name":"cmp_le_mask_m128","qualname":"::x86_x64::sse::cmp_le_mask_m128","value":"pub fn cmp_le_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a <= b`.","sig":null,"attributes":[{"value":"/ Lanewise `a <= b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952029,"byte_end":6952051,"line_start":167,"line_end":167,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952052,"byte_end":6952055,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952056,"byte_end":6952072,"line_start":169,"line_end":169,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952073,"byte_end":6952080,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952081,"byte_end":6952104,"line_start":171,"line_end":171,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952105,"byte_end":6952156,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952157,"byte_end":6952208,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_le_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952209,"byte_end":6952254,"line_start":174,"line_end":174,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [u32::MAX, u32::MAX, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952255,"byte_end":6952301,"line_start":175,"line_end":175,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952302,"byte_end":6952309,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952310,"byte_end":6952321,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952322,"byte_end":6952339,"line_start":178,"line_end":178,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952925,"byte_end":6952943,"line_start":197,"line_end":197,"column_start":8,"column_end":26},"name":"cmp_le_mask_m128_s","qualname":"::x86_x64::sse::cmp_le_mask_m128_s","value":"pub fn cmp_le_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a <= b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a <= b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952492,"byte_end":6952537,"line_start":184,"line_end":184,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952538,"byte_end":6952541,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952542,"byte_end":6952558,"line_start":186,"line_end":186,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952559,"byte_end":6952566,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952567,"byte_end":6952590,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952591,"byte_end":6952642,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952643,"byte_end":6952694,"line_start":190,"line_end":190,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_le_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952695,"byte_end":6952742,"line_start":191,"line_end":191,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u32::MAX, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952743,"byte_end":6952824,"line_start":192,"line_end":192,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952825,"byte_end":6952832,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952833,"byte_end":6952844,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6952845,"byte_end":6952862,"line_start":195,"line_end":195,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953382,"byte_end":6953398,"line_start":214,"line_end":214,"column_start":8,"column_end":24},"name":"cmp_lt_mask_m128","qualname":"::x86_x64::sse::cmp_lt_mask_m128","value":"pub fn cmp_lt_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a < b`.","sig":null,"attributes":[{"value":"/ Lanewise `a < b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953017,"byte_end":6953038,"line_start":201,"line_end":201,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953039,"byte_end":6953042,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953043,"byte_end":6953059,"line_start":203,"line_end":203,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953060,"byte_end":6953067,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953068,"byte_end":6953091,"line_start":205,"line_end":205,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953092,"byte_end":6953143,"line_start":206,"line_end":206,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953144,"byte_end":6953195,"line_start":207,"line_end":207,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_lt_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953196,"byte_end":6953241,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [u32::MAX, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953242,"byte_end":6953281,"line_start":209,"line_end":209,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953282,"byte_end":6953289,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953290,"byte_end":6953301,"line_start":211,"line_end":211,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953302,"byte_end":6953319,"line_start":212,"line_end":212,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953904,"byte_end":6953922,"line_start":231,"line_end":231,"column_start":8,"column_end":26},"name":"cmp_lt_mask_m128_s","qualname":"::x86_x64::sse::cmp_lt_mask_m128_s","value":"pub fn cmp_lt_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a < b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a < b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953472,"byte_end":6953516,"line_start":218,"line_end":218,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953517,"byte_end":6953520,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953521,"byte_end":6953537,"line_start":220,"line_end":220,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953538,"byte_end":6953545,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953546,"byte_end":6953569,"line_start":222,"line_end":222,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953570,"byte_end":6953621,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953622,"byte_end":6953673,"line_start":224,"line_end":224,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_lt_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953674,"byte_end":6953721,"line_start":225,"line_end":225,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u32::MAX, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953722,"byte_end":6953803,"line_start":226,"line_end":226,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953804,"byte_end":6953811,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953812,"byte_end":6953823,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953824,"byte_end":6953841,"line_start":229,"line_end":229,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954370,"byte_end":6954387,"line_start":248,"line_end":248,"column_start":8,"column_end":25},"name":"cmp_neq_mask_m128","qualname":"::x86_x64::sse::cmp_neq_mask_m128","value":"pub fn cmp_neq_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a != b`.","sig":null,"attributes":[{"value":"/ Lanewise `a != b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6953996,"byte_end":6954018,"line_start":235,"line_end":235,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954019,"byte_end":6954022,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954023,"byte_end":6954039,"line_start":237,"line_end":237,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954040,"byte_end":6954047,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954048,"byte_end":6954071,"line_start":239,"line_end":239,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954072,"byte_end":6954123,"line_start":240,"line_end":240,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954124,"byte_end":6954175,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_neq_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954176,"byte_end":6954222,"line_start":242,"line_end":242,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [0, u32::MAX, u32::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954223,"byte_end":6954269,"line_start":243,"line_end":243,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954270,"byte_end":6954277,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954278,"byte_end":6954289,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954290,"byte_end":6954307,"line_start":246,"line_end":246,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954861,"byte_end":6954880,"line_start":265,"line_end":265,"column_start":8,"column_end":27},"name":"cmp_neq_mask_m128_s","qualname":"::x86_x64::sse::cmp_neq_mask_m128_s","value":"pub fn cmp_neq_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a != b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a != b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954462,"byte_end":6954507,"line_start":252,"line_end":252,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954508,"byte_end":6954511,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954512,"byte_end":6954528,"line_start":254,"line_end":254,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954529,"byte_end":6954536,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954537,"byte_end":6954560,"line_start":256,"line_end":256,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954561,"byte_end":6954612,"line_start":257,"line_end":257,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954613,"byte_end":6954664,"line_start":258,"line_end":258,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_neq_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954665,"byte_end":6954713,"line_start":259,"line_end":259,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 0, 1_f32.to_bits(), 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954714,"byte_end":6954760,"line_start":260,"line_end":260,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954761,"byte_end":6954768,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954769,"byte_end":6954780,"line_start":262,"line_end":262,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954781,"byte_end":6954798,"line_start":263,"line_end":263,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955325,"byte_end":6955342,"line_start":282,"line_end":282,"column_start":8,"column_end":25},"name":"cmp_nge_mask_m128","qualname":"::x86_x64::sse::cmp_nge_mask_m128","value":"pub fn cmp_nge_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a >= b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a >= b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954955,"byte_end":6954980,"line_start":269,"line_end":269,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954981,"byte_end":6954984,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6954985,"byte_end":6955001,"line_start":271,"line_end":271,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955002,"byte_end":6955009,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955010,"byte_end":6955033,"line_start":273,"line_end":273,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955034,"byte_end":6955085,"line_start":274,"line_end":274,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955086,"byte_end":6955137,"line_start":275,"line_end":275,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_nge_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955138,"byte_end":6955184,"line_start":276,"line_end":276,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u32::MAX, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955185,"byte_end":6955224,"line_start":277,"line_end":277,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955225,"byte_end":6955232,"line_start":278,"line_end":278,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955233,"byte_end":6955244,"line_start":279,"line_end":279,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955245,"byte_end":6955262,"line_start":280,"line_end":280,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955847,"byte_end":6955866,"line_start":299,"line_end":299,"column_start":8,"column_end":27},"name":"cmp_nge_mask_m128_s","qualname":"::x86_x64::sse::cmp_nge_mask_m128_s","value":"pub fn cmp_nge_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a >= b)`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a >= b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955417,"byte_end":6955465,"line_start":286,"line_end":286,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955466,"byte_end":6955469,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955470,"byte_end":6955486,"line_start":288,"line_end":288,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955487,"byte_end":6955494,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955495,"byte_end":6955518,"line_start":290,"line_end":290,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955519,"byte_end":6955570,"line_start":291,"line_end":291,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955571,"byte_end":6955622,"line_start":292,"line_end":292,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_nge_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955623,"byte_end":6955671,"line_start":293,"line_end":293,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955672,"byte_end":6955746,"line_start":294,"line_end":294,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955747,"byte_end":6955754,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955755,"byte_end":6955766,"line_start":296,"line_end":296,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955767,"byte_end":6955784,"line_start":297,"line_end":297,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956317,"byte_end":6956334,"line_start":316,"line_end":316,"column_start":8,"column_end":25},"name":"cmp_ngt_mask_m128","qualname":"::x86_x64::sse::cmp_ngt_mask_m128","value":"pub fn cmp_ngt_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a > b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a > b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955941,"byte_end":6955965,"line_start":303,"line_end":303,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955966,"byte_end":6955969,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955970,"byte_end":6955986,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955987,"byte_end":6955994,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6955995,"byte_end":6956018,"line_start":307,"line_end":307,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956019,"byte_end":6956070,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956071,"byte_end":6956122,"line_start":309,"line_end":309,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_ngt_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956123,"byte_end":6956169,"line_start":310,"line_end":310,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u32::MAX, u32::MAX, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956170,"byte_end":6956216,"line_start":311,"line_end":311,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956217,"byte_end":6956224,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956225,"byte_end":6956236,"line_start":313,"line_end":313,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956237,"byte_end":6956254,"line_start":314,"line_end":314,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956838,"byte_end":6956857,"line_start":333,"line_end":333,"column_start":8,"column_end":27},"name":"cmp_ngt_mask_m128_s","qualname":"::x86_x64::sse::cmp_ngt_mask_m128_s","value":"pub fn cmp_ngt_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a > b)`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a > b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956409,"byte_end":6956456,"line_start":320,"line_end":320,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956457,"byte_end":6956460,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956461,"byte_end":6956477,"line_start":322,"line_end":322,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956478,"byte_end":6956485,"line_start":323,"line_end":323,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956486,"byte_end":6956509,"line_start":324,"line_end":324,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.5, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956510,"byte_end":6956561,"line_start":325,"line_end":325,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956562,"byte_end":6956613,"line_start":326,"line_end":326,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_ngt_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956614,"byte_end":6956662,"line_start":327,"line_end":327,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956663,"byte_end":6956737,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956738,"byte_end":6956745,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956746,"byte_end":6956757,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956758,"byte_end":6956775,"line_start":331,"line_end":331,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":508},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957309,"byte_end":6957326,"line_start":350,"line_end":350,"column_start":8,"column_end":25},"name":"cmp_nle_mask_m128","qualname":"::x86_x64::sse::cmp_nle_mask_m128","value":"pub fn cmp_nle_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a <= b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a <= b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956932,"byte_end":6956957,"line_start":337,"line_end":337,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956958,"byte_end":6956961,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956962,"byte_end":6956978,"line_start":339,"line_end":339,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956979,"byte_end":6956986,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6956987,"byte_end":6957010,"line_start":341,"line_end":341,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957011,"byte_end":6957062,"line_start":342,"line_end":342,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957063,"byte_end":6957114,"line_start":343,"line_end":343,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_nle_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957115,"byte_end":6957161,"line_start":344,"line_end":344,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [0, 0, u32::MAX, u32::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957162,"byte_end":6957208,"line_start":345,"line_end":345,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957209,"byte_end":6957216,"line_start":346,"line_end":346,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957217,"byte_end":6957228,"line_start":347,"line_end":347,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957229,"byte_end":6957246,"line_start":348,"line_end":348,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957831,"byte_end":6957850,"line_start":367,"line_end":367,"column_start":8,"column_end":27},"name":"cmp_nle_mask_m128_s","qualname":"::x86_x64::sse::cmp_nle_mask_m128_s","value":"pub fn cmp_nle_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a <= b)`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a <= b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957401,"byte_end":6957449,"line_start":354,"line_end":354,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957450,"byte_end":6957453,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957454,"byte_end":6957470,"line_start":356,"line_end":356,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957471,"byte_end":6957478,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957479,"byte_end":6957502,"line_start":358,"line_end":358,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957503,"byte_end":6957554,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957555,"byte_end":6957606,"line_start":360,"line_end":360,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_nle_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957607,"byte_end":6957655,"line_start":361,"line_end":361,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957656,"byte_end":6957730,"line_start":362,"line_end":362,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957731,"byte_end":6957738,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957739,"byte_end":6957750,"line_start":364,"line_end":364,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957751,"byte_end":6957768,"line_start":365,"line_end":365,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958308,"byte_end":6958325,"line_start":384,"line_end":384,"column_start":8,"column_end":25},"name":"cmp_nlt_mask_m128","qualname":"::x86_x64::sse::cmp_nlt_mask_m128","value":"pub fn cmp_nlt_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a < b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a < b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957925,"byte_end":6957949,"line_start":371,"line_end":371,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957950,"byte_end":6957953,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957954,"byte_end":6957970,"line_start":373,"line_end":373,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957971,"byte_end":6957978,"line_start":374,"line_end":374,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6957979,"byte_end":6958002,"line_start":375,"line_end":375,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958003,"byte_end":6958054,"line_start":376,"line_end":376,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958055,"byte_end":6958106,"line_start":377,"line_end":377,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_nlt_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958107,"byte_end":6958153,"line_start":378,"line_end":378,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [0, u32::MAX, u32::MAX, u32::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958154,"byte_end":6958207,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958208,"byte_end":6958215,"line_start":380,"line_end":380,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958216,"byte_end":6958227,"line_start":381,"line_end":381,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958228,"byte_end":6958245,"line_start":382,"line_end":382,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958829,"byte_end":6958848,"line_start":401,"line_end":401,"column_start":8,"column_end":27},"name":"cmp_nlt_mask_m128_s","qualname":"::x86_x64::sse::cmp_nlt_mask_m128_s","value":"pub fn cmp_nlt_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a < b)`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a < b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958400,"byte_end":6958447,"line_start":388,"line_end":388,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958448,"byte_end":6958451,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958452,"byte_end":6958468,"line_start":390,"line_end":390,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958469,"byte_end":6958476,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958477,"byte_end":6958500,"line_start":392,"line_end":392,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958501,"byte_end":6958552,"line_start":393,"line_end":393,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([2.0, 2.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958553,"byte_end":6958604,"line_start":394,"line_end":394,"column_start":1,"column_end":52}},{"value":"/ let c = cmp_nlt_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958605,"byte_end":6958653,"line_start":395,"line_end":395,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958654,"byte_end":6958728,"line_start":396,"line_end":396,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958729,"byte_end":6958736,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958737,"byte_end":6958748,"line_start":398,"line_end":398,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958749,"byte_end":6958766,"line_start":399,"line_end":399,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959338,"byte_end":6959360,"line_start":418,"line_end":418,"column_start":8,"column_end":30},"name":"cmp_ordinary_mask_m128","qualname":"::x86_x64::sse::cmp_ordinary_mask_m128","value":"pub fn cmp_ordinary_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `(!a.is_nan()) & (!b.is_nan())`.","sig":null,"attributes":[{"value":"/ Lanewise `(!a.is_nan()) & (!b.is_nan())`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958923,"byte_end":6958968,"line_start":405,"line_end":405,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958969,"byte_end":6958972,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958973,"byte_end":6958989,"line_start":407,"line_end":407,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958990,"byte_end":6958997,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6958998,"byte_end":6959021,"line_start":409,"line_end":409,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.0, f32::NAN, 0.0, f32::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959022,"byte_end":6959083,"line_start":410,"line_end":410,"column_start":1,"column_end":62}},{"value":"/ let b = m128::from_array([0.0, 0.0, f32::NAN, f32::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959084,"byte_end":6959145,"line_start":411,"line_end":411,"column_start":1,"column_end":62}},{"value":"/ let c = cmp_ordinary_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959146,"byte_end":6959197,"line_start":412,"line_end":412,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(c, [u32::MAX, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959198,"byte_end":6959237,"line_start":413,"line_end":413,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959238,"byte_end":6959245,"line_start":414,"line_end":414,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959246,"byte_end":6959257,"line_start":415,"line_end":415,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959258,"byte_end":6959275,"line_start":416,"line_end":416,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959912,"byte_end":6959936,"line_start":435,"line_end":435,"column_start":8,"column_end":32},"name":"cmp_ordinary_mask_m128_s","qualname":"::x86_x64::sse::cmp_ordinary_mask_m128_s","value":"pub fn cmp_ordinary_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `(!a.is_nan()) & (!b.is_nan())`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `(!a.is_nan()) & (!b.is_nan())`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959435,"byte_end":6959503,"line_start":422,"line_end":422,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959504,"byte_end":6959507,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959508,"byte_end":6959524,"line_start":424,"line_end":424,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959525,"byte_end":6959532,"line_start":425,"line_end":425,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959533,"byte_end":6959556,"line_start":426,"line_end":426,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959557,"byte_end":6959608,"line_start":427,"line_end":427,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([0.0, f32::NAN, f32::NAN, f32::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959609,"byte_end":6959675,"line_start":428,"line_end":428,"column_start":1,"column_end":67}},{"value":"/ let c = cmp_ordinary_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959676,"byte_end":6959729,"line_start":429,"line_end":429,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [u32::MAX, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959730,"byte_end":6959811,"line_start":430,"line_end":430,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959812,"byte_end":6959819,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959820,"byte_end":6959831,"line_start":432,"line_end":432,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6959832,"byte_end":6959849,"line_start":433,"line_end":433,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960431,"byte_end":6960450,"line_start":452,"line_end":452,"column_start":8,"column_end":27},"name":"cmp_unord_mask_m128","qualname":"::x86_x64::sse::cmp_unord_mask_m128","value":"pub fn cmp_unord_mask_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a.is_nan() | b.is_nan()`.","sig":null,"attributes":[{"value":"/ Lanewise `a.is_nan() | b.is_nan()`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960011,"byte_end":6960050,"line_start":439,"line_end":439,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960051,"byte_end":6960054,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960055,"byte_end":6960071,"line_start":441,"line_end":441,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960072,"byte_end":6960079,"line_start":442,"line_end":442,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960080,"byte_end":6960103,"line_start":443,"line_end":443,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.0, f32::NAN, 0.0, f32::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960104,"byte_end":6960165,"line_start":444,"line_end":444,"column_start":1,"column_end":62}},{"value":"/ let b = m128::from_array([0.0, 0.0, f32::NAN, f32::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960166,"byte_end":6960227,"line_start":445,"line_end":445,"column_start":1,"column_end":62}},{"value":"/ let c = cmp_unord_mask_m128(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960228,"byte_end":6960276,"line_start":446,"line_end":446,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, u32::MAX, u32::MAX, u32::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960277,"byte_end":6960330,"line_start":447,"line_end":447,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960331,"byte_end":6960338,"line_start":448,"line_end":448,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960339,"byte_end":6960350,"line_start":449,"line_end":449,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960351,"byte_end":6960368,"line_start":450,"line_end":450,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960988,"byte_end":6961009,"line_start":469,"line_end":469,"column_start":8,"column_end":29},"name":"cmp_unord_mask_m128_s","qualname":"::x86_x64::sse::cmp_unord_mask_m128_s","value":"pub fn cmp_unord_mask_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a.is_nan() | b.is_nan()`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a.is_nan() | b.is_nan()`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960527,"byte_end":6960589,"line_start":456,"line_end":456,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960590,"byte_end":6960593,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960594,"byte_end":6960610,"line_start":458,"line_end":458,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960611,"byte_end":6960618,"line_start":459,"line_end":459,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960619,"byte_end":6960642,"line_start":460,"line_end":460,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960643,"byte_end":6960694,"line_start":461,"line_end":461,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([0.0, f32::NAN, f32::NAN, f32::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960695,"byte_end":6960761,"line_start":462,"line_end":462,"column_start":1,"column_end":67}},{"value":"/ let c = cmp_unord_mask_m128_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960762,"byte_end":6960812,"line_start":463,"line_end":463,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(c, [0, 2_f32.to_bits(), 3_f32.to_bits(), 4_f32.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960813,"byte_end":6960887,"line_start":464,"line_end":464,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960888,"byte_end":6960895,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960896,"byte_end":6960907,"line_start":466,"line_end":466,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6960908,"byte_end":6960925,"line_start":467,"line_end":467,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961415,"byte_end":6961432,"line_start":485,"line_end":485,"column_start":8,"column_end":25},"name":"cmp_eq_i32_m128_s","qualname":"::x86_x64::sse::cmp_eq_i32_m128_s","value":"pub fn cmp_eq_i32_m128_s(m128, m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane equality.","sig":null,"attributes":[{"value":"/ Low lane equality.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961086,"byte_end":6961108,"line_start":473,"line_end":473,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961109,"byte_end":6961112,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961113,"byte_end":6961130,"line_start":475,"line_end":475,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961131,"byte_end":6961138,"line_start":476,"line_end":476,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961139,"byte_end":6961162,"line_start":477,"line_end":477,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961163,"byte_end":6961214,"line_start":478,"line_end":478,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961215,"byte_end":6961266,"line_start":479,"line_end":479,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_i32, cmp_eq_i32_m128_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961267,"byte_end":6961314,"line_start":480,"line_end":480,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961315,"byte_end":6961322,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961323,"byte_end":6961334,"line_start":482,"line_end":482,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961335,"byte_end":6961352,"line_start":483,"line_end":483,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961845,"byte_end":6961862,"line_start":501,"line_end":501,"column_start":8,"column_end":25},"name":"cmp_ge_i32_m128_s","qualname":"::x86_x64::sse::cmp_ge_i32_m128_s","value":"pub fn cmp_ge_i32_m128_s(m128, m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane greater than or equal to.","sig":null,"attributes":[{"value":"/ Low lane greater than or equal to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961500,"byte_end":6961538,"line_start":489,"line_end":489,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961539,"byte_end":6961542,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961543,"byte_end":6961560,"line_start":491,"line_end":491,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961561,"byte_end":6961568,"line_start":492,"line_end":492,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961569,"byte_end":6961592,"line_start":493,"line_end":493,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961593,"byte_end":6961644,"line_start":494,"line_end":494,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961645,"byte_end":6961696,"line_start":495,"line_end":495,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_i32, cmp_ge_i32_m128_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961697,"byte_end":6961744,"line_start":496,"line_end":496,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961745,"byte_end":6961752,"line_start":497,"line_end":497,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961753,"byte_end":6961764,"line_start":498,"line_end":498,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961765,"byte_end":6961782,"line_start":499,"line_end":499,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962263,"byte_end":6962280,"line_start":517,"line_end":517,"column_start":8,"column_end":25},"name":"cmp_gt_i32_m128_s","qualname":"::x86_x64::sse::cmp_gt_i32_m128_s","value":"pub fn cmp_gt_i32_m128_s(m128, m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane greater than.","sig":null,"attributes":[{"value":"/ Low lane greater than.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961930,"byte_end":6961956,"line_start":505,"line_end":505,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961957,"byte_end":6961960,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961961,"byte_end":6961978,"line_start":507,"line_end":507,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961979,"byte_end":6961986,"line_start":508,"line_end":508,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6961987,"byte_end":6962010,"line_start":509,"line_end":509,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([2.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962011,"byte_end":6962062,"line_start":510,"line_end":510,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962063,"byte_end":6962114,"line_start":511,"line_end":511,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_i32, cmp_gt_i32_m128_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962115,"byte_end":6962162,"line_start":512,"line_end":512,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962163,"byte_end":6962170,"line_start":513,"line_end":513,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962171,"byte_end":6962182,"line_start":514,"line_end":514,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962183,"byte_end":6962200,"line_start":515,"line_end":515,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962690,"byte_end":6962707,"line_start":533,"line_end":533,"column_start":8,"column_end":25},"name":"cmp_le_i32_m128_s","qualname":"::x86_x64::sse::cmp_le_i32_m128_s","value":"pub fn cmp_le_i32_m128_s(m128, m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane less than or equal to.","sig":null,"attributes":[{"value":"/ Low lane less than or equal to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962348,"byte_end":6962383,"line_start":521,"line_end":521,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962384,"byte_end":6962387,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962388,"byte_end":6962405,"line_start":523,"line_end":523,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962406,"byte_end":6962413,"line_start":524,"line_end":524,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962414,"byte_end":6962437,"line_start":525,"line_end":525,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.5, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962438,"byte_end":6962489,"line_start":526,"line_end":526,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962490,"byte_end":6962541,"line_start":527,"line_end":527,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_i32, cmp_le_i32_m128_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962542,"byte_end":6962589,"line_start":528,"line_end":528,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962590,"byte_end":6962597,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962598,"byte_end":6962609,"line_start":530,"line_end":530,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962610,"byte_end":6962627,"line_start":531,"line_end":531,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963105,"byte_end":6963122,"line_start":549,"line_end":549,"column_start":8,"column_end":25},"name":"cmp_lt_i32_m128_s","qualname":"::x86_x64::sse::cmp_lt_i32_m128_s","value":"pub fn cmp_lt_i32_m128_s(m128, m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane less than.","sig":null,"attributes":[{"value":"/ Low lane less than.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962775,"byte_end":6962798,"line_start":537,"line_end":537,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962799,"byte_end":6962802,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962803,"byte_end":6962820,"line_start":539,"line_end":539,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962821,"byte_end":6962828,"line_start":540,"line_end":540,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962829,"byte_end":6962852,"line_start":541,"line_end":541,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.5, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962853,"byte_end":6962904,"line_start":542,"line_end":542,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962905,"byte_end":6962956,"line_start":543,"line_end":543,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_i32, cmp_lt_i32_m128_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6962957,"byte_end":6963004,"line_start":544,"line_end":544,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963005,"byte_end":6963012,"line_start":545,"line_end":545,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963013,"byte_end":6963024,"line_start":546,"line_end":546,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963025,"byte_end":6963042,"line_start":547,"line_end":547,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963524,"byte_end":6963542,"line_start":565,"line_end":565,"column_start":8,"column_end":26},"name":"cmp_neq_i32_m128_s","qualname":"::x86_x64::sse::cmp_neq_i32_m128_s","value":"pub fn cmp_neq_i32_m128_s(m128, m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane not equal to.","sig":null,"attributes":[{"value":"/ Low lane not equal to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963190,"byte_end":6963216,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963217,"byte_end":6963220,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963221,"byte_end":6963238,"line_start":555,"line_end":555,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963239,"byte_end":6963246,"line_start":556,"line_end":556,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963247,"byte_end":6963270,"line_start":557,"line_end":557,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963271,"byte_end":6963322,"line_start":558,"line_end":558,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963323,"byte_end":6963374,"line_start":559,"line_end":559,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(0_i32, cmp_neq_i32_m128_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963375,"byte_end":6963423,"line_start":560,"line_end":560,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963424,"byte_end":6963431,"line_start":561,"line_end":561,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963432,"byte_end":6963443,"line_start":562,"line_end":562,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963444,"byte_end":6963461,"line_start":563,"line_end":563,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":522},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964043,"byte_end":6964069,"line_start":581,"line_end":581,"column_start":8,"column_end":34},"name":"convert_i32_replace_m128_s","qualname":"::x86_x64::sse::convert_i32_replace_m128_s","value":"pub fn convert_i32_replace_m128_s(m128, i32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Convert `i32` to `f32` and replace the low lane of the input.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = convert_i32_replace_m128_s(a, 5_i32).to_array();\n assert_eq!(b, [5.0, 2.0, 3.0, 4.0]);\n ```\n * **Intrinsic:** [`_mm_cvtsi32_ss`]\n * **Assembly:** `cvtsi2ss xmm, r32`\n","sig":null,"attributes":[{"value":"/ Convert `i32` to `f32` and replace the low lane of the input.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963611,"byte_end":6963676,"line_start":569,"line_end":569,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963677,"byte_end":6963684,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963685,"byte_end":6963708,"line_start":571,"line_end":571,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963709,"byte_end":6963760,"line_start":572,"line_end":572,"column_start":1,"column_end":52}},{"value":"/ let b = convert_i32_replace_m128_s(a, 5_i32).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963761,"byte_end":6963821,"line_start":573,"line_end":573,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(b, [5.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963822,"byte_end":6963862,"line_start":574,"line_end":574,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963863,"byte_end":6963870,"line_start":575,"line_end":575,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtsi32_ss`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963871,"byte_end":6963910,"line_start":576,"line_end":576,"column_start":1,"column_end":40}},{"value":"/ * **Assembly:** `cvtsi2ss xmm, r32`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963911,"byte_end":6963950,"line_start":577,"line_end":577,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963951,"byte_end":6963962,"line_start":578,"line_end":578,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6963963,"byte_end":6963980,"line_start":579,"line_end":579,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964980,"byte_end":6964999,"line_start":611,"line_end":611,"column_start":8,"column_end":27},"name":"get_f32_from_m128_s","qualname":"::x86_x64::sse::get_f32_from_m128_s","value":"pub fn get_f32_from_m128_s(m128) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the low lane as an individual `f32` value.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n assert_eq!(1_f32, get_f32_from_m128_s(a));\n ```\n","sig":null,"attributes":[{"value":"/ Gets the low lane as an individual `f32` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964697,"byte_end":6964748,"line_start":602,"line_end":602,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964749,"byte_end":6964756,"line_start":603,"line_end":603,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964757,"byte_end":6964780,"line_start":604,"line_end":604,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964781,"byte_end":6964832,"line_start":605,"line_end":605,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_f32, get_f32_from_m128_s(a));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964833,"byte_end":6964879,"line_start":606,"line_end":606,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964880,"byte_end":6964887,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964888,"byte_end":6964899,"line_start":608,"line_end":608,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6964900,"byte_end":6964917,"line_start":609,"line_end":609,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":524},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965356,"byte_end":6965375,"line_start":624,"line_end":624,"column_start":8,"column_end":27},"name":"get_i32_from_m128_s","qualname":"::x86_x64::sse::get_i32_from_m128_s","value":"pub fn get_i32_from_m128_s(m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Converts the low lane to `i32` and extracts as an individual value.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n assert_eq!(1_i32, get_i32_from_m128_s(a));\n ```\n","sig":null,"attributes":[{"value":"/ Converts the low lane to `i32` and extracts as an individual value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965053,"byte_end":6965124,"line_start":615,"line_end":615,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965125,"byte_end":6965132,"line_start":616,"line_end":616,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965133,"byte_end":6965156,"line_start":617,"line_end":617,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965157,"byte_end":6965208,"line_start":618,"line_end":618,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(1_i32, get_i32_from_m128_s(a));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965209,"byte_end":6965255,"line_start":619,"line_end":619,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965256,"byte_end":6965263,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965264,"byte_end":6965275,"line_start":621,"line_end":621,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965276,"byte_end":6965293,"line_start":622,"line_end":622,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966175,"byte_end":6966183,"line_start":653,"line_end":653,"column_start":8,"column_end":16},"name":"div_m128","qualname":"::x86_x64::sse::div_m128","value":"pub fn div_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a / b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let b = m128::from_array([2.0, 6.0, 13.0, 2.0]);\n let c = div_m128(a, b).to_array();\n assert_eq!(c, [5.0, 2.0, 1.0, 7.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a / b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965832,"byte_end":6965853,"line_start":642,"line_end":642,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965854,"byte_end":6965861,"line_start":643,"line_end":643,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965862,"byte_end":6965885,"line_start":644,"line_end":644,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965886,"byte_end":6965941,"line_start":645,"line_end":645,"column_start":1,"column_end":56}},{"value":"/ let b = m128::from_array([2.0, 6.0, 13.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965942,"byte_end":6965994,"line_start":646,"line_end":646,"column_start":1,"column_end":53}},{"value":"/ let c = div_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6965995,"byte_end":6966033,"line_start":647,"line_end":647,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(c, [5.0, 2.0, 1.0, 7.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966034,"byte_end":6966074,"line_start":648,"line_end":648,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966075,"byte_end":6966082,"line_start":649,"line_end":649,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966083,"byte_end":6966094,"line_start":650,"line_end":650,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966095,"byte_end":6966112,"line_start":651,"line_end":651,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966626,"byte_end":6966636,"line_start":668,"line_end":668,"column_start":8,"column_end":18},"name":"div_m128_s","qualname":"::x86_x64::sse::div_m128_s","value":"pub fn div_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a / b`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let b = m128::from_array([2.0, 6.0, 13.0, 2.0]);\n let c = div_m128_s(a, b).to_array();\n assert_eq!(c, [5.0, 12.0, 13.0, 14.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `a / b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966255,"byte_end":6966299,"line_start":657,"line_end":657,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966300,"byte_end":6966307,"line_start":658,"line_end":658,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966308,"byte_end":6966331,"line_start":659,"line_end":659,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966332,"byte_end":6966387,"line_start":660,"line_end":660,"column_start":1,"column_end":56}},{"value":"/ let b = m128::from_array([2.0, 6.0, 13.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966388,"byte_end":6966440,"line_start":661,"line_end":661,"column_start":1,"column_end":53}},{"value":"/ let c = div_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966441,"byte_end":6966481,"line_start":662,"line_end":662,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [5.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966482,"byte_end":6966525,"line_start":663,"line_end":663,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966526,"byte_end":6966533,"line_start":664,"line_end":664,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966534,"byte_end":6966545,"line_start":665,"line_end":665,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966546,"byte_end":6966563,"line_start":666,"line_end":666,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":527},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967006,"byte_end":6967015,"line_start":682,"line_end":682,"column_start":8,"column_end":17},"name":"load_m128","qualname":"::x86_x64::sse::load_m128","value":"pub fn load_m128(&m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let b = load_m128(&a);\n assert_eq!(a.to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966708,"byte_end":6966748,"line_start":672,"line_end":672,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966749,"byte_end":6966756,"line_start":673,"line_end":673,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966757,"byte_end":6966780,"line_start":674,"line_end":674,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966781,"byte_end":6966836,"line_start":675,"line_end":675,"column_start":1,"column_end":56}},{"value":"/ let b = load_m128(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966837,"byte_end":6966863,"line_start":676,"line_end":676,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(a.to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966864,"byte_end":6966905,"line_start":677,"line_end":677,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966906,"byte_end":6966913,"line_start":678,"line_end":678,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966914,"byte_end":6966925,"line_start":679,"line_end":679,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6966926,"byte_end":6966943,"line_start":680,"line_end":680,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967472,"byte_end":6967491,"line_start":697,"line_end":697,"column_start":8,"column_end":27},"name":"load_f32_splat_m128","qualname":"::x86_x64::sse::load_f32_splat_m128","value":"pub fn load_f32_splat_m128(&f32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Loads the `f32` reference into all lanes of a register.\n ```\n # use safe_arch::*;\n let a = 1.0;\n let b = load_f32_splat_m128(&a);\n assert_eq!(m128::from_array([1.0, 1.0, 1.0, 1.0]).to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the `f32` reference into all lanes of a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967102,"byte_end":6967161,"line_start":686,"line_end":686,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967162,"byte_end":6967169,"line_start":687,"line_end":687,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967170,"byte_end":6967193,"line_start":688,"line_end":688,"column_start":1,"column_end":24}},{"value":"/ let a = 1.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967194,"byte_end":6967210,"line_start":689,"line_end":689,"column_start":1,"column_end":17}},{"value":"/ let b = load_f32_splat_m128(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967211,"byte_end":6967247,"line_start":690,"line_end":690,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(m128::from_array([1.0, 1.0, 1.0, 1.0]).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967248,"byte_end":6967326,"line_start":691,"line_end":691,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967327,"byte_end":6967334,"line_start":692,"line_end":692,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967335,"byte_end":6967346,"line_start":693,"line_end":693,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967347,"byte_end":6967364,"line_start":694,"line_end":694,"column_start":1,"column_end":18}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967365,"byte_end":6967409,"line_start":695,"line_end":695,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967980,"byte_end":6967995,"line_start":713,"line_end":713,"column_start":8,"column_end":23},"name":"load_f32_m128_s","qualname":"::x86_x64::sse::load_f32_m128_s","value":"pub fn load_f32_m128_s(&f32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Loads the `f32` reference into the low lane of the register.\n ```\n # use safe_arch::*;\n let a = 1.0;\n let b = load_f32_m128_s(&a);\n assert_eq!(m128::from_array([1.0, 0.0, 0.0, 0.0]).to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the `f32` reference into the low lane of the register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967609,"byte_end":6967673,"line_start":702,"line_end":702,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967674,"byte_end":6967681,"line_start":703,"line_end":703,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967682,"byte_end":6967705,"line_start":704,"line_end":704,"column_start":1,"column_end":24}},{"value":"/ let a = 1.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967706,"byte_end":6967722,"line_start":705,"line_end":705,"column_start":1,"column_end":17}},{"value":"/ let b = load_f32_m128_s(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967723,"byte_end":6967755,"line_start":706,"line_end":706,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(m128::from_array([1.0, 0.0, 0.0, 0.0]).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967756,"byte_end":6967834,"line_start":707,"line_end":707,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967835,"byte_end":6967842,"line_start":708,"line_end":708,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967843,"byte_end":6967854,"line_start":709,"line_end":709,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967855,"byte_end":6967872,"line_start":710,"line_end":710,"column_start":1,"column_end":18}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6967873,"byte_end":6967917,"line_start":711,"line_end":711,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968419,"byte_end":6968436,"line_start":727,"line_end":727,"column_start":8,"column_end":25},"name":"load_reverse_m128","qualname":"::x86_x64::sse::load_reverse_m128","value":"pub fn load_reverse_m128(&m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register with reversed order.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let b = load_reverse_m128(&a);\n assert_eq!(m128::from_array([14.0, 13.0, 12.0, 10.0]).to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register with reversed order.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968052,"byte_end":6968112,"line_start":717,"line_end":717,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968113,"byte_end":6968120,"line_start":718,"line_end":718,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968121,"byte_end":6968144,"line_start":719,"line_end":719,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968145,"byte_end":6968200,"line_start":720,"line_end":720,"column_start":1,"column_end":56}},{"value":"/ let b = load_reverse_m128(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968201,"byte_end":6968235,"line_start":721,"line_end":721,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(m128::from_array([14.0, 13.0, 12.0, 10.0]).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968236,"byte_end":6968318,"line_start":722,"line_end":722,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968319,"byte_end":6968326,"line_start":723,"line_end":723,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968327,"byte_end":6968338,"line_start":724,"line_end":724,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968339,"byte_end":6968356,"line_start":725,"line_end":725,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969009,"byte_end":6969028,"line_start":745,"line_end":745,"column_start":8,"column_end":27},"name":"load_unaligned_m128","qualname":"::x86_x64::sse::load_unaligned_m128","value":"pub fn load_unaligned_m128(&[f32; ]) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register.","sig":null,"attributes":[{"value":"/ Loads the reference into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968524,"byte_end":6968564,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968565,"byte_end":6968568,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ This generally has no speed penalty if the reference happens to be 16-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968569,"byte_end":6968647,"line_start":733,"line_end":733,"column_start":1,"column_end":79}},{"value":"/ aligned, but there is a slight speed penalty if the reference is only 4-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968648,"byte_end":6968728,"line_start":734,"line_end":734,"column_start":1,"column_end":81}},{"value":"/ aligned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968729,"byte_end":6968741,"line_start":735,"line_end":735,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968742,"byte_end":6968749,"line_start":736,"line_end":736,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968750,"byte_end":6968773,"line_start":737,"line_end":737,"column_start":1,"column_end":24}},{"value":"/ let a = [10.0, 12.0, 13.0, 14.0];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968774,"byte_end":6968811,"line_start":738,"line_end":738,"column_start":1,"column_end":38}},{"value":"/ let b = load_unaligned_m128(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968812,"byte_end":6968848,"line_start":739,"line_end":739,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(m128::from_array(a).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968849,"byte_end":6968908,"line_start":740,"line_end":740,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968909,"byte_end":6968916,"line_start":741,"line_end":741,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968917,"byte_end":6968928,"line_start":742,"line_end":742,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6968929,"byte_end":6968946,"line_start":743,"line_end":743,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969468,"byte_end":6969476,"line_start":760,"line_end":760,"column_start":8,"column_end":16},"name":"max_m128","qualname":"::x86_x64::sse::max_m128","value":"pub fn max_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `max(a, b)`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = max_m128(a, b).to_array();\n assert_eq!(c, [5.0, 12.0, 7.0, 8.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `max(a, b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969124,"byte_end":6969149,"line_start":749,"line_end":749,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969150,"byte_end":6969157,"line_start":750,"line_end":750,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969158,"byte_end":6969181,"line_start":751,"line_end":751,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969182,"byte_end":6969234,"line_start":752,"line_end":752,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969235,"byte_end":6969286,"line_start":753,"line_end":753,"column_start":1,"column_end":52}},{"value":"/ let c = max_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969287,"byte_end":6969325,"line_start":754,"line_end":754,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(c, [5.0, 12.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969326,"byte_end":6969367,"line_start":755,"line_end":755,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969368,"byte_end":6969375,"line_start":756,"line_end":756,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969376,"byte_end":6969387,"line_start":757,"line_end":757,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969388,"byte_end":6969405,"line_start":758,"line_end":758,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":535},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969917,"byte_end":6969927,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"max_m128_s","qualname":"::x86_x64::sse::max_m128_s","value":"pub fn max_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `max(a, b)`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = max_m128_s(a, b).to_array();\n assert_eq!(c, [5.0, 12.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `max(a, b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969548,"byte_end":6969596,"line_start":764,"line_end":764,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969597,"byte_end":6969604,"line_start":765,"line_end":765,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969605,"byte_end":6969628,"line_start":766,"line_end":766,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969629,"byte_end":6969681,"line_start":767,"line_end":767,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969682,"byte_end":6969733,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ let c = max_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969734,"byte_end":6969774,"line_start":769,"line_end":769,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [5.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969775,"byte_end":6969816,"line_start":770,"line_end":770,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969817,"byte_end":6969824,"line_start":771,"line_end":771,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969825,"byte_end":6969836,"line_start":772,"line_end":772,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969837,"byte_end":6969854,"line_start":773,"line_end":773,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":536},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970342,"byte_end":6970350,"line_start":790,"line_end":790,"column_start":8,"column_end":16},"name":"min_m128","qualname":"::x86_x64::sse::min_m128","value":"pub fn min_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `min(a, b)`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = min_m128(a, b).to_array();\n assert_eq!(c, [1.0, 6.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `min(a, b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6969999,"byte_end":6970024,"line_start":779,"line_end":779,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970025,"byte_end":6970032,"line_start":780,"line_end":780,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970033,"byte_end":6970056,"line_start":781,"line_end":781,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970057,"byte_end":6970109,"line_start":782,"line_end":782,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970110,"byte_end":6970161,"line_start":783,"line_end":783,"column_start":1,"column_end":52}},{"value":"/ let c = min_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970162,"byte_end":6970200,"line_start":784,"line_end":784,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(c, [1.0, 6.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970201,"byte_end":6970241,"line_start":785,"line_end":785,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970242,"byte_end":6970249,"line_start":786,"line_end":786,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970250,"byte_end":6970261,"line_start":787,"line_end":787,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970262,"byte_end":6970279,"line_start":788,"line_end":788,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970791,"byte_end":6970801,"line_start":805,"line_end":805,"column_start":8,"column_end":18},"name":"min_m128_s","qualname":"::x86_x64::sse::min_m128_s","value":"pub fn min_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `min(a, b)`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([0.0, 6.0, 7.0, 8.5]);\n let c = min_m128_s(a, b).to_array();\n assert_eq!(c, [0.0, 12.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `min(a, b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970422,"byte_end":6970470,"line_start":794,"line_end":794,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970471,"byte_end":6970478,"line_start":795,"line_end":795,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970479,"byte_end":6970502,"line_start":796,"line_end":796,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970503,"byte_end":6970555,"line_start":797,"line_end":797,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([0.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970556,"byte_end":6970607,"line_start":798,"line_end":798,"column_start":1,"column_end":52}},{"value":"/ let c = min_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970608,"byte_end":6970648,"line_start":799,"line_end":799,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [0.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970649,"byte_end":6970690,"line_start":800,"line_end":800,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970691,"byte_end":6970698,"line_start":801,"line_end":801,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970699,"byte_end":6970710,"line_start":802,"line_end":802,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970711,"byte_end":6970728,"line_start":803,"line_end":803,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971254,"byte_end":6971265,"line_start":820,"line_end":820,"column_start":8,"column_end":19},"name":"move_m128_s","qualname":"::x86_x64::sse::move_m128_s","value":"pub fn move_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Move the low lane of `b` to `a`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([8.0, 6.0, 7.0, 8.5]);\n let c = move_m128_s(a, b).to_array();\n assert_eq!(c, [8.0, 12.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Move the low lane of `b` to `a`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970873,"byte_end":6970932,"line_start":809,"line_end":809,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970933,"byte_end":6970940,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970941,"byte_end":6970964,"line_start":811,"line_end":811,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6970965,"byte_end":6971017,"line_start":812,"line_end":812,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([8.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971018,"byte_end":6971069,"line_start":813,"line_end":813,"column_start":1,"column_end":52}},{"value":"/ let c = move_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971070,"byte_end":6971111,"line_start":814,"line_end":814,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [8.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971112,"byte_end":6971153,"line_start":815,"line_end":815,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971154,"byte_end":6971161,"line_start":816,"line_end":816,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971162,"byte_end":6971173,"line_start":817,"line_end":817,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971174,"byte_end":6971191,"line_start":818,"line_end":818,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971744,"byte_end":6971762,"line_start":835,"line_end":835,"column_start":8,"column_end":26},"name":"move_high_low_m128","qualname":"::x86_x64::sse::move_high_low_m128","value":"pub fn move_high_low_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Move the high lanes of `b` to the low lanes of `a`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([8.0, 6.0, 7.0, 8.5]);\n let c = move_high_low_m128(a, b).to_array();\n assert_eq!(c, [7.0, 8.5, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Move the high lanes of `b` to the low lanes of `a`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971338,"byte_end":6971416,"line_start":824,"line_end":824,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971417,"byte_end":6971424,"line_start":825,"line_end":825,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971425,"byte_end":6971448,"line_start":826,"line_end":826,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971449,"byte_end":6971501,"line_start":827,"line_end":827,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([8.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971502,"byte_end":6971553,"line_start":828,"line_end":828,"column_start":1,"column_end":52}},{"value":"/ let c = move_high_low_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971554,"byte_end":6971602,"line_start":829,"line_end":829,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [7.0, 8.5, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971603,"byte_end":6971643,"line_start":830,"line_end":830,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971644,"byte_end":6971651,"line_start":831,"line_end":831,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971652,"byte_end":6971663,"line_start":832,"line_end":832,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971664,"byte_end":6971681,"line_start":833,"line_end":833,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972244,"byte_end":6972262,"line_start":850,"line_end":850,"column_start":8,"column_end":26},"name":"move_low_high_m128","qualname":"::x86_x64::sse::move_low_high_m128","value":"pub fn move_low_high_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Move the low lanes of `b` to the high lanes of `a`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);\n let b = m128::from_array([8.0, 6.0, 7.0, 8.5]);\n let c = move_low_high_m128(a, b).to_array();\n assert_eq!(c, [1.0, 12.0, 8.0, 6.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Move the low lanes of `b` to the high lanes of `a`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971837,"byte_end":6971915,"line_start":839,"line_end":839,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971916,"byte_end":6971923,"line_start":840,"line_end":840,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971924,"byte_end":6971947,"line_start":841,"line_end":841,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 12.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6971948,"byte_end":6972000,"line_start":842,"line_end":842,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([8.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972001,"byte_end":6972052,"line_start":843,"line_end":843,"column_start":1,"column_end":52}},{"value":"/ let c = move_low_high_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972053,"byte_end":6972101,"line_start":844,"line_end":844,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [1.0, 12.0, 8.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972102,"byte_end":6972143,"line_start":845,"line_end":845,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972144,"byte_end":6972151,"line_start":846,"line_end":846,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972152,"byte_end":6972163,"line_start":847,"line_end":847,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972164,"byte_end":6972181,"line_start":848,"line_end":848,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972690,"byte_end":6972704,"line_start":866,"line_end":866,"column_start":8,"column_end":22},"name":"move_mask_m128","qualname":"::x86_x64::sse::move_mask_m128","value":"pub fn move_mask_m128(m128) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Gathers the sign bit of each lane.","sig":null,"attributes":[{"value":"/ Gathers the sign bit of each lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972337,"byte_end":6972375,"line_start":854,"line_end":854,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972376,"byte_end":6972379,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ The output has lane 0 as bit 0, lane 1 as bit 1, and so on.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972380,"byte_end":6972443,"line_start":856,"line_end":856,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972444,"byte_end":6972451,"line_start":857,"line_end":857,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972452,"byte_end":6972475,"line_start":858,"line_end":858,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([-1.0, 12.0, -3.0, -4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972476,"byte_end":6972531,"line_start":859,"line_end":859,"column_start":1,"column_end":56}},{"value":"/ let i = move_mask_m128(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972532,"byte_end":6972562,"line_start":860,"line_end":860,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(i, 0b1101);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972563,"byte_end":6972589,"line_start":861,"line_end":861,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972590,"byte_end":6972597,"line_start":862,"line_end":862,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972598,"byte_end":6972609,"line_start":863,"line_end":863,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972610,"byte_end":6972627,"line_start":864,"line_end":864,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":542},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973101,"byte_end":6973109,"line_start":881,"line_end":881,"column_start":8,"column_end":16},"name":"mul_m128","qualname":"::x86_x64::sse::mul_m128","value":"pub fn mul_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a * b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = mul_m128(a, b).to_array();\n assert_eq!(c, [5.0, 12.0, 21.0, 34.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a * b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972760,"byte_end":6972781,"line_start":870,"line_end":870,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972782,"byte_end":6972789,"line_start":871,"line_end":871,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972790,"byte_end":6972813,"line_start":872,"line_end":872,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972814,"byte_end":6972865,"line_start":873,"line_end":873,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972866,"byte_end":6972917,"line_start":874,"line_end":874,"column_start":1,"column_end":52}},{"value":"/ let c = mul_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972918,"byte_end":6972956,"line_start":875,"line_end":875,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(c, [5.0, 12.0, 21.0, 34.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6972957,"byte_end":6973000,"line_start":876,"line_end":876,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973001,"byte_end":6973008,"line_start":877,"line_end":877,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973009,"byte_end":6973020,"line_start":878,"line_end":878,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973021,"byte_end":6973038,"line_start":879,"line_end":879,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":543},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973544,"byte_end":6973554,"line_start":896,"line_end":896,"column_start":8,"column_end":18},"name":"mul_m128_s","qualname":"::x86_x64::sse::mul_m128_s","value":"pub fn mul_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a * b`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);\n let c = mul_m128_s(a, b).to_array();\n assert_eq!(c, [5.0, 2.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `a * b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973181,"byte_end":6973225,"line_start":885,"line_end":885,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973226,"byte_end":6973233,"line_start":886,"line_end":886,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973234,"byte_end":6973257,"line_start":887,"line_end":887,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973258,"byte_end":6973309,"line_start":888,"line_end":888,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973310,"byte_end":6973361,"line_start":889,"line_end":889,"column_start":1,"column_end":52}},{"value":"/ let c = mul_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973362,"byte_end":6973402,"line_start":890,"line_end":890,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [5.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973403,"byte_end":6973443,"line_start":891,"line_end":891,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973444,"byte_end":6973451,"line_start":892,"line_end":892,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973452,"byte_end":6973463,"line_start":893,"line_end":893,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973464,"byte_end":6973481,"line_start":894,"line_end":894,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973965,"byte_end":6973975,"line_start":911,"line_end":911,"column_start":8,"column_end":18},"name":"bitor_m128","qualname":"::x86_x64::sse::bitor_m128","value":"pub fn bitor_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a | b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);\n let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);\n let c = bitor_m128(a, b).to_array();\n assert_eq!(c, [1.0, 1.0, 1.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a | b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973626,"byte_end":6973646,"line_start":900,"line_end":900,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973647,"byte_end":6973654,"line_start":901,"line_end":901,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973655,"byte_end":6973678,"line_start":902,"line_end":902,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973679,"byte_end":6973730,"line_start":903,"line_end":903,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973731,"byte_end":6973782,"line_start":904,"line_end":904,"column_start":1,"column_end":52}},{"value":"/ let c = bitor_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973783,"byte_end":6973823,"line_start":905,"line_end":905,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [1.0, 1.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973824,"byte_end":6973864,"line_start":906,"line_end":906,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973865,"byte_end":6973872,"line_start":907,"line_end":907,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973873,"byte_end":6973884,"line_start":908,"line_end":908,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6973885,"byte_end":6973902,"line_start":909,"line_end":909,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":545},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974432,"byte_end":6974447,"line_start":928,"line_end":928,"column_start":8,"column_end":23},"name":"reciprocal_m128","qualname":"::x86_x64::sse::reciprocal_m128","value":"pub fn reciprocal_m128(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `1.0 / a` approximation.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 4.0, 8.0]);\n let b = reciprocal_m128(a).to_array();\n let expected = [1.0, 0.5, 0.25, 0.125];\n for i in 0..4 {\n   assert!((b[i] - expected[i]).abs() < 0.001);\n }\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `1.0 / a` approximation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974046,"byte_end":6974083,"line_start":915,"line_end":915,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974084,"byte_end":6974091,"line_start":916,"line_end":916,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974092,"byte_end":6974115,"line_start":917,"line_end":917,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 4.0, 8.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974116,"byte_end":6974167,"line_start":918,"line_end":918,"column_start":1,"column_end":52}},{"value":"/ let b = reciprocal_m128(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974168,"byte_end":6974210,"line_start":919,"line_end":919,"column_start":1,"column_end":43}},{"value":"/ let expected = [1.0, 0.5, 0.25, 0.125];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974211,"byte_end":6974254,"line_start":920,"line_end":920,"column_start":1,"column_end":44}},{"value":"/ for i in 0..4 {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974255,"byte_end":6974274,"line_start":921,"line_end":921,"column_start":1,"column_end":20}},{"value":"/   assert!((b[i] - expected[i]).abs() < 0.001);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974275,"byte_end":6974325,"line_start":922,"line_end":922,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974326,"byte_end":6974331,"line_start":923,"line_end":923,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974332,"byte_end":6974339,"line_start":924,"line_end":924,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974340,"byte_end":6974351,"line_start":925,"line_end":925,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974352,"byte_end":6974369,"line_start":926,"line_end":926,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974913,"byte_end":6974930,"line_start":945,"line_end":945,"column_start":8,"column_end":25},"name":"reciprocal_m128_s","qualname":"::x86_x64::sse::reciprocal_m128_s","value":"pub fn reciprocal_m128_s(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `1.0 / a` approximation, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 4.0, 8.0]);\n let b = reciprocal_m128_s(a).to_array();\n let expected = [1.0, 2.0, 4.0, 8.0];\n for i in 0..4 {\n   assert!((b[i] - expected[i]).abs() < 0.001);\n }\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `1.0 / a` approximation, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974505,"byte_end":6974565,"line_start":932,"line_end":932,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974566,"byte_end":6974573,"line_start":933,"line_end":933,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974574,"byte_end":6974597,"line_start":934,"line_end":934,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 4.0, 8.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974598,"byte_end":6974649,"line_start":935,"line_end":935,"column_start":1,"column_end":52}},{"value":"/ let b = reciprocal_m128_s(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974650,"byte_end":6974694,"line_start":936,"line_end":936,"column_start":1,"column_end":45}},{"value":"/ let expected = [1.0, 2.0, 4.0, 8.0];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974695,"byte_end":6974735,"line_start":937,"line_end":937,"column_start":1,"column_end":41}},{"value":"/ for i in 0..4 {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974736,"byte_end":6974755,"line_start":938,"line_end":938,"column_start":1,"column_end":20}},{"value":"/   assert!((b[i] - expected[i]).abs() < 0.001);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974756,"byte_end":6974806,"line_start":939,"line_end":939,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974807,"byte_end":6974812,"line_start":940,"line_end":940,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974813,"byte_end":6974820,"line_start":941,"line_end":941,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974821,"byte_end":6974832,"line_start":942,"line_end":942,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974833,"byte_end":6974850,"line_start":943,"line_end":943,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975389,"byte_end":6975409,"line_start":962,"line_end":962,"column_start":8,"column_end":28},"name":"reciprocal_sqrt_m128","qualname":"::x86_x64::sse::reciprocal_sqrt_m128","value":"pub fn reciprocal_sqrt_m128(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `1.0 / sqrt(a)` approximation.\n ```\n # use safe_arch::*;\n let a = m128::from_array([16.0, 9.0, 4.0, 25.0]);\n let b = reciprocal_sqrt_m128(a).to_array();\n let expected = [0.25, 0.33333, 0.5, 0.2];\n for i in 0..4 {\n   assert!((b[i] - expected[i]).abs() < 0.001);\n }\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `1.0 / sqrt(a)` approximation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6974988,"byte_end":6975031,"line_start":949,"line_end":949,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975032,"byte_end":6975039,"line_start":950,"line_end":950,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975040,"byte_end":6975063,"line_start":951,"line_end":951,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([16.0, 9.0, 4.0, 25.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975064,"byte_end":6975117,"line_start":952,"line_end":952,"column_start":1,"column_end":54}},{"value":"/ let b = reciprocal_sqrt_m128(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975118,"byte_end":6975165,"line_start":953,"line_end":953,"column_start":1,"column_end":48}},{"value":"/ let expected = [0.25, 0.33333, 0.5, 0.2];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975166,"byte_end":6975211,"line_start":954,"line_end":954,"column_start":1,"column_end":46}},{"value":"/ for i in 0..4 {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975212,"byte_end":6975231,"line_start":955,"line_end":955,"column_start":1,"column_end":20}},{"value":"/   assert!((b[i] - expected[i]).abs() < 0.001);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975232,"byte_end":6975282,"line_start":956,"line_end":956,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975283,"byte_end":6975288,"line_start":957,"line_end":957,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975289,"byte_end":6975296,"line_start":958,"line_end":958,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975297,"byte_end":6975308,"line_start":959,"line_end":959,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975309,"byte_end":6975326,"line_start":960,"line_end":960,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":548},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975892,"byte_end":6975914,"line_start":979,"line_end":979,"column_start":8,"column_end":30},"name":"reciprocal_sqrt_m128_s","qualname":"::x86_x64::sse::reciprocal_sqrt_m128_s","value":"pub fn reciprocal_sqrt_m128_s(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `1.0 / sqrt(a)` approximation, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([16.0, 8.0, 9.0, 10.0]);\n let b = reciprocal_sqrt_m128_s(a).to_array();\n let expected = [0.25, 8.0, 9.0, 10.0];\n for i in 0..4 {\n   assert!((b[i] - expected[i]).abs() < 0.001);\n }\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `1.0 / sqrt(a)` approximation, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975469,"byte_end":6975535,"line_start":966,"line_end":966,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975536,"byte_end":6975543,"line_start":967,"line_end":967,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975544,"byte_end":6975567,"line_start":968,"line_end":968,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([16.0, 8.0, 9.0, 10.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975568,"byte_end":6975621,"line_start":969,"line_end":969,"column_start":1,"column_end":54}},{"value":"/ let b = reciprocal_sqrt_m128_s(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975622,"byte_end":6975671,"line_start":970,"line_end":970,"column_start":1,"column_end":50}},{"value":"/ let expected = [0.25, 8.0, 9.0, 10.0];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975672,"byte_end":6975714,"line_start":971,"line_end":971,"column_start":1,"column_end":43}},{"value":"/ for i in 0..4 {","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975715,"byte_end":6975734,"line_start":972,"line_end":972,"column_start":1,"column_end":20}},{"value":"/   assert!((b[i] - expected[i]).abs() < 0.001);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975735,"byte_end":6975785,"line_start":973,"line_end":973,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975786,"byte_end":6975791,"line_start":974,"line_end":974,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975792,"byte_end":6975799,"line_start":975,"line_end":975,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975800,"byte_end":6975811,"line_start":976,"line_end":976,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975812,"byte_end":6975829,"line_start":977,"line_end":977,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":549},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976306,"byte_end":6976314,"line_start":993,"line_end":993,"column_start":8,"column_end":16},"name":"set_m128","qualname":"::x86_x64::sse::set_m128","value":"pub fn set_m128(f32, f32, f32, f32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a = set_m128(1.0, 2.0, 3.0, 4.0).to_array();\n let b = m128::from_array([4.0, 3.0, 2.0, 1.0]).to_array();\n assert_eq!(a, b);\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6975974,"byte_end":6976035,"line_start":983,"line_end":983,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976036,"byte_end":6976043,"line_start":984,"line_end":984,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976044,"byte_end":6976067,"line_start":985,"line_end":985,"column_start":1,"column_end":24}},{"value":"/ let a = set_m128(1.0, 2.0, 3.0, 4.0).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976068,"byte_end":6976120,"line_start":986,"line_end":986,"column_start":1,"column_end":53}},{"value":"/ let b = m128::from_array([4.0, 3.0, 2.0, 1.0]).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976121,"byte_end":6976183,"line_start":987,"line_end":987,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976184,"byte_end":6976205,"line_start":988,"line_end":988,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976206,"byte_end":6976213,"line_start":989,"line_end":989,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976214,"byte_end":6976225,"line_start":990,"line_end":990,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976226,"byte_end":6976243,"line_start":991,"line_end":991,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976743,"byte_end":6976753,"line_start":1007,"line_end":1007,"column_start":8,"column_end":18},"name":"set_m128_s","qualname":"::x86_x64::sse::set_m128_s","value":"pub fn set_m128_s(f32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a = set_m128_s(1.0).to_array();\n let b = m128::from_array([1.0, 0.0, 0.0, 0.0]).to_array();\n assert_eq!(a, b);\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976424,"byte_end":6976485,"line_start":997,"line_end":997,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976486,"byte_end":6976493,"line_start":998,"line_end":998,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976494,"byte_end":6976517,"line_start":999,"line_end":999,"column_start":1,"column_end":24}},{"value":"/ let a = set_m128_s(1.0).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976518,"byte_end":6976557,"line_start":1000,"line_end":1000,"column_start":1,"column_end":40}},{"value":"/ let b = m128::from_array([1.0, 0.0, 0.0, 0.0]).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976558,"byte_end":6976620,"line_start":1001,"line_end":1001,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976621,"byte_end":6976642,"line_start":1002,"line_end":1002,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976643,"byte_end":6976650,"line_start":1003,"line_end":1003,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976651,"byte_end":6976662,"line_start":1004,"line_end":1004,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976663,"byte_end":6976680,"line_start":1005,"line_end":1005,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":551},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977108,"byte_end":6977122,"line_start":1021,"line_end":1021,"column_start":8,"column_end":22},"name":"set_splat_m128","qualname":"::x86_x64::sse::set_splat_m128","value":"pub fn set_splat_m128(f32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Splats the value to all lanes.\n ```\n # use safe_arch::*;\n let a = set_splat_m128(1.0).to_array();\n let b = m128::from_array([1.0, 1.0, 1.0, 1.0]).to_array();\n assert_eq!(a, b);\n ```\n","sig":null,"attributes":[{"value":"/ Splats the value to all lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976812,"byte_end":6976846,"line_start":1011,"line_end":1011,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976847,"byte_end":6976854,"line_start":1012,"line_end":1012,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976855,"byte_end":6976878,"line_start":1013,"line_end":1013,"column_start":1,"column_end":24}},{"value":"/ let a = set_splat_m128(1.0).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976879,"byte_end":6976922,"line_start":1014,"line_end":1014,"column_start":1,"column_end":44}},{"value":"/ let b = m128::from_array([1.0, 1.0, 1.0, 1.0]).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976923,"byte_end":6976985,"line_start":1015,"line_end":1015,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6976986,"byte_end":6977007,"line_start":1016,"line_end":1016,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977008,"byte_end":6977015,"line_start":1017,"line_end":1017,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977016,"byte_end":6977027,"line_start":1018,"line_end":1018,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977028,"byte_end":6977045,"line_start":1019,"line_end":1019,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977522,"byte_end":6977539,"line_start":1035,"line_end":1035,"column_start":8,"column_end":25},"name":"set_reversed_m128","qualname":"::x86_x64::sse::set_reversed_m128","value":"pub fn set_reversed_m128(f32, f32, f32, f32) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128`, first arg is the low lane.\n ```\n # use safe_arch::*;\n let a = set_reversed_m128(1.0, 2.0, 3.0, 4.0).to_array();\n let b = m128::from_array([1.0, 2.0, 3.0, 4.0]).to_array();\n assert_eq!(a, b);\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128`, first arg is the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977182,"byte_end":6977242,"line_start":1025,"line_end":1025,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977243,"byte_end":6977250,"line_start":1026,"line_end":1026,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977251,"byte_end":6977274,"line_start":1027,"line_end":1027,"column_start":1,"column_end":24}},{"value":"/ let a = set_reversed_m128(1.0, 2.0, 3.0, 4.0).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977275,"byte_end":6977336,"line_start":1028,"line_end":1028,"column_start":1,"column_end":62}},{"value":"/ let b = m128::from_array([1.0, 2.0, 3.0, 4.0]).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977337,"byte_end":6977399,"line_start":1029,"line_end":1029,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977400,"byte_end":6977421,"line_start":1030,"line_end":1030,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977422,"byte_end":6977429,"line_start":1031,"line_end":1031,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977430,"byte_end":6977441,"line_start":1032,"line_end":1032,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977442,"byte_end":6977459,"line_start":1033,"line_end":1033,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":553},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977881,"byte_end":6977892,"line_start":1048,"line_end":1048,"column_start":8,"column_end":19},"name":"zeroed_m128","qualname":"::x86_x64::sse::zeroed_m128","value":"pub fn zeroed_m128() -> m128","parent":null,"children":[],"decl_id":null,"docs":" All lanes zero.\n ```\n # use safe_arch::*;\n let a = zeroed_m128().to_array();\n assert_eq!(a, [0.0, 0.0, 0.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ All lanes zero.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977650,"byte_end":6977669,"line_start":1039,"line_end":1039,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977670,"byte_end":6977677,"line_start":1040,"line_end":1040,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977678,"byte_end":6977701,"line_start":1041,"line_end":1041,"column_start":1,"column_end":24}},{"value":"/ let a = zeroed_m128().to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977702,"byte_end":6977739,"line_start":1042,"line_end":1042,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(a, [0.0, 0.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977740,"byte_end":6977780,"line_start":1043,"line_end":1043,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977781,"byte_end":6977788,"line_start":1044,"line_end":1044,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977789,"byte_end":6977800,"line_start":1045,"line_end":1045,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6977801,"byte_end":6977818,"line_start":1046,"line_end":1046,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":555},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980034,"byte_end":6980043,"line_start":1105,"line_end":1105,"column_start":8,"column_end":17},"name":"sqrt_m128","qualname":"::x86_x64::sse::sqrt_m128","value":"pub fn sqrt_m128(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `sqrt(a)`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([25.0, 16.0, 9.0, 4.0]);\n let b = sqrt_m128(a).to_array();\n assert_eq!(b, [5.0, 4.0, 3.0, 2.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `sqrt(a)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979746,"byte_end":6979769,"line_start":1095,"line_end":1095,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979770,"byte_end":6979777,"line_start":1096,"line_end":1096,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979778,"byte_end":6979801,"line_start":1097,"line_end":1097,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([25.0, 16.0, 9.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979802,"byte_end":6979855,"line_start":1098,"line_end":1098,"column_start":1,"column_end":54}},{"value":"/ let b = sqrt_m128(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979856,"byte_end":6979892,"line_start":1099,"line_end":1099,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, [5.0, 4.0, 3.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979893,"byte_end":6979933,"line_start":1100,"line_end":1100,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979934,"byte_end":6979941,"line_start":1101,"line_end":1101,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979942,"byte_end":6979953,"line_start":1102,"line_end":1102,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6979954,"byte_end":6979971,"line_start":1103,"line_end":1103,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":556},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980413,"byte_end":6980424,"line_start":1119,"line_end":1119,"column_start":8,"column_end":19},"name":"sqrt_m128_s","qualname":"::x86_x64::sse::sqrt_m128_s","value":"pub fn sqrt_m128_s(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `sqrt(a)`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([4.0, 8.0, 7.0, 6.0]);\n let b = sqrt_m128_s(a).to_array();\n assert_eq!(b, [2.0, 8.0, 7.0, 6.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `sqrt(a)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980102,"byte_end":6980148,"line_start":1109,"line_end":1109,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980149,"byte_end":6980156,"line_start":1110,"line_end":1110,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980157,"byte_end":6980180,"line_start":1111,"line_end":1111,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([4.0, 8.0, 7.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980181,"byte_end":6980232,"line_start":1112,"line_end":1112,"column_start":1,"column_end":52}},{"value":"/ let b = sqrt_m128_s(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980233,"byte_end":6980271,"line_start":1113,"line_end":1113,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(b, [2.0, 8.0, 7.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980272,"byte_end":6980312,"line_start":1114,"line_end":1114,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980313,"byte_end":6980320,"line_start":1115,"line_end":1115,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980321,"byte_end":6980332,"line_start":1116,"line_end":1116,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980333,"byte_end":6980350,"line_start":1117,"line_end":1117,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":557},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980833,"byte_end":6980843,"line_start":1134,"line_end":1134,"column_start":8,"column_end":18},"name":"store_m128","qualname":"::x86_x64::sse::store_m128","value":"pub fn store_m128(&mut m128, m128)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let mut b = zeroed_m128();\n store_m128(&mut b, a);\n let c = b.to_array();\n assert_eq!(c, [10.0, 12.0, 13.0, 14.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980483,"byte_end":6980527,"line_start":1123,"line_end":1123,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980528,"byte_end":6980535,"line_start":1124,"line_end":1124,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980536,"byte_end":6980559,"line_start":1125,"line_end":1125,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980560,"byte_end":6980615,"line_start":1126,"line_end":1126,"column_start":1,"column_end":56}},{"value":"/ let mut b = zeroed_m128();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980616,"byte_end":6980646,"line_start":1127,"line_end":1127,"column_start":1,"column_end":31}},{"value":"/ store_m128(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980647,"byte_end":6980673,"line_start":1128,"line_end":1128,"column_start":1,"column_end":27}},{"value":"/ let c = b.to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980674,"byte_end":6980699,"line_start":1129,"line_end":1129,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(c, [10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980700,"byte_end":6980744,"line_start":1130,"line_end":1130,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980745,"byte_end":6980752,"line_start":1131,"line_end":1131,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980753,"byte_end":6980770,"line_start":1132,"line_end":1132,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":558},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981236,"byte_end":6981248,"line_start":1148,"line_end":1148,"column_start":8,"column_end":20},"name":"store_m128_s","qualname":"::x86_x64::sse::store_m128_s","value":"pub fn store_m128_s(&mut f32, m128)","parent":null,"children":[],"decl_id":null,"docs":" Stores the low lane value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let mut f = 0.0;\n store_m128_s(&mut f, a);\n assert_eq!(f, 10.0);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the low lane value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980931,"byte_end":6980984,"line_start":1138,"line_end":1138,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980985,"byte_end":6980992,"line_start":1139,"line_end":1139,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6980993,"byte_end":6981016,"line_start":1140,"line_end":1140,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981017,"byte_end":6981072,"line_start":1141,"line_end":1141,"column_start":1,"column_end":56}},{"value":"/ let mut f = 0.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981073,"byte_end":6981093,"line_start":1142,"line_end":1142,"column_start":1,"column_end":21}},{"value":"/ store_m128_s(&mut f, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981094,"byte_end":6981122,"line_start":1143,"line_end":1143,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(f, 10.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981123,"byte_end":6981147,"line_start":1144,"line_end":1144,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981148,"byte_end":6981155,"line_start":1145,"line_end":1145,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981156,"byte_end":6981173,"line_start":1146,"line_end":1146,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981700,"byte_end":6981716,"line_start":1163,"line_end":1163,"column_start":8,"column_end":24},"name":"store_splat_m128","qualname":"::x86_x64::sse::store_splat_m128","value":"pub fn store_splat_m128(&mut m128, m128)","parent":null,"children":[],"decl_id":null,"docs":" Stores the low lane value to all lanes of the reference given.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let mut b = zeroed_m128();\n store_splat_m128(&mut b, a);\n let c = b.to_array();\n assert_eq!(c, [10.0, 10.0, 10.0, 10.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the low lane value to all lanes of the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981322,"byte_end":6981388,"line_start":1152,"line_end":1152,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981389,"byte_end":6981396,"line_start":1153,"line_end":1153,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981397,"byte_end":6981420,"line_start":1154,"line_end":1154,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981421,"byte_end":6981476,"line_start":1155,"line_end":1155,"column_start":1,"column_end":56}},{"value":"/ let mut b = zeroed_m128();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981477,"byte_end":6981507,"line_start":1156,"line_end":1156,"column_start":1,"column_end":31}},{"value":"/ store_splat_m128(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981508,"byte_end":6981540,"line_start":1157,"line_end":1157,"column_start":1,"column_end":33}},{"value":"/ let c = b.to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981541,"byte_end":6981566,"line_start":1158,"line_end":1158,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(c, [10.0, 10.0, 10.0, 10.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981567,"byte_end":6981611,"line_start":1159,"line_end":1159,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981612,"byte_end":6981619,"line_start":1160,"line_end":1160,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981620,"byte_end":6981637,"line_start":1161,"line_end":1161,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":560},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982180,"byte_end":6982198,"line_start":1178,"line_end":1178,"column_start":8,"column_end":26},"name":"store_reverse_m128","qualname":"::x86_x64::sse::store_reverse_m128","value":"pub fn store_reverse_m128(&mut m128, m128)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given in reverse order.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);\n let mut b = zeroed_m128();\n store_reverse_m128(&mut b, a);\n let c = b.to_array();\n assert_eq!(c, [14.0, 13.0, 12.0, 10.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given in reverse order.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981805,"byte_end":6981866,"line_start":1167,"line_end":1167,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981867,"byte_end":6981874,"line_start":1168,"line_end":1168,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981875,"byte_end":6981898,"line_start":1169,"line_end":1169,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981899,"byte_end":6981954,"line_start":1170,"line_end":1170,"column_start":1,"column_end":56}},{"value":"/ let mut b = zeroed_m128();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981955,"byte_end":6981985,"line_start":1171,"line_end":1171,"column_start":1,"column_end":31}},{"value":"/ store_reverse_m128(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6981986,"byte_end":6982020,"line_start":1172,"line_end":1172,"column_start":1,"column_end":35}},{"value":"/ let c = b.to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982021,"byte_end":6982046,"line_start":1173,"line_end":1173,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(c, [14.0, 13.0, 12.0, 10.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982047,"byte_end":6982091,"line_start":1174,"line_end":1174,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982092,"byte_end":6982099,"line_start":1175,"line_end":1175,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982100,"byte_end":6982117,"line_start":1176,"line_end":1176,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":561},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982793,"byte_end":6982813,"line_start":1196,"line_end":1196,"column_start":8,"column_end":28},"name":"store_unaligned_m128","qualname":"::x86_x64::sse::store_unaligned_m128","value":"pub fn store_unaligned_m128(&mut [f32; ], m128)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982287,"byte_end":6982331,"line_start":1182,"line_end":1182,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982332,"byte_end":6982335,"line_start":1183,"line_end":1183,"column_start":1,"column_end":4}},{"value":"/ This generally has no speed penalty if the reference happens to be 16-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982336,"byte_end":6982414,"line_start":1184,"line_end":1184,"column_start":1,"column_end":79}},{"value":"/ aligned, but there is a slight speed penalty if the reference is only 4-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982415,"byte_end":6982495,"line_start":1185,"line_end":1185,"column_start":1,"column_end":81}},{"value":"/ aligned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982496,"byte_end":6982508,"line_start":1186,"line_end":1186,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982509,"byte_end":6982516,"line_start":1187,"line_end":1187,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982517,"byte_end":6982540,"line_start":1188,"line_end":1188,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982541,"byte_end":6982596,"line_start":1189,"line_end":1189,"column_start":1,"column_end":56}},{"value":"/ let mut b = [0.0; 4];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982597,"byte_end":6982622,"line_start":1190,"line_end":1190,"column_start":1,"column_end":26}},{"value":"/ store_unaligned_m128(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982623,"byte_end":6982659,"line_start":1191,"line_end":1191,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, [10.0, 12.0, 13.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982660,"byte_end":6982704,"line_start":1192,"line_end":1192,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982705,"byte_end":6982712,"line_start":1193,"line_end":1193,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982713,"byte_end":6982730,"line_start":1194,"line_end":1194,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983235,"byte_end":6983243,"line_start":1211,"line_end":1211,"column_start":8,"column_end":16},"name":"sub_m128","qualname":"::x86_x64::sse::sub_m128","value":"pub fn sub_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a - b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 8.0, 12.0, 3.0]);\n let c = sub_m128(a, b).to_array();\n assert_eq!(c, [-4.0, -6.0, -9.0, 1.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a - b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982893,"byte_end":6982914,"line_start":1200,"line_end":1200,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982915,"byte_end":6982922,"line_start":1201,"line_end":1201,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982923,"byte_end":6982946,"line_start":1202,"line_end":1202,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982947,"byte_end":6982998,"line_start":1203,"line_end":1203,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 8.0, 12.0, 3.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6982999,"byte_end":6983051,"line_start":1204,"line_end":1204,"column_start":1,"column_end":53}},{"value":"/ let c = sub_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983052,"byte_end":6983090,"line_start":1205,"line_end":1205,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(c, [-4.0, -6.0, -9.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983091,"byte_end":6983134,"line_start":1206,"line_end":1206,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983135,"byte_end":6983142,"line_start":1207,"line_end":1207,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983143,"byte_end":6983154,"line_start":1208,"line_end":1208,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983155,"byte_end":6983172,"line_start":1209,"line_end":1209,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":564},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983680,"byte_end":6983690,"line_start":1226,"line_end":1226,"column_start":8,"column_end":18},"name":"sub_m128_s","qualname":"::x86_x64::sse::sub_m128_s","value":"pub fn sub_m128_s(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a - b`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 8.0, 12.0, 3.0]);\n let c = sub_m128_s(a, b).to_array();\n assert_eq!(c, [-4.0, 2.0, 3.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `a - b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983315,"byte_end":6983359,"line_start":1215,"line_end":1215,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983360,"byte_end":6983367,"line_start":1216,"line_end":1216,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983368,"byte_end":6983391,"line_start":1217,"line_end":1217,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983392,"byte_end":6983443,"line_start":1218,"line_end":1218,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 8.0, 12.0, 3.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983444,"byte_end":6983496,"line_start":1219,"line_end":1219,"column_start":1,"column_end":53}},{"value":"/ let c = sub_m128_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983497,"byte_end":6983537,"line_start":1220,"line_end":1220,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(c, [-4.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983538,"byte_end":6983579,"line_start":1221,"line_end":1221,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983580,"byte_end":6983587,"line_start":1222,"line_end":1222,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983588,"byte_end":6983599,"line_start":1223,"line_end":1223,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983600,"byte_end":6983617,"line_start":1224,"line_end":1224,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":565},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984441,"byte_end":6984460,"line_start":1245,"line_end":1245,"column_start":8,"column_end":27},"name":"transpose_four_m128","qualname":"::x86_x64::sse::transpose_four_m128","value":"pub fn transpose_four_m128(&mut m128, &mut m128, &mut m128, &mut m128)","parent":null,"children":[],"decl_id":null,"docs":" Transpose four `m128` as if they were a 4x4 matrix.\n ```\n # use safe_arch::*;\n let mut a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let mut b = m128::from_array([5.0, 6.0, 7.0, 8.0]);\n let mut c = m128::from_array([9.0, 10.0, 11.0, 12.0]);\n let mut d = m128::from_array([13.0, 14.0, 15.0, 16.0]);\n transpose_four_m128(&mut a, &mut b, &mut c, &mut d);\n assert_eq!(a.to_array(), [1.0, 5.0, 9.0, 13.0]);\n assert_eq!(b.to_array(), [2.0, 6.0, 10.0, 14.0]);\n assert_eq!(c.to_array(), [3.0, 7.0, 11.0, 15.0]);\n assert_eq!(d.to_array(), [4.0, 8.0, 12.0, 16.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Transpose four `m128` as if they were a 4x4 matrix.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983762,"byte_end":6983817,"line_start":1230,"line_end":1230,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983818,"byte_end":6983825,"line_start":1231,"line_end":1231,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983826,"byte_end":6983849,"line_start":1232,"line_end":1232,"column_start":1,"column_end":24}},{"value":"/ let mut a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983850,"byte_end":6983905,"line_start":1233,"line_end":1233,"column_start":1,"column_end":56}},{"value":"/ let mut b = m128::from_array([5.0, 6.0, 7.0, 8.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983906,"byte_end":6983961,"line_start":1234,"line_end":1234,"column_start":1,"column_end":56}},{"value":"/ let mut c = m128::from_array([9.0, 10.0, 11.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6983962,"byte_end":6984020,"line_start":1235,"line_end":1235,"column_start":1,"column_end":59}},{"value":"/ let mut d = m128::from_array([13.0, 14.0, 15.0, 16.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984021,"byte_end":6984080,"line_start":1236,"line_end":1236,"column_start":1,"column_end":60}},{"value":"/ transpose_four_m128(&mut a, &mut b, &mut c, &mut d);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984081,"byte_end":6984137,"line_start":1237,"line_end":1237,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(a.to_array(), [1.0, 5.0, 9.0, 13.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984138,"byte_end":6984190,"line_start":1238,"line_end":1238,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(b.to_array(), [2.0, 6.0, 10.0, 14.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984191,"byte_end":6984244,"line_start":1239,"line_end":1239,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c.to_array(), [3.0, 7.0, 11.0, 15.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984245,"byte_end":6984298,"line_start":1240,"line_end":1240,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(d.to_array(), [4.0, 8.0, 12.0, 16.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984299,"byte_end":6984352,"line_start":1241,"line_end":1241,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984353,"byte_end":6984360,"line_start":1242,"line_end":1242,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984361,"byte_end":6984378,"line_start":1243,"line_end":1243,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":566},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984975,"byte_end":6984991,"line_start":1262,"line_end":1262,"column_start":8,"column_end":24},"name":"unpack_high_m128","qualname":"::x86_x64::sse::unpack_high_m128","value":"pub fn unpack_high_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave high lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.0]);\n let c = unpack_high_m128(a, b).to_array();\n assert_eq!(c, [3.0, 7.0, 4.0, 8.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave high lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984598,"byte_end":6984650,"line_start":1251,"line_end":1251,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984651,"byte_end":6984658,"line_start":1252,"line_end":1252,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984659,"byte_end":6984682,"line_start":1253,"line_end":1253,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984683,"byte_end":6984734,"line_start":1254,"line_end":1254,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984735,"byte_end":6984786,"line_start":1255,"line_end":1255,"column_start":1,"column_end":52}},{"value":"/ let c = unpack_high_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984787,"byte_end":6984833,"line_start":1256,"line_end":1256,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [3.0, 7.0, 4.0, 8.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984834,"byte_end":6984874,"line_start":1257,"line_end":1257,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984875,"byte_end":6984882,"line_start":1258,"line_end":1258,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984883,"byte_end":6984894,"line_start":1259,"line_end":1259,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6984895,"byte_end":6984912,"line_start":1260,"line_end":1260,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":567},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985443,"byte_end":6985458,"line_start":1277,"line_end":1277,"column_start":8,"column_end":23},"name":"unpack_low_m128","qualname":"::x86_x64::sse::unpack_low_m128","value":"pub fn unpack_low_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave low lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let b = m128::from_array([5.0, 6.0, 7.0, 8.0]);\n let c = unpack_low_m128(a, b).to_array();\n assert_eq!(c, [1.0, 5.0, 2.0, 6.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave low lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985068,"byte_end":6985119,"line_start":1266,"line_end":1266,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985120,"byte_end":6985127,"line_start":1267,"line_end":1267,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985128,"byte_end":6985151,"line_start":1268,"line_end":1268,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985152,"byte_end":6985203,"line_start":1269,"line_end":1269,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([5.0, 6.0, 7.0, 8.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985204,"byte_end":6985255,"line_start":1270,"line_end":1270,"column_start":1,"column_end":52}},{"value":"/ let c = unpack_low_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985256,"byte_end":6985301,"line_start":1271,"line_end":1271,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [1.0, 5.0, 2.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985302,"byte_end":6985342,"line_start":1272,"line_end":1272,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985343,"byte_end":6985350,"line_start":1273,"line_end":1273,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985351,"byte_end":6985362,"line_start":1274,"line_end":1274,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985363,"byte_end":6985380,"line_start":1275,"line_end":1275,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":568},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985875,"byte_end":6985886,"line_start":1292,"line_end":1292,"column_start":8,"column_end":19},"name":"bitxor_m128","qualname":"::x86_x64::sse::bitxor_m128","value":"pub fn bitxor_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a ^ b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);\n let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);\n let c = bitxor_m128(a, b).to_array();\n assert_eq!(c, [0.0, 1.0, 1.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a ^ b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985535,"byte_end":6985555,"line_start":1281,"line_end":1281,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985556,"byte_end":6985563,"line_start":1282,"line_end":1282,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985564,"byte_end":6985587,"line_start":1283,"line_end":1283,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 0.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985588,"byte_end":6985639,"line_start":1284,"line_end":1284,"column_start":1,"column_end":52}},{"value":"/ let b = m128::from_array([1.0, 1.0, 0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985640,"byte_end":6985691,"line_start":1285,"line_end":1285,"column_start":1,"column_end":52}},{"value":"/ let c = bitxor_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985692,"byte_end":6985733,"line_start":1286,"line_end":1286,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [0.0, 1.0, 1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985734,"byte_end":6985774,"line_start":1287,"line_end":1287,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985775,"byte_end":6985782,"line_start":1288,"line_end":1288,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985783,"byte_end":6985794,"line_start":1289,"line_end":1289,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6985795,"byte_end":6985812,"line_start":1290,"line_end":1290,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991185,"byte_end":6991197,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"add_i8_m128i","qualname":"::x86_x64::sse2::add_i8_m128i","value":"pub fn add_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a + b` with lanes as `i8`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b = m128i::from([\n   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,\n ]);\n let c: [i8; 16] = add_i8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [0, 12, 4, 16, 8, 20, 12, 24, 16, 28, -10, 32, 34, -10, 38, -114]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a + b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990663,"byte_end":6990703,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990704,"byte_end":6990711,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990712,"byte_end":6990735,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990736,"byte_end":6990747,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990748,"byte_end":6990825,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990826,"byte_end":6990851,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990852,"byte_end":6990922,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990923,"byte_end":6990930,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = add_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990931,"byte_end":6990979,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990980,"byte_end":6990995,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6990996,"byte_end":6991004,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"/   [0, 12, 4, 16, 8, 20, 12, 24, 16, 28, -10, 32, 34, -10, 38, -114]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991005,"byte_end":6991076,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991077,"byte_end":6991083,"line_start":17,"line_end":17,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991084,"byte_end":6991091,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991092,"byte_end":6991103,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991104,"byte_end":6991121,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":616},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991675,"byte_end":6991688,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"add_i16_m128i","qualname":"::x86_x64::sse2::add_i16_m128i","value":"pub fn add_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a + b` with lanes as `i16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = add_i16_m128i(a, b).into();\n assert_eq!(c, [6, 8, 10, 12, -16, -28, -40, 44]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a + b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991275,"byte_end":6991316,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991317,"byte_end":6991324,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991325,"byte_end":6991348,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991349,"byte_end":6991407,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991408,"byte_end":6991469,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = add_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991470,"byte_end":6991519,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [6, 8, 10, 12, -16, -28, -40, 44]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991520,"byte_end":6991573,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991574,"byte_end":6991581,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991582,"byte_end":6991593,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991594,"byte_end":6991611,"line_start":35,"line_end":35,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":617},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992105,"byte_end":6992118,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"add_i32_m128i","qualname":"::x86_x64::sse2::add_i32_m128i","value":"pub fn add_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a + b` with lanes as `i32`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = m128i::from([5, 6, 7, 8]);\n let c: [i32; 4] = add_i32_m128i(a, b).into();\n assert_eq!(c, [6, 8, 10, 12]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a + b` with lanes as `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991767,"byte_end":6991808,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991809,"byte_end":6991816,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991817,"byte_end":6991840,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991841,"byte_end":6991879,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991880,"byte_end":6991918,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = add_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991919,"byte_end":6991968,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [6, 8, 10, 12]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6991969,"byte_end":6992003,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992004,"byte_end":6992011,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992012,"byte_end":6992023,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992024,"byte_end":6992041,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992534,"byte_end":6992547,"line_start":67,"line_end":67,"column_start":8,"column_end":21},"name":"add_i64_m128i","qualname":"::x86_x64::sse2::add_i64_m128i","value":"pub fn add_i64_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a + b` with lanes as `i64`.\n ```\n # use safe_arch::*;\n let a = m128i::from([92_i64, 87]);\n let b = m128i::from([-9001_i64, 1]);\n let c: [i64; 2] = add_i64_m128i(a, b).into();\n assert_eq!(c, [-8909, 88]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a + b` with lanes as `i64`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992197,"byte_end":6992238,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992239,"byte_end":6992246,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992247,"byte_end":6992270,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([92_i64, 87]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992271,"byte_end":6992309,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([-9001_i64, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992310,"byte_end":6992350,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ let c: [i64; 2] = add_i64_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992351,"byte_end":6992400,"line_start":61,"line_end":61,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [-8909, 88]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992401,"byte_end":6992432,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992433,"byte_end":6992440,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992441,"byte_end":6992452,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992453,"byte_end":6992470,"line_start":65,"line_end":65,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":619},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992946,"byte_end":6992955,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"add_m128d","qualname":"::x86_x64::sse2::add_m128d","value":"pub fn add_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a + b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -6.0]);\n let c = add_m128d(a, b).to_array();\n assert_eq!(c, [192.0, 81.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a + b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992626,"byte_end":6992647,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992648,"byte_end":6992655,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992656,"byte_end":6992679,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992680,"byte_end":6992724,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992725,"byte_end":6992770,"line_start":75,"line_end":75,"column_start":1,"column_end":46}},{"value":"/ let c = add_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992771,"byte_end":6992810,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(c, [192.0, 81.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992811,"byte_end":6992844,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992845,"byte_end":6992852,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992853,"byte_end":6992864,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6992865,"byte_end":6992882,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993379,"byte_end":6993390,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"add_m128d_s","qualname":"::x86_x64::sse2::add_m128d_s","value":"pub fn add_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lowest lane `a + b`, high lane unchanged.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -600.0]);\n let c = add_m128d_s(a, b).to_array();\n assert_eq!(c, [192.0, 87.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lowest lane `a + b`, high lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993031,"byte_end":6993076,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993077,"byte_end":6993084,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993085,"byte_end":6993108,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993109,"byte_end":6993153,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -600.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993154,"byte_end":6993201,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ let c = add_m128d_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993202,"byte_end":6993243,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [192.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993244,"byte_end":6993277,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993278,"byte_end":6993285,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993286,"byte_end":6993297,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993298,"byte_end":6993315,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":876},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994113,"byte_end":6994136,"line_start":125,"line_end":125,"column_start":8,"column_end":31},"name":"add_saturating_i8_m128i","qualname":"::x86_x64::sse2::add_saturating_i8_m128i","value":"pub fn add_saturating_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a + b` with lanes as `i8`.\n ```\n # use safe_arch::*;\n let a = m128i::from([\n   i8::MAX, i8::MIN, 3, 4, -1, -2, -3, -4,\n   3, 4, -1, -2, -1, -2, -3, -4,\n ]);\n let b = m128i::from([\n   i8::MAX, i8::MIN, 7, 8, -15, -26, -37, 48,\n   7, 8, -15, -26, -15, -26, -37, 48,\n ]);\n let c: [i8; 16] = add_saturating_i8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [\n     i8::MAX, i8::MIN, 10, 12, -16, -28, -40, 44,\n     10, 12, -16, -28, -16, -28, -40, 44\n   ]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a + b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993466,"byte_end":6993517,"line_start":101,"line_end":101,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993518,"byte_end":6993525,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993526,"byte_end":6993549,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993550,"byte_end":6993575,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/   i8::MAX, i8::MIN, 3, 4, -1, -2, -3, -4,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993576,"byte_end":6993621,"line_start":105,"line_end":105,"column_start":1,"column_end":46}},{"value":"/   3, 4, -1, -2, -1, -2, -3, -4,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993622,"byte_end":6993657,"line_start":106,"line_end":106,"column_start":1,"column_end":36}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993658,"byte_end":6993665,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993666,"byte_end":6993691,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"/   i8::MAX, i8::MIN, 7, 8, -15, -26, -37, 48,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993692,"byte_end":6993740,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"/   7, 8, -15, -26, -15, -26, -37, 48,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993741,"byte_end":6993781,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993782,"byte_end":6993789,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = add_saturating_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993790,"byte_end":6993849,"line_start":112,"line_end":112,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993850,"byte_end":6993865,"line_start":113,"line_end":113,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993866,"byte_end":6993874,"line_start":114,"line_end":114,"column_start":1,"column_end":9}},{"value":"/   [","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993875,"byte_end":6993882,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/     i8::MAX, i8::MIN, 10, 12, -16, -28, -40, 44,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993883,"byte_end":6993935,"line_start":116,"line_end":116,"column_start":1,"column_end":53}},{"value":"/     10, 12, -16, -28, -16, -28, -40, 44","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993936,"byte_end":6993979,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"/   ]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993980,"byte_end":6993987,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993988,"byte_end":6993994,"line_start":119,"line_end":119,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6993995,"byte_end":6994002,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994003,"byte_end":6994014,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994015,"byte_end":6994032,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"rustfmt::skip","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994033,"byte_end":6994049,"line_start":123,"line_end":123,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":621},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994671,"byte_end":6994695,"line_start":140,"line_end":140,"column_start":8,"column_end":32},"name":"add_saturating_i16_m128i","qualname":"::x86_x64::sse2::add_saturating_i16_m128i","value":"pub fn add_saturating_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a + b` with lanes as `i16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([i16::MAX, i16::MIN, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([i16::MAX, i16::MIN, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = add_saturating_i16_m128i(a, b).into();\n assert_eq!(c, [i16::MAX, i16::MIN, 10, 12, -16, -28, -40, 44]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a + b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994215,"byte_end":6994267,"line_start":129,"line_end":129,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994268,"byte_end":6994275,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994276,"byte_end":6994299,"line_start":131,"line_end":131,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([i16::MAX, i16::MIN, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994300,"byte_end":6994368,"line_start":132,"line_end":132,"column_start":1,"column_end":69}},{"value":"/ let b = m128i::from([i16::MAX, i16::MIN, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994369,"byte_end":6994440,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/ let c: [i16; 8] = add_saturating_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994441,"byte_end":6994501,"line_start":134,"line_end":134,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [i16::MAX, i16::MIN, 10, 12, -16, -28, -40, 44]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994502,"byte_end":6994569,"line_start":135,"line_end":135,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994570,"byte_end":6994577,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994578,"byte_end":6994589,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994590,"byte_end":6994607,"line_start":138,"line_end":138,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":877},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995384,"byte_end":6995407,"line_start":168,"line_end":168,"column_start":8,"column_end":31},"name":"add_saturating_u8_m128i","qualname":"::x86_x64::sse2::add_saturating_u8_m128i","value":"pub fn add_saturating_u8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a + b` with lanes as `u8`.\n ```\n # use safe_arch::*;\n let a = m128i::from([\n   u8::MAX, 0, 3, 4, 254, 2, 3, 4,\n   3, 4, 1, 2, 1, 2, 128, 4,\n ]);\n let b = m128i::from([\n   u8::MAX, 0, 7, 8, 15, 26, 37, 48,\n   7, 8, 15, 26, 15, 26, 37, 48,\n ]);\n let c: [u8; 16] = add_saturating_u8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [\n     u8::MAX, 0, 10, 12, 255, 28, 40, 52,\n     10, 12, 16, 28, 16, 28, 165, 52\n   ]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a + b` with lanes as `u8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994775,"byte_end":6994826,"line_start":144,"line_end":144,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994827,"byte_end":6994834,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994835,"byte_end":6994858,"line_start":146,"line_end":146,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994859,"byte_end":6994884,"line_start":147,"line_end":147,"column_start":1,"column_end":26}},{"value":"/   u8::MAX, 0, 3, 4, 254, 2, 3, 4,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994885,"byte_end":6994922,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/   3, 4, 1, 2, 1, 2, 128, 4,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994923,"byte_end":6994954,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994955,"byte_end":6994962,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994963,"byte_end":6994988,"line_start":151,"line_end":151,"column_start":1,"column_end":26}},{"value":"/   u8::MAX, 0, 7, 8, 15, 26, 37, 48,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6994989,"byte_end":6995028,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/   7, 8, 15, 26, 15, 26, 37, 48,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995029,"byte_end":6995064,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995065,"byte_end":6995072,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ let c: [u8; 16] = add_saturating_u8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995073,"byte_end":6995132,"line_start":155,"line_end":155,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995133,"byte_end":6995148,"line_start":156,"line_end":156,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995149,"byte_end":6995157,"line_start":157,"line_end":157,"column_start":1,"column_end":9}},{"value":"/   [","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995158,"byte_end":6995165,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/     u8::MAX, 0, 10, 12, 255, 28, 40, 52,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995166,"byte_end":6995210,"line_start":159,"line_end":159,"column_start":1,"column_end":45}},{"value":"/     10, 12, 16, 28, 16, 28, 165, 52","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995211,"byte_end":6995250,"line_start":160,"line_end":160,"column_start":1,"column_end":40}},{"value":"/   ]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995251,"byte_end":6995258,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995259,"byte_end":6995265,"line_start":162,"line_end":162,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995266,"byte_end":6995273,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995274,"byte_end":6995285,"line_start":164,"line_end":164,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995286,"byte_end":6995303,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"rustfmt::skip","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995304,"byte_end":6995320,"line_start":166,"line_end":166,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":622},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995911,"byte_end":6995935,"line_start":183,"line_end":183,"column_start":8,"column_end":32},"name":"add_saturating_u16_m128i","qualname":"::x86_x64::sse2::add_saturating_u16_m128i","value":"pub fn add_saturating_u16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a + b` with lanes as `u16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([u16::MAX, 0, 3, 4, 1, 2, 3, 4]);\n let b = m128i::from([u16::MAX, 0, 7, 8, 15, 26, 37, 48]);\n let c: [u16; 8] = add_saturating_u16_m128i(a, b).into();\n assert_eq!(c, [u16::MAX, 0, 10, 12, 16, 28, 40, 52]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a + b` with lanes as `u16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995486,"byte_end":6995538,"line_start":172,"line_end":172,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995539,"byte_end":6995546,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995547,"byte_end":6995570,"line_start":174,"line_end":174,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([u16::MAX, 0, 3, 4, 1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995571,"byte_end":6995628,"line_start":175,"line_end":175,"column_start":1,"column_end":58}},{"value":"/ let b = m128i::from([u16::MAX, 0, 7, 8, 15, 26, 37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995629,"byte_end":6995690,"line_start":176,"line_end":176,"column_start":1,"column_end":62}},{"value":"/ let c: [u16; 8] = add_saturating_u16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995691,"byte_end":6995751,"line_start":177,"line_end":177,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [u16::MAX, 0, 10, 12, 16, 28, 40, 52]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995752,"byte_end":6995809,"line_start":178,"line_end":178,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995810,"byte_end":6995817,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995818,"byte_end":6995829,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6995830,"byte_end":6995847,"line_start":181,"line_end":181,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":623},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996329,"byte_end":6996341,"line_start":198,"line_end":198,"column_start":8,"column_end":20},"name":"bitand_m128d","qualname":"::x86_x64::sse2::bitand_m128d","value":"pub fn bitand_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a & b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 0.0]);\n let b = m128d::from_array([1.0, 1.0]);\n let c = bitand_m128d(a, b).to_array();\n assert_eq!(c, [1.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a & b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996015,"byte_end":6996035,"line_start":187,"line_end":187,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996036,"byte_end":6996043,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996044,"byte_end":6996067,"line_start":189,"line_end":189,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996068,"byte_end":6996110,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996111,"byte_end":6996153,"line_start":191,"line_end":191,"column_start":1,"column_end":43}},{"value":"/ let c = bitand_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996154,"byte_end":6996196,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(c, [1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996197,"byte_end":6996227,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996228,"byte_end":6996235,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996236,"byte_end":6996247,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996248,"byte_end":6996265,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":624},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996731,"byte_end":6996743,"line_start":213,"line_end":213,"column_start":8,"column_end":20},"name":"bitand_m128i","qualname":"::x86_x64::sse2::bitand_m128i","value":"pub fn bitand_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a & b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 0, 1, 0]);\n let b = m128i::from([1, 1, 0, 0]);\n let c: [i32; 4] = bitand_m128i(a, b).into();\n assert_eq!(c, [1, 0, 0, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a & b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996417,"byte_end":6996437,"line_start":202,"line_end":202,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996438,"byte_end":6996445,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996446,"byte_end":6996469,"line_start":204,"line_end":204,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 0, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996470,"byte_end":6996508,"line_start":205,"line_end":205,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([1, 1, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996509,"byte_end":6996547,"line_start":206,"line_end":206,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = bitand_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996548,"byte_end":6996596,"line_start":207,"line_end":207,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [1, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996597,"byte_end":6996629,"line_start":208,"line_end":208,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996630,"byte_end":6996637,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996638,"byte_end":6996649,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996650,"byte_end":6996667,"line_start":211,"line_end":211,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":625},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997142,"byte_end":6997157,"line_start":228,"line_end":228,"column_start":8,"column_end":23},"name":"bitandnot_m128d","qualname":"::x86_x64::sse2::bitandnot_m128d","value":"pub fn bitandnot_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!a) & b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 0.0]);\n let b = m128d::from_array([1.0, 1.0]);\n let c = bitandnot_m128d(a, b).to_array();\n assert_eq!(c, [0.0, 1.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `(!a) & b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996822,"byte_end":6996845,"line_start":217,"line_end":217,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996846,"byte_end":6996853,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996854,"byte_end":6996877,"line_start":219,"line_end":219,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996878,"byte_end":6996920,"line_start":220,"line_end":220,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996921,"byte_end":6996963,"line_start":221,"line_end":221,"column_start":1,"column_end":43}},{"value":"/ let c = bitandnot_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6996964,"byte_end":6997009,"line_start":222,"line_end":222,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [0.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997010,"byte_end":6997040,"line_start":223,"line_end":223,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997041,"byte_end":6997048,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997049,"byte_end":6997060,"line_start":225,"line_end":225,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997061,"byte_end":6997078,"line_start":226,"line_end":226,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":626},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997556,"byte_end":6997571,"line_start":243,"line_end":243,"column_start":8,"column_end":23},"name":"bitandnot_m128i","qualname":"::x86_x64::sse2::bitandnot_m128i","value":"pub fn bitandnot_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `(!a) & b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 0, 1, 0]);\n let b = m128i::from([1, 1, 0, 0]);\n let c: [i32; 4] = bitandnot_m128i(a, b).into();\n assert_eq!(c, [0, 1, 0, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `(!a) & b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997236,"byte_end":6997259,"line_start":232,"line_end":232,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997260,"byte_end":6997267,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997268,"byte_end":6997291,"line_start":234,"line_end":234,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 0, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997292,"byte_end":6997330,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([1, 1, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997331,"byte_end":6997369,"line_start":236,"line_end":236,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = bitandnot_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997370,"byte_end":6997421,"line_start":237,"line_end":237,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(c, [0, 1, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997422,"byte_end":6997454,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997455,"byte_end":6997462,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997463,"byte_end":6997474,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997475,"byte_end":6997492,"line_start":241,"line_end":241,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":878},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998237,"byte_end":6998253,"line_start":271,"line_end":271,"column_start":8,"column_end":24},"name":"average_u8_m128i","qualname":"::x86_x64::sse2::average_u8_m128i","value":"pub fn average_u8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise average of the `u8` values.\n ```\n # use safe_arch::*;\n let a = m128i::from([\n   u8::MAX, 0, 3, 4, 254, 2, 3, 4,\n   3, 4, 1, 2, 1, 2, 128, 4,\n ]);\n let b = m128i::from([\n   u8::MAX, 0, 7, 8, 15, 26, 37, 48,\n   7, 8, 15, 26, 15, 26, 37, 48,\n ]);\n let c: [u8; 16] = average_u8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [\n     u8::MAX, 0, 5, 6, 135, 14, 20, 26,\n     5, 6, 8, 14, 8, 14, 83, 26\n   ]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise average of the `u8` values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997653,"byte_end":6997693,"line_start":247,"line_end":247,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997694,"byte_end":6997701,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997702,"byte_end":6997725,"line_start":249,"line_end":249,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997726,"byte_end":6997751,"line_start":250,"line_end":250,"column_start":1,"column_end":26}},{"value":"/   u8::MAX, 0, 3, 4, 254, 2, 3, 4,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997752,"byte_end":6997789,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/   3, 4, 1, 2, 1, 2, 128, 4,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997790,"byte_end":6997821,"line_start":252,"line_end":252,"column_start":1,"column_end":32}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997822,"byte_end":6997829,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997830,"byte_end":6997855,"line_start":254,"line_end":254,"column_start":1,"column_end":26}},{"value":"/   u8::MAX, 0, 7, 8, 15, 26, 37, 48,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997856,"byte_end":6997895,"line_start":255,"line_end":255,"column_start":1,"column_end":40}},{"value":"/   7, 8, 15, 26, 15, 26, 37, 48,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997896,"byte_end":6997931,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997932,"byte_end":6997939,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/ let c: [u8; 16] = average_u8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997940,"byte_end":6997992,"line_start":258,"line_end":258,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6997993,"byte_end":6998008,"line_start":259,"line_end":259,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998009,"byte_end":6998017,"line_start":260,"line_end":260,"column_start":1,"column_end":9}},{"value":"/   [","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998018,"byte_end":6998025,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/     u8::MAX, 0, 5, 6, 135, 14, 20, 26,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998026,"byte_end":6998068,"line_start":262,"line_end":262,"column_start":1,"column_end":43}},{"value":"/     5, 6, 8, 14, 8, 14, 83, 26","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998069,"byte_end":6998103,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/   ]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998104,"byte_end":6998111,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998112,"byte_end":6998118,"line_start":265,"line_end":265,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998119,"byte_end":6998126,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998127,"byte_end":6998138,"line_start":267,"line_end":267,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998139,"byte_end":6998156,"line_start":268,"line_end":268,"column_start":1,"column_end":18}},{"value":"rustfmt::skip","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998157,"byte_end":6998173,"line_start":269,"line_end":269,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998735,"byte_end":6998752,"line_start":286,"line_end":286,"column_start":8,"column_end":25},"name":"average_u16_m128i","qualname":"::x86_x64::sse2::average_u16_m128i","value":"pub fn average_u16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise average of the `u16` values.\n ```\n # use safe_arch::*;\n let a = m128i::from([u16::MAX, 0, 3, 4, 1, 2, 3, 4]);\n let b = m128i::from([u16::MAX, 0, 7, 8, 15, 26, 37, 48]);\n let c: [u16; 8] = average_u16_m128i(a, b).into();\n assert_eq!(c, [u16::MAX, 0, 5, 6, 8, 14, 20, 26]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise average of the `u16` values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998331,"byte_end":6998372,"line_start":275,"line_end":275,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998373,"byte_end":6998380,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998381,"byte_end":6998404,"line_start":277,"line_end":277,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([u16::MAX, 0, 3, 4, 1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998405,"byte_end":6998462,"line_start":278,"line_end":278,"column_start":1,"column_end":58}},{"value":"/ let b = m128i::from([u16::MAX, 0, 7, 8, 15, 26, 37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998463,"byte_end":6998524,"line_start":279,"line_end":279,"column_start":1,"column_end":62}},{"value":"/ let c: [u16; 8] = average_u16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998525,"byte_end":6998578,"line_start":280,"line_end":280,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [u16::MAX, 0, 5, 6, 8, 14, 20, 26]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998579,"byte_end":6998633,"line_start":281,"line_end":281,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998634,"byte_end":6998641,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998642,"byte_end":6998653,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":6998654,"byte_end":6998671,"line_start":284,"line_end":284,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":630},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000604,"byte_end":7000627,"line_start":344,"line_end":344,"column_start":8,"column_end":31},"name":"cast_to_m128_from_m128d","qualname":"::x86_x64::sse2::cast_to_m128_from_m128d","value":"pub fn cast_to_m128_from_m128d(m128d) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Bit-preserving cast to `m128` from `m128d`\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.0]);\n let c: [u32; 4] = cast_to_m128_from_m128d(a).to_bits();\n assert_eq!(c, [0, 0x3FF00000, 0, 0x40000000]);\n ```\n","sig":null,"attributes":[{"value":"/ Bit-preserving cast to `m128` from `m128d`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000270,"byte_end":7000316,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000317,"byte_end":7000324,"line_start":335,"line_end":335,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000325,"byte_end":7000348,"line_start":336,"line_end":336,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000349,"byte_end":7000391,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ let c: [u32; 4] = cast_to_m128_from_m128d(a).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000392,"byte_end":7000451,"line_start":338,"line_end":338,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [0, 0x3FF00000, 0, 0x40000000]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000452,"byte_end":7000502,"line_start":339,"line_end":339,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000503,"byte_end":7000510,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000511,"byte_end":7000522,"line_start":341,"line_end":341,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000523,"byte_end":7000540,"line_start":342,"line_end":342,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001022,"byte_end":7001046,"line_start":358,"line_end":358,"column_start":8,"column_end":32},"name":"cast_to_m128i_from_m128d","qualname":"::x86_x64::sse2::cast_to_m128i_from_m128d","value":"pub fn cast_to_m128i_from_m128d(m128d) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Bit-preserving cast to `m128i` from `m128d`\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.0]);\n let c: [u32; 4] = cast_to_m128i_from_m128d(a).into();\n assert_eq!(c, [0, 0x3FF00000, 0, 0x40000000]);\n ```\n","sig":null,"attributes":[{"value":"/ Bit-preserving cast to `m128i` from `m128d`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000689,"byte_end":7000736,"line_start":348,"line_end":348,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000737,"byte_end":7000744,"line_start":349,"line_end":349,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000745,"byte_end":7000768,"line_start":350,"line_end":350,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000769,"byte_end":7000811,"line_start":351,"line_end":351,"column_start":1,"column_end":43}},{"value":"/ let c: [u32; 4] = cast_to_m128i_from_m128d(a).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000812,"byte_end":7000869,"line_start":352,"line_end":352,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [0, 0x3FF00000, 0, 0x40000000]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000870,"byte_end":7000920,"line_start":353,"line_end":353,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000921,"byte_end":7000928,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000929,"byte_end":7000940,"line_start":355,"line_end":355,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7000941,"byte_end":7000958,"line_start":356,"line_end":356,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":632},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001466,"byte_end":7001489,"line_start":372,"line_end":372,"column_start":8,"column_end":31},"name":"cast_to_m128d_from_m128","qualname":"::x86_x64::sse2::cast_to_m128d_from_m128","value":"pub fn cast_to_m128d_from_m128(m128) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Bit-preserving cast to `m128d` from `m128`\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let c: [u64; 2] = cast_to_m128d_from_m128(a).to_bits();\n assert_eq!(c, [0x400000003F800000, 0x4080000040400000]);\n ```\n","sig":null,"attributes":[{"value":"/ Bit-preserving cast to `m128d` from `m128`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001113,"byte_end":7001159,"line_start":362,"line_end":362,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001160,"byte_end":7001167,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001168,"byte_end":7001191,"line_start":364,"line_end":364,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001192,"byte_end":7001243,"line_start":365,"line_end":365,"column_start":1,"column_end":52}},{"value":"/ let c: [u64; 2] = cast_to_m128d_from_m128(a).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001244,"byte_end":7001303,"line_start":366,"line_end":366,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [0x400000003F800000, 0x4080000040400000]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001304,"byte_end":7001364,"line_start":367,"line_end":367,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001365,"byte_end":7001372,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001373,"byte_end":7001384,"line_start":369,"line_end":369,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001385,"byte_end":7001402,"line_start":370,"line_end":370,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":633},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001910,"byte_end":7001933,"line_start":386,"line_end":386,"column_start":8,"column_end":31},"name":"cast_to_m128i_from_m128","qualname":"::x86_x64::sse2::cast_to_m128i_from_m128","value":"pub fn cast_to_m128i_from_m128(m128) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Bit-preserving cast to `m128i` from `m128`\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n let c: [u32; 4] = cast_to_m128i_from_m128(a).into();\n assert_eq!(c, [0x3F800000, 0x40000000, 0x40400000, 0x40800000]);\n ```\n","sig":null,"attributes":[{"value":"/ Bit-preserving cast to `m128i` from `m128`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001552,"byte_end":7001598,"line_start":376,"line_end":376,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001599,"byte_end":7001606,"line_start":377,"line_end":377,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001607,"byte_end":7001630,"line_start":378,"line_end":378,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001631,"byte_end":7001682,"line_start":379,"line_end":379,"column_start":1,"column_end":52}},{"value":"/ let c: [u32; 4] = cast_to_m128i_from_m128(a).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001683,"byte_end":7001739,"line_start":380,"line_end":380,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [0x3F800000, 0x40000000, 0x40400000, 0x40800000]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001740,"byte_end":7001808,"line_start":381,"line_end":381,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001809,"byte_end":7001816,"line_start":382,"line_end":382,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001817,"byte_end":7001828,"line_start":383,"line_end":383,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001829,"byte_end":7001846,"line_start":384,"line_end":384,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":634},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002327,"byte_end":7002351,"line_start":400,"line_end":400,"column_start":8,"column_end":32},"name":"cast_to_m128d_from_m128i","qualname":"::x86_x64::sse2::cast_to_m128d_from_m128i","value":"pub fn cast_to_m128d_from_m128i(m128i) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Bit-preserving cast to `m128d` from `m128i`\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let c: [u64; 2] = cast_to_m128d_from_m128i(a).to_bits();\n assert_eq!(c, [0x200000001, 0x400000003]);\n ```\n","sig":null,"attributes":[{"value":"/ Bit-preserving cast to `m128d` from `m128i`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7001999,"byte_end":7002046,"line_start":390,"line_end":390,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002047,"byte_end":7002054,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002055,"byte_end":7002078,"line_start":392,"line_end":392,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002079,"byte_end":7002117,"line_start":393,"line_end":393,"column_start":1,"column_end":39}},{"value":"/ let c: [u64; 2] = cast_to_m128d_from_m128i(a).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002118,"byte_end":7002178,"line_start":394,"line_end":394,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [0x200000001, 0x400000003]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002179,"byte_end":7002225,"line_start":395,"line_end":395,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002226,"byte_end":7002233,"line_start":396,"line_end":396,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002234,"byte_end":7002245,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002246,"byte_end":7002263,"line_start":398,"line_end":398,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":635},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002730,"byte_end":7002753,"line_start":414,"line_end":414,"column_start":8,"column_end":31},"name":"cast_to_m128_from_m128i","qualname":"::x86_x64::sse2::cast_to_m128_from_m128i","value":"pub fn cast_to_m128_from_m128i(m128i) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Bit-preserving cast to `m128` from `m128i`\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let c: [u32; 4] = cast_to_m128_from_m128i(a).to_bits();\n assert_eq!(c, [1, 2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ Bit-preserving cast to `m128` from `m128i`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002418,"byte_end":7002464,"line_start":404,"line_end":404,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002465,"byte_end":7002472,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002473,"byte_end":7002496,"line_start":406,"line_end":406,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002497,"byte_end":7002535,"line_start":407,"line_end":407,"column_start":1,"column_end":39}},{"value":"/ let c: [u32; 4] = cast_to_m128_from_m128i(a).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002536,"byte_end":7002595,"line_start":408,"line_end":408,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002596,"byte_end":7002628,"line_start":409,"line_end":409,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002629,"byte_end":7002636,"line_start":410,"line_end":410,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002637,"byte_end":7002648,"line_start":411,"line_end":411,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002649,"byte_end":7002666,"line_start":412,"line_end":412,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":636},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003384,"byte_end":7003404,"line_start":434,"line_end":434,"column_start":8,"column_end":28},"name":"cmp_eq_mask_i8_m128i","qualname":"::x86_x64::sse2::cmp_eq_mask_i8_m128i","value":"pub fn cmp_eq_mask_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a == b` with lanes as `i8`.","sig":null,"attributes":[{"value":"/ Lanewise `a == b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002818,"byte_end":7002859,"line_start":418,"line_end":418,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002860,"byte_end":7002863,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002864,"byte_end":7002922,"line_start":420,"line_end":420,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002923,"byte_end":7002930,"line_start":421,"line_end":421,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002931,"byte_end":7002954,"line_start":422,"line_end":422,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002955,"byte_end":7002966,"line_start":423,"line_end":423,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 127]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7002967,"byte_end":7003045,"line_start":424,"line_end":424,"column_start":1,"column_end":79}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003046,"byte_end":7003071,"line_start":425,"line_end":425,"column_start":1,"column_end":26}},{"value":"/   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003072,"byte_end":7003142,"line_start":426,"line_end":426,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003143,"byte_end":7003150,"line_start":427,"line_end":427,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = cmp_eq_mask_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003151,"byte_end":7003207,"line_start":428,"line_end":428,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003208,"byte_end":7003282,"line_start":429,"line_end":429,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003283,"byte_end":7003290,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003291,"byte_end":7003302,"line_start":431,"line_end":431,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003303,"byte_end":7003320,"line_start":432,"line_end":432,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":637},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003950,"byte_end":7003971,"line_start":451,"line_end":451,"column_start":8,"column_end":29},"name":"cmp_eq_mask_i16_m128i","qualname":"::x86_x64::sse2::cmp_eq_mask_i16_m128i","value":"pub fn cmp_eq_mask_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a == b` with lanes as `i16`.","sig":null,"attributes":[{"value":"/ Lanewise `a == b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003484,"byte_end":7003526,"line_start":438,"line_end":438,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003527,"byte_end":7003530,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003531,"byte_end":7003589,"line_start":440,"line_end":440,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003590,"byte_end":7003597,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003598,"byte_end":7003621,"line_start":442,"line_end":442,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003622,"byte_end":7003680,"line_start":443,"line_end":443,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 2, 7, 4, -15, -26, -37, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003681,"byte_end":7003742,"line_start":444,"line_end":444,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = cmp_eq_mask_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003743,"byte_end":7003800,"line_start":445,"line_end":445,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [0, -1, 0, -1, 0, 0, 0, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003801,"byte_end":7003848,"line_start":446,"line_end":446,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003849,"byte_end":7003856,"line_start":447,"line_end":447,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003857,"byte_end":7003868,"line_start":448,"line_end":448,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7003869,"byte_end":7003886,"line_start":449,"line_end":449,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004462,"byte_end":7004483,"line_start":468,"line_end":468,"column_start":8,"column_end":29},"name":"cmp_eq_mask_i32_m128i","qualname":"::x86_x64::sse2::cmp_eq_mask_i32_m128i","value":"pub fn cmp_eq_mask_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a == b` with lanes as `i32`.","sig":null,"attributes":[{"value":"/ Lanewise `a == b` with lanes as `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004052,"byte_end":7004094,"line_start":455,"line_end":455,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004095,"byte_end":7004098,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004099,"byte_end":7004157,"line_start":457,"line_end":457,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004158,"byte_end":7004165,"line_start":458,"line_end":458,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004166,"byte_end":7004189,"line_start":459,"line_end":459,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004190,"byte_end":7004228,"line_start":460,"line_end":460,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([5, 2, 7, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004229,"byte_end":7004267,"line_start":461,"line_end":461,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = cmp_eq_mask_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004268,"byte_end":7004325,"line_start":462,"line_end":462,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [0, -1, 0, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004326,"byte_end":7004360,"line_start":463,"line_end":463,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004361,"byte_end":7004368,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004369,"byte_end":7004380,"line_start":465,"line_end":465,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004381,"byte_end":7004398,"line_start":466,"line_end":466,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":639},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004921,"byte_end":7004938,"line_start":485,"line_end":485,"column_start":8,"column_end":25},"name":"cmp_eq_mask_m128d","qualname":"::x86_x64::sse2::cmp_eq_mask_m128d","value":"pub fn cmp_eq_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a == b`, mask output.","sig":null,"attributes":[{"value":"/ Lanewise `a == b`, mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004564,"byte_end":7004599,"line_start":472,"line_end":472,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004600,"byte_end":7004603,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004604,"byte_end":7004620,"line_start":474,"line_end":474,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004621,"byte_end":7004628,"line_start":475,"line_end":475,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004629,"byte_end":7004652,"line_start":476,"line_end":476,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004653,"byte_end":7004695,"line_start":477,"line_end":477,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004696,"byte_end":7004738,"line_start":478,"line_end":478,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_eq_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004739,"byte_end":7004785,"line_start":479,"line_end":479,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004786,"byte_end":7004819,"line_start":480,"line_end":480,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004820,"byte_end":7004827,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004828,"byte_end":7004839,"line_start":482,"line_end":482,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7004840,"byte_end":7004857,"line_start":483,"line_end":483,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005399,"byte_end":7005418,"line_start":502,"line_end":502,"column_start":8,"column_end":27},"name":"cmp_eq_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_eq_mask_m128d_s","value":"pub fn cmp_eq_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a == b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a == b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005016,"byte_end":7005061,"line_start":489,"line_end":489,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005062,"byte_end":7005065,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005066,"byte_end":7005082,"line_start":491,"line_end":491,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005083,"byte_end":7005090,"line_start":492,"line_end":492,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005091,"byte_end":7005114,"line_start":493,"line_end":493,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005115,"byte_end":7005157,"line_start":494,"line_end":494,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005158,"byte_end":7005200,"line_start":495,"line_end":495,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_eq_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005201,"byte_end":7005249,"line_start":496,"line_end":496,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005250,"byte_end":7005297,"line_start":497,"line_end":497,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005298,"byte_end":7005305,"line_start":498,"line_end":498,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005306,"byte_end":7005317,"line_start":499,"line_end":499,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005318,"byte_end":7005335,"line_start":500,"line_end":500,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005847,"byte_end":7005864,"line_start":519,"line_end":519,"column_start":8,"column_end":25},"name":"cmp_ge_mask_m128d","qualname":"::x86_x64::sse2::cmp_ge_mask_m128d","value":"pub fn cmp_ge_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a >= b`.","sig":null,"attributes":[{"value":"/ Lanewise `a >= b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005496,"byte_end":7005518,"line_start":506,"line_end":506,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005519,"byte_end":7005522,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005523,"byte_end":7005539,"line_start":508,"line_end":508,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005540,"byte_end":7005547,"line_start":509,"line_end":509,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005548,"byte_end":7005571,"line_start":510,"line_end":510,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005572,"byte_end":7005614,"line_start":511,"line_end":511,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005615,"byte_end":7005657,"line_start":512,"line_end":512,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_ge_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005658,"byte_end":7005704,"line_start":513,"line_end":513,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u64::MAX, u64::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005705,"byte_end":7005745,"line_start":514,"line_end":514,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005746,"byte_end":7005753,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005754,"byte_end":7005765,"line_start":516,"line_end":516,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005766,"byte_end":7005783,"line_start":517,"line_end":517,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006325,"byte_end":7006344,"line_start":536,"line_end":536,"column_start":8,"column_end":27},"name":"cmp_ge_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_ge_mask_m128d_s","value":"pub fn cmp_ge_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a >= b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a >= b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005942,"byte_end":7005987,"line_start":523,"line_end":523,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005988,"byte_end":7005991,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7005992,"byte_end":7006008,"line_start":525,"line_end":525,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006009,"byte_end":7006016,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006017,"byte_end":7006040,"line_start":527,"line_end":527,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006041,"byte_end":7006083,"line_start":528,"line_end":528,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006084,"byte_end":7006126,"line_start":529,"line_end":529,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_ge_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006127,"byte_end":7006175,"line_start":530,"line_end":530,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006176,"byte_end":7006223,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006224,"byte_end":7006231,"line_start":532,"line_end":532,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006232,"byte_end":7006243,"line_start":533,"line_end":533,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006244,"byte_end":7006261,"line_start":534,"line_end":534,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":643},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006993,"byte_end":7007013,"line_start":556,"line_end":556,"column_start":8,"column_end":28},"name":"cmp_gt_mask_i8_m128i","qualname":"::x86_x64::sse2::cmp_gt_mask_i8_m128i","value":"pub fn cmp_gt_mask_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a > b` with lanes as `i8`.","sig":null,"attributes":[{"value":"/ Lanewise `a > b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006422,"byte_end":7006462,"line_start":540,"line_end":540,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006463,"byte_end":7006466,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006467,"byte_end":7006525,"line_start":542,"line_end":542,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006526,"byte_end":7006533,"line_start":543,"line_end":543,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006534,"byte_end":7006557,"line_start":544,"line_end":544,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006558,"byte_end":7006569,"line_start":545,"line_end":545,"column_start":1,"column_end":12}},{"value":"/   m128i::from([1_i8, 1, 20, 3, 40, 5, 60, 7, 80, 9, 10, 11, 12, 13, 14, 127]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006570,"byte_end":7006652,"line_start":546,"line_end":546,"column_start":1,"column_end":83}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006653,"byte_end":7006678,"line_start":547,"line_end":547,"column_start":1,"column_end":26}},{"value":"/   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 120,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006679,"byte_end":7006749,"line_start":548,"line_end":548,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006750,"byte_end":7006757,"line_start":549,"line_end":549,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = cmp_gt_mask_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006758,"byte_end":7006814,"line_start":550,"line_end":550,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006815,"byte_end":7006891,"line_start":551,"line_end":551,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006892,"byte_end":7006899,"line_start":552,"line_end":552,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006900,"byte_end":7006911,"line_start":553,"line_end":553,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7006912,"byte_end":7006929,"line_start":554,"line_end":554,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":644},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007562,"byte_end":7007583,"line_start":573,"line_end":573,"column_start":8,"column_end":29},"name":"cmp_gt_mask_i16_m128i","qualname":"::x86_x64::sse2::cmp_gt_mask_i16_m128i","value":"pub fn cmp_gt_mask_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a > b` with lanes as `i16`.","sig":null,"attributes":[{"value":"/ Lanewise `a > b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007093,"byte_end":7007134,"line_start":560,"line_end":560,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007135,"byte_end":7007138,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007139,"byte_end":7007197,"line_start":562,"line_end":562,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007198,"byte_end":7007205,"line_start":563,"line_end":563,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007206,"byte_end":7007229,"line_start":564,"line_end":564,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 20, 3, 40, -1, -2, -3, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007230,"byte_end":7007289,"line_start":565,"line_end":565,"column_start":1,"column_end":60}},{"value":"/ let b = m128i::from([5_i16, 2, 7, 4, -15, -26, -37, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007290,"byte_end":7007351,"line_start":566,"line_end":566,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = cmp_gt_mask_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007352,"byte_end":7007409,"line_start":567,"line_end":567,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [0, -1, 0, -1, -1, -1, -1, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007410,"byte_end":7007460,"line_start":568,"line_end":568,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007461,"byte_end":7007468,"line_start":569,"line_end":569,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007469,"byte_end":7007480,"line_start":570,"line_end":570,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007481,"byte_end":7007498,"line_start":571,"line_end":571,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":645},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008075,"byte_end":7008096,"line_start":590,"line_end":590,"column_start":8,"column_end":29},"name":"cmp_gt_mask_i32_m128i","qualname":"::x86_x64::sse2::cmp_gt_mask_i32_m128i","value":"pub fn cmp_gt_mask_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a > b` with lanes as `i32`.","sig":null,"attributes":[{"value":"/ Lanewise `a > b` with lanes as `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007664,"byte_end":7007705,"line_start":577,"line_end":577,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007706,"byte_end":7007709,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007710,"byte_end":7007768,"line_start":579,"line_end":579,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007769,"byte_end":7007776,"line_start":580,"line_end":580,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007777,"byte_end":7007800,"line_start":581,"line_end":581,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 20, 7, 40]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007801,"byte_end":7007841,"line_start":582,"line_end":582,"column_start":1,"column_end":41}},{"value":"/ let b = m128i::from([5, 2, 7, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007842,"byte_end":7007880,"line_start":583,"line_end":583,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = cmp_gt_mask_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007881,"byte_end":7007938,"line_start":584,"line_end":584,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [0, -1, 0, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007939,"byte_end":7007973,"line_start":585,"line_end":585,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007974,"byte_end":7007981,"line_start":586,"line_end":586,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007982,"byte_end":7007993,"line_start":587,"line_end":587,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7007994,"byte_end":7008011,"line_start":588,"line_end":588,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008520,"byte_end":7008537,"line_start":607,"line_end":607,"column_start":8,"column_end":25},"name":"cmp_gt_mask_m128d","qualname":"::x86_x64::sse2::cmp_gt_mask_m128d","value":"pub fn cmp_gt_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a > b`.","sig":null,"attributes":[{"value":"/ Lanewise `a > b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008177,"byte_end":7008198,"line_start":594,"line_end":594,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008199,"byte_end":7008202,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008203,"byte_end":7008219,"line_start":596,"line_end":596,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008220,"byte_end":7008227,"line_start":597,"line_end":597,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008228,"byte_end":7008251,"line_start":598,"line_end":598,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008252,"byte_end":7008294,"line_start":599,"line_end":599,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008295,"byte_end":7008337,"line_start":600,"line_end":600,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_gt_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008338,"byte_end":7008384,"line_start":601,"line_end":601,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008385,"byte_end":7008418,"line_start":602,"line_end":602,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008419,"byte_end":7008426,"line_start":603,"line_end":603,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008427,"byte_end":7008438,"line_start":604,"line_end":604,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008439,"byte_end":7008456,"line_start":605,"line_end":605,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":647},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008997,"byte_end":7009016,"line_start":624,"line_end":624,"column_start":8,"column_end":27},"name":"cmp_gt_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_gt_mask_m128d_s","value":"pub fn cmp_gt_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a > b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a > b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008615,"byte_end":7008659,"line_start":611,"line_end":611,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008660,"byte_end":7008663,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008664,"byte_end":7008680,"line_start":613,"line_end":613,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008681,"byte_end":7008688,"line_start":614,"line_end":614,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008689,"byte_end":7008712,"line_start":615,"line_end":615,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008713,"byte_end":7008755,"line_start":616,"line_end":616,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008756,"byte_end":7008798,"line_start":617,"line_end":617,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_gt_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008799,"byte_end":7008847,"line_start":618,"line_end":618,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008848,"byte_end":7008895,"line_start":619,"line_end":619,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008896,"byte_end":7008903,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008904,"byte_end":7008915,"line_start":621,"line_end":621,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7008916,"byte_end":7008933,"line_start":622,"line_end":622,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009445,"byte_end":7009462,"line_start":641,"line_end":641,"column_start":8,"column_end":25},"name":"cmp_le_mask_m128d","qualname":"::x86_x64::sse2::cmp_le_mask_m128d","value":"pub fn cmp_le_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a <= b`.","sig":null,"attributes":[{"value":"/ Lanewise `a <= b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009094,"byte_end":7009116,"line_start":628,"line_end":628,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009117,"byte_end":7009120,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009121,"byte_end":7009137,"line_start":630,"line_end":630,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009138,"byte_end":7009145,"line_start":631,"line_end":631,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009146,"byte_end":7009169,"line_start":632,"line_end":632,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009170,"byte_end":7009212,"line_start":633,"line_end":633,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009213,"byte_end":7009255,"line_start":634,"line_end":634,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_le_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009256,"byte_end":7009302,"line_start":635,"line_end":635,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u64::MAX, u64::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009303,"byte_end":7009343,"line_start":636,"line_end":636,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009344,"byte_end":7009351,"line_start":637,"line_end":637,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009352,"byte_end":7009363,"line_start":638,"line_end":638,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009364,"byte_end":7009381,"line_start":639,"line_end":639,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":649},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009923,"byte_end":7009942,"line_start":658,"line_end":658,"column_start":8,"column_end":27},"name":"cmp_le_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_le_mask_m128d_s","value":"pub fn cmp_le_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a <= b`, other lanes unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a <= b`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009540,"byte_end":7009585,"line_start":645,"line_end":645,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009586,"byte_end":7009589,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009590,"byte_end":7009606,"line_start":647,"line_end":647,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009607,"byte_end":7009614,"line_start":648,"line_end":648,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009615,"byte_end":7009638,"line_start":649,"line_end":649,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009639,"byte_end":7009681,"line_start":650,"line_end":650,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009682,"byte_end":7009724,"line_start":651,"line_end":651,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_le_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009725,"byte_end":7009773,"line_start":652,"line_end":652,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009774,"byte_end":7009821,"line_start":653,"line_end":653,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009822,"byte_end":7009829,"line_start":654,"line_end":654,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009830,"byte_end":7009841,"line_start":655,"line_end":655,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7009842,"byte_end":7009859,"line_start":656,"line_end":656,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010591,"byte_end":7010611,"line_start":678,"line_end":678,"column_start":8,"column_end":28},"name":"cmp_lt_mask_i8_m128i","qualname":"::x86_x64::sse2::cmp_lt_mask_i8_m128i","value":"pub fn cmp_lt_mask_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a < b` with lanes as `i8`.","sig":null,"attributes":[{"value":"/ Lanewise `a < b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010020,"byte_end":7010060,"line_start":662,"line_end":662,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010061,"byte_end":7010064,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010065,"byte_end":7010123,"line_start":664,"line_end":664,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010124,"byte_end":7010131,"line_start":665,"line_end":665,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010132,"byte_end":7010155,"line_start":666,"line_end":666,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010156,"byte_end":7010167,"line_start":667,"line_end":667,"column_start":1,"column_end":12}},{"value":"/   m128i::from([1_i8, 1, 20, 3, 40, 5, 60, 7, 80, 9, 10, 11, 12, 13, 14, 127]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010168,"byte_end":7010250,"line_start":668,"line_end":668,"column_start":1,"column_end":83}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010251,"byte_end":7010276,"line_start":669,"line_end":669,"column_start":1,"column_end":26}},{"value":"/   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 120,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010277,"byte_end":7010347,"line_start":670,"line_end":670,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010348,"byte_end":7010355,"line_start":671,"line_end":671,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = cmp_lt_mask_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010356,"byte_end":7010412,"line_start":672,"line_end":672,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0, -1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010413,"byte_end":7010489,"line_start":673,"line_end":673,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010490,"byte_end":7010497,"line_start":674,"line_end":674,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010498,"byte_end":7010509,"line_start":675,"line_end":675,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010510,"byte_end":7010527,"line_start":676,"line_end":676,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":651},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011156,"byte_end":7011177,"line_start":695,"line_end":695,"column_start":8,"column_end":29},"name":"cmp_lt_mask_i16_m128i","qualname":"::x86_x64::sse2::cmp_lt_mask_i16_m128i","value":"pub fn cmp_lt_mask_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a < b` with lanes as `i16`.","sig":null,"attributes":[{"value":"/ Lanewise `a < b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010691,"byte_end":7010732,"line_start":682,"line_end":682,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010733,"byte_end":7010736,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010737,"byte_end":7010795,"line_start":684,"line_end":684,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010796,"byte_end":7010803,"line_start":685,"line_end":685,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010804,"byte_end":7010827,"line_start":686,"line_end":686,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 20, 3, 40, -1, -2, -3, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010828,"byte_end":7010887,"line_start":687,"line_end":687,"column_start":1,"column_end":60}},{"value":"/ let b = m128i::from([5_i16, 2, 7, 4, -15, -26, -37, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010888,"byte_end":7010949,"line_start":688,"line_end":688,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = cmp_lt_mask_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7010950,"byte_end":7011007,"line_start":689,"line_end":689,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [-1, 0, -1, 0, 0, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011008,"byte_end":7011054,"line_start":690,"line_end":690,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011055,"byte_end":7011062,"line_start":691,"line_end":691,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011063,"byte_end":7011074,"line_start":692,"line_end":692,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011075,"byte_end":7011092,"line_start":693,"line_end":693,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":652},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011668,"byte_end":7011689,"line_start":712,"line_end":712,"column_start":8,"column_end":29},"name":"cmp_lt_mask_i32_m128i","qualname":"::x86_x64::sse2::cmp_lt_mask_i32_m128i","value":"pub fn cmp_lt_mask_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a < b` with lanes as `i32`.","sig":null,"attributes":[{"value":"/ Lanewise `a < b` with lanes as `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011258,"byte_end":7011299,"line_start":699,"line_end":699,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011300,"byte_end":7011303,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/ All bits 1 for true (`-1`), all bit 0 for false (`0`).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011304,"byte_end":7011362,"line_start":701,"line_end":701,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011363,"byte_end":7011370,"line_start":702,"line_end":702,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011371,"byte_end":7011394,"line_start":703,"line_end":703,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 20, 7, 40]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011395,"byte_end":7011435,"line_start":704,"line_end":704,"column_start":1,"column_end":41}},{"value":"/ let b = m128i::from([5, 2, 7, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011436,"byte_end":7011474,"line_start":705,"line_end":705,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = cmp_lt_mask_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011475,"byte_end":7011532,"line_start":706,"line_end":706,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [-1, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011533,"byte_end":7011566,"line_start":707,"line_end":707,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011567,"byte_end":7011574,"line_start":708,"line_end":708,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011575,"byte_end":7011586,"line_start":709,"line_end":709,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011587,"byte_end":7011604,"line_start":710,"line_end":710,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012113,"byte_end":7012130,"line_start":729,"line_end":729,"column_start":8,"column_end":25},"name":"cmp_lt_mask_m128d","qualname":"::x86_x64::sse2::cmp_lt_mask_m128d","value":"pub fn cmp_lt_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a < b`.","sig":null,"attributes":[{"value":"/ Lanewise `a < b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011770,"byte_end":7011791,"line_start":716,"line_end":716,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011792,"byte_end":7011795,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011796,"byte_end":7011812,"line_start":718,"line_end":718,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011813,"byte_end":7011820,"line_start":719,"line_end":719,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011821,"byte_end":7011844,"line_start":720,"line_end":720,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 7.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011845,"byte_end":7011887,"line_start":721,"line_end":721,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011888,"byte_end":7011930,"line_start":722,"line_end":722,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_lt_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011931,"byte_end":7011977,"line_start":723,"line_end":723,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7011978,"byte_end":7012011,"line_start":724,"line_end":724,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012012,"byte_end":7012019,"line_start":725,"line_end":725,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012020,"byte_end":7012031,"line_start":726,"line_end":726,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012032,"byte_end":7012049,"line_start":727,"line_end":727,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":654},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012589,"byte_end":7012608,"line_start":746,"line_end":746,"column_start":8,"column_end":27},"name":"cmp_lt_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_lt_mask_m128d_s","value":"pub fn cmp_lt_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a < b`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a < b`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012208,"byte_end":7012251,"line_start":733,"line_end":733,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012252,"byte_end":7012255,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012256,"byte_end":7012272,"line_start":735,"line_end":735,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012273,"byte_end":7012280,"line_start":736,"line_end":736,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012281,"byte_end":7012304,"line_start":737,"line_end":737,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012305,"byte_end":7012347,"line_start":738,"line_end":738,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012348,"byte_end":7012390,"line_start":739,"line_end":739,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_lt_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012391,"byte_end":7012439,"line_start":740,"line_end":740,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012440,"byte_end":7012487,"line_start":741,"line_end":741,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012488,"byte_end":7012495,"line_start":742,"line_end":742,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012496,"byte_end":7012507,"line_start":743,"line_end":743,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012508,"byte_end":7012525,"line_start":744,"line_end":744,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":655},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013031,"byte_end":7013049,"line_start":763,"line_end":763,"column_start":8,"column_end":26},"name":"cmp_neq_mask_m128d","qualname":"::x86_x64::sse2::cmp_neq_mask_m128d","value":"pub fn cmp_neq_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a != b`.","sig":null,"attributes":[{"value":"/ Lanewise `a != b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012686,"byte_end":7012708,"line_start":750,"line_end":750,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012709,"byte_end":7012712,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012713,"byte_end":7012729,"line_start":752,"line_end":752,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012730,"byte_end":7012737,"line_start":753,"line_end":753,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012738,"byte_end":7012761,"line_start":754,"line_end":754,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012762,"byte_end":7012804,"line_start":755,"line_end":755,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012805,"byte_end":7012847,"line_start":756,"line_end":756,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_neq_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012848,"byte_end":7012895,"line_start":757,"line_end":757,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012896,"byte_end":7012929,"line_start":758,"line_end":758,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012930,"byte_end":7012937,"line_start":759,"line_end":759,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012938,"byte_end":7012949,"line_start":760,"line_end":760,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7012950,"byte_end":7012967,"line_start":761,"line_end":761,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":656},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013511,"byte_end":7013531,"line_start":780,"line_end":780,"column_start":8,"column_end":28},"name":"cmp_neq_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_neq_mask_m128d_s","value":"pub fn cmp_neq_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a != b`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a != b`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013128,"byte_end":7013172,"line_start":767,"line_end":767,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013173,"byte_end":7013176,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013177,"byte_end":7013193,"line_start":769,"line_end":769,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013194,"byte_end":7013201,"line_start":770,"line_end":770,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013202,"byte_end":7013225,"line_start":771,"line_end":771,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013226,"byte_end":7013268,"line_start":772,"line_end":772,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013269,"byte_end":7013311,"line_start":773,"line_end":773,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_neq_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013312,"byte_end":7013361,"line_start":774,"line_end":774,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013362,"byte_end":7013409,"line_start":775,"line_end":775,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013410,"byte_end":7013417,"line_start":776,"line_end":776,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013418,"byte_end":7013429,"line_start":777,"line_end":777,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013430,"byte_end":7013447,"line_start":778,"line_end":778,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":657},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013958,"byte_end":7013976,"line_start":797,"line_end":797,"column_start":8,"column_end":26},"name":"cmp_nge_mask_m128d","qualname":"::x86_x64::sse2::cmp_nge_mask_m128d","value":"pub fn cmp_nge_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a >= b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a >= b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013610,"byte_end":7013635,"line_start":784,"line_end":784,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013636,"byte_end":7013639,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013640,"byte_end":7013656,"line_start":786,"line_end":786,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013657,"byte_end":7013664,"line_start":787,"line_end":787,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013665,"byte_end":7013688,"line_start":788,"line_end":788,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013689,"byte_end":7013731,"line_start":789,"line_end":789,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013732,"byte_end":7013774,"line_start":790,"line_end":790,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_nge_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013775,"byte_end":7013822,"line_start":791,"line_end":791,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [0, u64::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013823,"byte_end":7013856,"line_start":792,"line_end":792,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013857,"byte_end":7013864,"line_start":793,"line_end":793,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013865,"byte_end":7013876,"line_start":794,"line_end":794,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7013877,"byte_end":7013894,"line_start":795,"line_end":795,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":658},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014434,"byte_end":7014454,"line_start":814,"line_end":814,"column_start":8,"column_end":28},"name":"cmp_nge_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_nge_mask_m128d_s","value":"pub fn cmp_nge_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a >= b)`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a >= b)`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014055,"byte_end":7014102,"line_start":801,"line_end":801,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014103,"byte_end":7014106,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014107,"byte_end":7014123,"line_start":803,"line_end":803,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014124,"byte_end":7014131,"line_start":804,"line_end":804,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014132,"byte_end":7014155,"line_start":805,"line_end":805,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014156,"byte_end":7014198,"line_start":806,"line_end":806,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014199,"byte_end":7014241,"line_start":807,"line_end":807,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_nge_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014242,"byte_end":7014291,"line_start":808,"line_end":808,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [0, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014292,"byte_end":7014332,"line_start":809,"line_end":809,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014333,"byte_end":7014340,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014341,"byte_end":7014352,"line_start":811,"line_end":811,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014353,"byte_end":7014370,"line_start":812,"line_end":812,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":659},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014880,"byte_end":7014898,"line_start":831,"line_end":831,"column_start":8,"column_end":26},"name":"cmp_ngt_mask_m128d","qualname":"::x86_x64::sse2::cmp_ngt_mask_m128d","value":"pub fn cmp_ngt_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a > b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a > b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014533,"byte_end":7014557,"line_start":818,"line_end":818,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014558,"byte_end":7014561,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014562,"byte_end":7014578,"line_start":820,"line_end":820,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014579,"byte_end":7014586,"line_start":821,"line_end":821,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014587,"byte_end":7014610,"line_start":822,"line_end":822,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014611,"byte_end":7014653,"line_start":823,"line_end":823,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014654,"byte_end":7014696,"line_start":824,"line_end":824,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_ngt_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014697,"byte_end":7014744,"line_start":825,"line_end":825,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [0, u64::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014745,"byte_end":7014778,"line_start":826,"line_end":826,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014779,"byte_end":7014786,"line_start":827,"line_end":827,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014787,"byte_end":7014798,"line_start":828,"line_end":828,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014799,"byte_end":7014816,"line_start":829,"line_end":829,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":660},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015355,"byte_end":7015375,"line_start":848,"line_end":848,"column_start":8,"column_end":28},"name":"cmp_ngt_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_ngt_mask_m128d_s","value":"pub fn cmp_ngt_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a > b)`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a > b)`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7014977,"byte_end":7015023,"line_start":835,"line_end":835,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015024,"byte_end":7015027,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015028,"byte_end":7015044,"line_start":837,"line_end":837,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015045,"byte_end":7015052,"line_start":838,"line_end":838,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015053,"byte_end":7015076,"line_start":839,"line_end":839,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015077,"byte_end":7015119,"line_start":840,"line_end":840,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015120,"byte_end":7015162,"line_start":841,"line_end":841,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_ngt_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015163,"byte_end":7015212,"line_start":842,"line_end":842,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [0, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015213,"byte_end":7015253,"line_start":843,"line_end":843,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015254,"byte_end":7015261,"line_start":844,"line_end":844,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015262,"byte_end":7015273,"line_start":845,"line_end":845,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015274,"byte_end":7015291,"line_start":846,"line_end":846,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015802,"byte_end":7015820,"line_start":865,"line_end":865,"column_start":8,"column_end":26},"name":"cmp_nle_mask_m128d","qualname":"::x86_x64::sse2::cmp_nle_mask_m128d","value":"pub fn cmp_nle_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a <= b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a <= b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015454,"byte_end":7015479,"line_start":852,"line_end":852,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015480,"byte_end":7015483,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015484,"byte_end":7015500,"line_start":854,"line_end":854,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015501,"byte_end":7015508,"line_start":855,"line_end":855,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015509,"byte_end":7015532,"line_start":856,"line_end":856,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015533,"byte_end":7015575,"line_start":857,"line_end":857,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015576,"byte_end":7015618,"line_start":858,"line_end":858,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_nle_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015619,"byte_end":7015666,"line_start":859,"line_end":859,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015667,"byte_end":7015700,"line_start":860,"line_end":860,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015701,"byte_end":7015708,"line_start":861,"line_end":861,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015709,"byte_end":7015720,"line_start":862,"line_end":862,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015721,"byte_end":7015738,"line_start":863,"line_end":863,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":662},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016285,"byte_end":7016305,"line_start":882,"line_end":882,"column_start":8,"column_end":28},"name":"cmp_nle_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_nle_mask_m128d_s","value":"pub fn cmp_nle_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a <= b)`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a <= b)`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015899,"byte_end":7015946,"line_start":869,"line_end":869,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015947,"byte_end":7015950,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015951,"byte_end":7015967,"line_start":871,"line_end":871,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015968,"byte_end":7015975,"line_start":872,"line_end":872,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7015976,"byte_end":7015999,"line_start":873,"line_end":873,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016000,"byte_end":7016042,"line_start":874,"line_end":874,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016043,"byte_end":7016085,"line_start":875,"line_end":875,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_nle_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016086,"byte_end":7016135,"line_start":876,"line_end":876,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016136,"byte_end":7016183,"line_start":877,"line_end":877,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016184,"byte_end":7016191,"line_start":878,"line_end":878,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016192,"byte_end":7016203,"line_start":879,"line_end":879,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016204,"byte_end":7016221,"line_start":880,"line_end":880,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016731,"byte_end":7016749,"line_start":899,"line_end":899,"column_start":8,"column_end":26},"name":"cmp_nlt_mask_m128d","qualname":"::x86_x64::sse2::cmp_nlt_mask_m128d","value":"pub fn cmp_nlt_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `!(a < b)`.","sig":null,"attributes":[{"value":"/ Lanewise `!(a < b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016384,"byte_end":7016408,"line_start":886,"line_end":886,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016409,"byte_end":7016412,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016413,"byte_end":7016429,"line_start":888,"line_end":888,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016430,"byte_end":7016437,"line_start":889,"line_end":889,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016438,"byte_end":7016461,"line_start":890,"line_end":890,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016462,"byte_end":7016504,"line_start":891,"line_end":891,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016505,"byte_end":7016547,"line_start":892,"line_end":892,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_nlt_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016548,"byte_end":7016595,"line_start":893,"line_end":893,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016596,"byte_end":7016629,"line_start":894,"line_end":894,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016630,"byte_end":7016637,"line_start":895,"line_end":895,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016638,"byte_end":7016649,"line_start":896,"line_end":896,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016650,"byte_end":7016667,"line_start":897,"line_end":897,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":664},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017213,"byte_end":7017233,"line_start":916,"line_end":916,"column_start":8,"column_end":28},"name":"cmp_nlt_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_nlt_mask_m128d_s","value":"pub fn cmp_nlt_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `!(a < b)`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `!(a < b)`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016828,"byte_end":7016874,"line_start":903,"line_end":903,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016875,"byte_end":7016878,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016879,"byte_end":7016895,"line_start":905,"line_end":905,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016896,"byte_end":7016903,"line_start":906,"line_end":906,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016904,"byte_end":7016927,"line_start":907,"line_end":907,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016928,"byte_end":7016970,"line_start":908,"line_end":908,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7016971,"byte_end":7017013,"line_start":909,"line_end":909,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_nlt_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017014,"byte_end":7017063,"line_start":910,"line_end":910,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017064,"byte_end":7017111,"line_start":911,"line_end":911,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017112,"byte_end":7017119,"line_start":912,"line_end":912,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017120,"byte_end":7017131,"line_start":913,"line_end":913,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017132,"byte_end":7017149,"line_start":914,"line_end":914,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017690,"byte_end":7017713,"line_start":933,"line_end":933,"column_start":8,"column_end":31},"name":"cmp_ordinary_mask_m128d","qualname":"::x86_x64::sse2::cmp_ordinary_mask_m128d","value":"pub fn cmp_ordinary_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `(!a.is_nan()) & (!b.is_nan())`.","sig":null,"attributes":[{"value":"/ Lanewise `(!a.is_nan()) & (!b.is_nan())`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017312,"byte_end":7017357,"line_start":920,"line_end":920,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017358,"byte_end":7017361,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017362,"byte_end":7017378,"line_start":922,"line_end":922,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017379,"byte_end":7017386,"line_start":923,"line_end":923,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017387,"byte_end":7017410,"line_start":924,"line_end":924,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([3.0, f64::NAN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017411,"byte_end":7017458,"line_start":925,"line_end":925,"column_start":1,"column_end":48}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017459,"byte_end":7017501,"line_start":926,"line_end":926,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_ordinary_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017502,"byte_end":7017554,"line_start":927,"line_end":927,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017555,"byte_end":7017588,"line_start":928,"line_end":928,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017589,"byte_end":7017596,"line_start":929,"line_end":929,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017597,"byte_end":7017608,"line_start":930,"line_end":930,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017609,"byte_end":7017626,"line_start":931,"line_end":931,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":666},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018203,"byte_end":7018228,"line_start":950,"line_end":950,"column_start":8,"column_end":33},"name":"cmp_ordinary_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_ordinary_mask_m128d_s","value":"pub fn cmp_ordinary_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `(!a.is_nan()) & (!b.is_nan())`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `(!a.is_nan()) & (!b.is_nan())`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017792,"byte_end":7017859,"line_start":937,"line_end":937,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017860,"byte_end":7017863,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017864,"byte_end":7017880,"line_start":939,"line_end":939,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017881,"byte_end":7017888,"line_start":940,"line_end":940,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017889,"byte_end":7017912,"line_start":941,"line_end":941,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([2.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017913,"byte_end":7017955,"line_start":942,"line_end":942,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017956,"byte_end":7017998,"line_start":943,"line_end":943,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_ordinary_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7017999,"byte_end":7018053,"line_start":944,"line_end":944,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018054,"byte_end":7018101,"line_start":945,"line_end":945,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018102,"byte_end":7018109,"line_start":946,"line_end":946,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018110,"byte_end":7018121,"line_start":947,"line_end":947,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018122,"byte_end":7018139,"line_start":948,"line_end":948,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018676,"byte_end":7018696,"line_start":967,"line_end":967,"column_start":8,"column_end":28},"name":"cmp_unord_mask_m128d","qualname":"::x86_x64::sse2::cmp_unord_mask_m128d","value":"pub fn cmp_unord_mask_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a.is_nan() | b.is_nan()`.","sig":null,"attributes":[{"value":"/ Lanewise `a.is_nan() | b.is_nan()`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018307,"byte_end":7018346,"line_start":954,"line_end":954,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018347,"byte_end":7018350,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018351,"byte_end":7018367,"line_start":956,"line_end":956,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018368,"byte_end":7018375,"line_start":957,"line_end":957,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018376,"byte_end":7018399,"line_start":958,"line_end":958,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([f64::NAN, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018400,"byte_end":7018447,"line_start":959,"line_end":959,"column_start":1,"column_end":48}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018448,"byte_end":7018490,"line_start":960,"line_end":960,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_unord_mask_m128d(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018491,"byte_end":7018540,"line_start":961,"line_end":961,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [u64::MAX, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018541,"byte_end":7018574,"line_start":962,"line_end":962,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018575,"byte_end":7018582,"line_start":963,"line_end":963,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018583,"byte_end":7018594,"line_start":964,"line_end":964,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018595,"byte_end":7018612,"line_start":965,"line_end":965,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":668},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019184,"byte_end":7019206,"line_start":984,"line_end":984,"column_start":8,"column_end":30},"name":"cmp_unord_mask_m128d_s","qualname":"::x86_x64::sse2::cmp_unord_mask_m128d_s","value":"pub fn cmp_unord_mask_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `a.is_nan() | b.is_nan()`, other lane unchanged.","sig":null,"attributes":[{"value":"/ Low lane `a.is_nan() | b.is_nan()`, other lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018777,"byte_end":7018838,"line_start":971,"line_end":971,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018839,"byte_end":7018842,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ Mask output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018843,"byte_end":7018859,"line_start":973,"line_end":973,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018860,"byte_end":7018867,"line_start":974,"line_end":974,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018868,"byte_end":7018891,"line_start":975,"line_end":975,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([f64::NAN, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018892,"byte_end":7018939,"line_start":976,"line_end":976,"column_start":1,"column_end":48}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018940,"byte_end":7018982,"line_start":977,"line_end":977,"column_start":1,"column_end":43}},{"value":"/ let c = cmp_unord_mask_m128d_s(a, b).to_bits();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7018983,"byte_end":7019034,"line_start":978,"line_end":978,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(c, [u64::MAX, 5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019035,"byte_end":7019082,"line_start":979,"line_end":979,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019083,"byte_end":7019090,"line_start":980,"line_end":980,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019091,"byte_end":7019102,"line_start":981,"line_end":981,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019103,"byte_end":7019120,"line_start":982,"line_end":982,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019606,"byte_end":7019624,"line_start":1000,"line_end":1000,"column_start":8,"column_end":26},"name":"cmp_eq_i32_m128d_s","qualname":"::x86_x64::sse2::cmp_eq_i32_m128d_s","value":"pub fn cmp_eq_i32_m128d_s(m128d, m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane `f64` equal to.","sig":null,"attributes":[{"value":"/ Low lane `f64` equal to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019287,"byte_end":7019315,"line_start":988,"line_end":988,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019316,"byte_end":7019319,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019320,"byte_end":7019337,"line_start":990,"line_end":990,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019338,"byte_end":7019345,"line_start":991,"line_end":991,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019346,"byte_end":7019369,"line_start":992,"line_end":992,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019370,"byte_end":7019412,"line_start":993,"line_end":993,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019413,"byte_end":7019455,"line_start":994,"line_end":994,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(1_i32, cmp_eq_i32_m128d_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019456,"byte_end":7019504,"line_start":995,"line_end":995,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019505,"byte_end":7019512,"line_start":996,"line_end":996,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019513,"byte_end":7019524,"line_start":997,"line_end":997,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019525,"byte_end":7019542,"line_start":998,"line_end":998,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":670},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020029,"byte_end":7020047,"line_start":1016,"line_end":1016,"column_start":8,"column_end":26},"name":"cmp_ge_i32_m128d_s","qualname":"::x86_x64::sse2::cmp_ge_i32_m128d_s","value":"pub fn cmp_ge_i32_m128d_s(m128d, m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane `f64` greater than or equal to.","sig":null,"attributes":[{"value":"/ Low lane `f64` greater than or equal to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019694,"byte_end":7019738,"line_start":1004,"line_end":1004,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019739,"byte_end":7019742,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019743,"byte_end":7019760,"line_start":1006,"line_end":1006,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019761,"byte_end":7019768,"line_start":1007,"line_end":1007,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019769,"byte_end":7019792,"line_start":1008,"line_end":1008,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019793,"byte_end":7019835,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019836,"byte_end":7019878,"line_start":1010,"line_end":1010,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(1_i32, cmp_ge_i32_m128d_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019879,"byte_end":7019927,"line_start":1011,"line_end":1011,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019928,"byte_end":7019935,"line_start":1012,"line_end":1012,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019936,"byte_end":7019947,"line_start":1013,"line_end":1013,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7019948,"byte_end":7019965,"line_start":1014,"line_end":1014,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":671},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020440,"byte_end":7020458,"line_start":1032,"line_end":1032,"column_start":8,"column_end":26},"name":"cmp_gt_i32_m128d_s","qualname":"::x86_x64::sse2::cmp_gt_i32_m128d_s","value":"pub fn cmp_gt_i32_m128d_s(m128d, m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane `f64` greater than.","sig":null,"attributes":[{"value":"/ Low lane `f64` greater than.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020117,"byte_end":7020149,"line_start":1020,"line_end":1020,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020150,"byte_end":7020153,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020154,"byte_end":7020171,"line_start":1022,"line_end":1022,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020172,"byte_end":7020179,"line_start":1023,"line_end":1023,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020180,"byte_end":7020203,"line_start":1024,"line_end":1024,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020204,"byte_end":7020246,"line_start":1025,"line_end":1025,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020247,"byte_end":7020289,"line_start":1026,"line_end":1026,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(1_i32, cmp_ge_i32_m128d_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020290,"byte_end":7020338,"line_start":1027,"line_end":1027,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020339,"byte_end":7020346,"line_start":1028,"line_end":1028,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020347,"byte_end":7020358,"line_start":1029,"line_end":1029,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020359,"byte_end":7020376,"line_start":1030,"line_end":1030,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020860,"byte_end":7020878,"line_start":1048,"line_end":1048,"column_start":8,"column_end":26},"name":"cmp_le_i32_m128d_s","qualname":"::x86_x64::sse2::cmp_le_i32_m128d_s","value":"pub fn cmp_le_i32_m128d_s(m128d, m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane `f64` less than or equal to.","sig":null,"attributes":[{"value":"/ Low lane `f64` less than or equal to.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020528,"byte_end":7020569,"line_start":1036,"line_end":1036,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020570,"byte_end":7020573,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020574,"byte_end":7020591,"line_start":1038,"line_end":1038,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020592,"byte_end":7020599,"line_start":1039,"line_end":1039,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020600,"byte_end":7020623,"line_start":1040,"line_end":1040,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020624,"byte_end":7020666,"line_start":1041,"line_end":1041,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020667,"byte_end":7020709,"line_start":1042,"line_end":1042,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(1_i32, cmp_le_i32_m128d_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020710,"byte_end":7020758,"line_start":1043,"line_end":1043,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020759,"byte_end":7020766,"line_start":1044,"line_end":1044,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020767,"byte_end":7020778,"line_start":1045,"line_end":1045,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020779,"byte_end":7020796,"line_start":1046,"line_end":1046,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021268,"byte_end":7021286,"line_start":1064,"line_end":1064,"column_start":8,"column_end":26},"name":"cmp_lt_i32_m128d_s","qualname":"::x86_x64::sse2::cmp_lt_i32_m128d_s","value":"pub fn cmp_lt_i32_m128d_s(m128d, m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane `f64` less than.","sig":null,"attributes":[{"value":"/ Low lane `f64` less than.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020948,"byte_end":7020977,"line_start":1052,"line_end":1052,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020978,"byte_end":7020981,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7020982,"byte_end":7020999,"line_start":1054,"line_end":1054,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021000,"byte_end":7021007,"line_start":1055,"line_end":1055,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021008,"byte_end":7021031,"line_start":1056,"line_end":1056,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021032,"byte_end":7021074,"line_start":1057,"line_end":1057,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021075,"byte_end":7021117,"line_start":1058,"line_end":1058,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(1_i32, cmp_lt_i32_m128d_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021118,"byte_end":7021166,"line_start":1059,"line_end":1059,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021167,"byte_end":7021174,"line_start":1060,"line_end":1060,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021175,"byte_end":7021186,"line_start":1061,"line_end":1061,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021187,"byte_end":7021204,"line_start":1062,"line_end":1062,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021677,"byte_end":7021696,"line_start":1080,"line_end":1080,"column_start":8,"column_end":27},"name":"cmp_neq_i32_m128d_s","qualname":"::x86_x64::sse2::cmp_neq_i32_m128d_s","value":"pub fn cmp_neq_i32_m128d_s(m128d, m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Low lane `f64` less than.","sig":null,"attributes":[{"value":"/ Low lane `f64` less than.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021356,"byte_end":7021385,"line_start":1068,"line_end":1068,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021386,"byte_end":7021389,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ `i32` output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021390,"byte_end":7021407,"line_start":1070,"line_end":1070,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021408,"byte_end":7021415,"line_start":1071,"line_end":1071,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021416,"byte_end":7021439,"line_start":1072,"line_end":1072,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 5.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021440,"byte_end":7021482,"line_start":1073,"line_end":1073,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021483,"byte_end":7021525,"line_start":1074,"line_end":1074,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(1_i32, cmp_neq_i32_m128d_s(a, b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021526,"byte_end":7021575,"line_start":1075,"line_end":1075,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021576,"byte_end":7021583,"line_start":1076,"line_end":1076,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021584,"byte_end":7021595,"line_start":1077,"line_end":1077,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021596,"byte_end":7021613,"line_start":1078,"line_end":1078,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022217,"byte_end":7022255,"line_start":1097,"line_end":1097,"column_start":8,"column_end":46},"name":"convert_to_m128d_from_lower2_i32_m128i","qualname":"::x86_x64::sse2::convert_to_m128d_from_lower2_i32_m128i","value":"pub fn convert_to_m128d_from_lower2_i32_m128i(m128i) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Rounds the lower two `i32` lanes to two `f64` lanes.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = convert_to_m128d_from_lower2_i32_m128i(a);\n let c = m128d::from_array([1.0, 2.0]);\n assert_eq!(b.to_bits(), c.to_bits());\n ```\n * **Intrinsic:** [`_mm_cvtepi32_pd`]\n * **Assembly:** `cvtdq2pd xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Rounds the lower two `i32` lanes to two `f64` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021767,"byte_end":7021823,"line_start":1084,"line_end":1084,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021824,"byte_end":7021831,"line_start":1085,"line_end":1085,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021832,"byte_end":7021855,"line_start":1086,"line_end":1086,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021856,"byte_end":7021894,"line_start":1087,"line_end":1087,"column_start":1,"column_end":39}},{"value":"/ let b = convert_to_m128d_from_lower2_i32_m128i(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021895,"byte_end":7021949,"line_start":1088,"line_end":1088,"column_start":1,"column_end":55}},{"value":"/ let c = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021950,"byte_end":7021992,"line_start":1089,"line_end":1089,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(b.to_bits(), c.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7021993,"byte_end":7022034,"line_start":1090,"line_end":1090,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022035,"byte_end":7022042,"line_start":1091,"line_end":1091,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtepi32_pd`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022043,"byte_end":7022083,"line_start":1092,"line_end":1092,"column_start":1,"column_end":41}},{"value":"/ * **Assembly:** `cvtdq2pd xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022084,"byte_end":7022123,"line_start":1093,"line_end":1093,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022124,"byte_end":7022135,"line_start":1094,"line_end":1094,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022136,"byte_end":7022153,"line_start":1095,"line_end":1095,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":676},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022768,"byte_end":7022798,"line_start":1114,"line_end":1114,"column_start":8,"column_end":38},"name":"convert_to_m128_from_i32_m128i","qualname":"::x86_x64::sse2::convert_to_m128_from_i32_m128i","value":"pub fn convert_to_m128_from_i32_m128i(m128i) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Rounds the four `i32` lanes to four `f32` lanes.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = convert_to_m128_from_i32_m128i(a);\n let c = m128::from_array([1.0, 2.0, 3.0, 4.0]);\n assert_eq!(b.to_bits(), c.to_bits());\n ```\n * **Intrinsic:** [`_mm_cvtepi32_ps`]\n * **Assembly:** `cvtdq2ps xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Rounds the four `i32` lanes to four `f32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022321,"byte_end":7022373,"line_start":1101,"line_end":1101,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022374,"byte_end":7022381,"line_start":1102,"line_end":1102,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022382,"byte_end":7022405,"line_start":1103,"line_end":1103,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022406,"byte_end":7022444,"line_start":1104,"line_end":1104,"column_start":1,"column_end":39}},{"value":"/ let b = convert_to_m128_from_i32_m128i(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022445,"byte_end":7022491,"line_start":1105,"line_end":1105,"column_start":1,"column_end":47}},{"value":"/ let c = m128::from_array([1.0, 2.0, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022492,"byte_end":7022543,"line_start":1106,"line_end":1106,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(b.to_bits(), c.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022544,"byte_end":7022585,"line_start":1107,"line_end":1107,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022586,"byte_end":7022593,"line_start":1108,"line_end":1108,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtepi32_ps`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022594,"byte_end":7022634,"line_start":1109,"line_end":1109,"column_start":1,"column_end":41}},{"value":"/ * **Assembly:** `cvtdq2ps xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022635,"byte_end":7022674,"line_start":1110,"line_end":1110,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022675,"byte_end":7022686,"line_start":1111,"line_end":1111,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022687,"byte_end":7022704,"line_start":1112,"line_end":1112,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":677},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023291,"byte_end":7023322,"line_start":1131,"line_end":1131,"column_start":8,"column_end":39},"name":"convert_to_i32_m128i_from_m128d","qualname":"::x86_x64::sse2::convert_to_i32_m128i_from_m128d","value":"pub fn convert_to_i32_m128i_from_m128d(m128d) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Rounds the two `f64` lanes to the low two `i32` lanes.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.5]);\n let b = convert_to_i32_m128i_from_m128d(a);\n let c: [i32; 4] = b.into();\n assert_eq!(c, [1, 2, 0, 0]);\n ```\n * **Intrinsic:** [`_mm_cvtpd_epi32`]\n * **Assembly:** `cvtpd2dq xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Rounds the two `f64` lanes to the low two `i32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022862,"byte_end":7022920,"line_start":1118,"line_end":1118,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022921,"byte_end":7022928,"line_start":1119,"line_end":1119,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022929,"byte_end":7022952,"line_start":1120,"line_end":1120,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022953,"byte_end":7022995,"line_start":1121,"line_end":1121,"column_start":1,"column_end":43}},{"value":"/ let b = convert_to_i32_m128i_from_m128d(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7022996,"byte_end":7023043,"line_start":1122,"line_end":1122,"column_start":1,"column_end":48}},{"value":"/ let c: [i32; 4] = b.into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023044,"byte_end":7023075,"line_start":1123,"line_end":1123,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(c, [1, 2, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023076,"byte_end":7023108,"line_start":1124,"line_end":1124,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023109,"byte_end":7023116,"line_start":1125,"line_end":1125,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtpd_epi32`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023117,"byte_end":7023157,"line_start":1126,"line_end":1126,"column_start":1,"column_end":41}},{"value":"/ * **Assembly:** `cvtpd2dq xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023158,"byte_end":7023197,"line_start":1127,"line_end":1127,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023198,"byte_end":7023209,"line_start":1128,"line_end":1128,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023210,"byte_end":7023227,"line_start":1129,"line_end":1129,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023817,"byte_end":7023843,"line_start":1147,"line_end":1147,"column_start":8,"column_end":34},"name":"convert_to_m128_from_m128d","qualname":"::x86_x64::sse2::convert_to_m128_from_m128d","value":"pub fn convert_to_m128_from_m128d(m128d) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Rounds the two `f64` lanes to the low two `f32` lanes.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.5]);\n let b = convert_to_m128_from_m128d(a);\n assert_eq!(b.to_bits(), [1_f32.to_bits(), 2.5_f32.to_bits(), 0, 0]);\n ```\n * **Intrinsic:** [`_mm_cvtpd_ps`]\n * **Assembly:** `cvtpd2ps xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Rounds the two `f64` lanes to the low two `f32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023388,"byte_end":7023446,"line_start":1135,"line_end":1135,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023447,"byte_end":7023454,"line_start":1136,"line_end":1136,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023455,"byte_end":7023478,"line_start":1137,"line_end":1137,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023479,"byte_end":7023521,"line_start":1138,"line_end":1138,"column_start":1,"column_end":43}},{"value":"/ let b = convert_to_m128_from_m128d(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023522,"byte_end":7023564,"line_start":1139,"line_end":1139,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(b.to_bits(), [1_f32.to_bits(), 2.5_f32.to_bits(), 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023565,"byte_end":7023637,"line_start":1140,"line_end":1140,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023638,"byte_end":7023645,"line_start":1141,"line_end":1141,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtpd_ps`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023646,"byte_end":7023683,"line_start":1142,"line_end":1142,"column_start":1,"column_end":38}},{"value":"/ * **Assembly:** `cvtpd2ps xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023684,"byte_end":7023723,"line_start":1143,"line_end":1143,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023724,"byte_end":7023735,"line_start":1144,"line_end":1144,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023736,"byte_end":7023753,"line_start":1145,"line_end":1145,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024325,"byte_end":7024355,"line_start":1164,"line_end":1164,"column_start":8,"column_end":38},"name":"convert_to_i32_m128i_from_m128","qualname":"::x86_x64::sse2::convert_to_i32_m128i_from_m128","value":"pub fn convert_to_i32_m128i_from_m128(m128) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Rounds the `f32` lanes to `i32` lanes.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.5, 3.0, 4.0]);\n let b = convert_to_i32_m128i_from_m128(a);\n let c: [i32; 4] = b.into();\n assert_eq!(c, [1, 2, 3, 4]);\n ```\n * **Intrinsic:** [`_mm_cvtps_epi32`]\n * **Assembly:** `cvtps2dq xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Rounds the `f32` lanes to `i32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023904,"byte_end":7023946,"line_start":1151,"line_end":1151,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023947,"byte_end":7023954,"line_start":1152,"line_end":1152,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023955,"byte_end":7023978,"line_start":1153,"line_end":1153,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.5, 3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7023979,"byte_end":7024030,"line_start":1154,"line_end":1154,"column_start":1,"column_end":52}},{"value":"/ let b = convert_to_i32_m128i_from_m128(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024031,"byte_end":7024077,"line_start":1155,"line_end":1155,"column_start":1,"column_end":47}},{"value":"/ let c: [i32; 4] = b.into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024078,"byte_end":7024109,"line_start":1156,"line_end":1156,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(c, [1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024110,"byte_end":7024142,"line_start":1157,"line_end":1157,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024143,"byte_end":7024150,"line_start":1158,"line_end":1158,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtps_epi32`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024151,"byte_end":7024191,"line_start":1159,"line_end":1159,"column_start":1,"column_end":41}},{"value":"/ * **Assembly:** `cvtps2dq xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024192,"byte_end":7024231,"line_start":1160,"line_end":1160,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024232,"byte_end":7024243,"line_start":1161,"line_end":1161,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024244,"byte_end":7024261,"line_start":1162,"line_end":1162,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":680},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024859,"byte_end":7024892,"line_start":1180,"line_end":1180,"column_start":8,"column_end":41},"name":"convert_to_m128d_from_lower2_m128","qualname":"::x86_x64::sse2::convert_to_m128d_from_lower2_m128","value":"pub fn convert_to_m128d_from_lower2_m128(m128) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Rounds the two `f64` lanes to the low two `f32` lanes.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.0, 2.5, 3.6, 4.7]);\n let b = convert_to_m128d_from_lower2_m128(a);\n assert_eq!(b.to_bits(), [1_f64.to_bits(), 2.5_f64.to_bits()]);\n ```\n * **Intrinsic:** [`_mm_cvtps_pd`]\n * **Assembly:** `cvtps2pd xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Rounds the two `f64` lanes to the low two `f32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024420,"byte_end":7024478,"line_start":1168,"line_end":1168,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024479,"byte_end":7024486,"line_start":1169,"line_end":1169,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024487,"byte_end":7024510,"line_start":1170,"line_end":1170,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.0, 2.5, 3.6, 4.7]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024511,"byte_end":7024562,"line_start":1171,"line_end":1171,"column_start":1,"column_end":52}},{"value":"/ let b = convert_to_m128d_from_lower2_m128(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024563,"byte_end":7024612,"line_start":1172,"line_end":1172,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(b.to_bits(), [1_f64.to_bits(), 2.5_f64.to_bits()]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024613,"byte_end":7024679,"line_start":1173,"line_end":1173,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024680,"byte_end":7024687,"line_start":1174,"line_end":1174,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtps_pd`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024688,"byte_end":7024725,"line_start":1175,"line_end":1175,"column_start":1,"column_end":38}},{"value":"/ * **Assembly:** `cvtps2pd xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024726,"byte_end":7024765,"line_start":1176,"line_end":1176,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024766,"byte_end":7024777,"line_start":1177,"line_end":1177,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024778,"byte_end":7024795,"line_start":1178,"line_end":1178,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":681},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025238,"byte_end":7025258,"line_start":1194,"line_end":1194,"column_start":8,"column_end":28},"name":"get_f64_from_m128d_s","qualname":"::x86_x64::sse2::get_f64_from_m128d_s","value":"pub fn get_f64_from_m128d_s(m128d) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Gets the lower lane as an `f64` value.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.5]);\n let b = get_f64_from_m128d_s(a);\n assert_eq!(b, 1.0_f64);\n ```\n","sig":null,"attributes":[{"value":"/ Gets the lower lane as an `f64` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024954,"byte_end":7024996,"line_start":1184,"line_end":1184,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7024997,"byte_end":7025004,"line_start":1185,"line_end":1185,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025005,"byte_end":7025028,"line_start":1186,"line_end":1186,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025029,"byte_end":7025071,"line_start":1187,"line_end":1187,"column_start":1,"column_end":43}},{"value":"/ let b = get_f64_from_m128d_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025072,"byte_end":7025108,"line_start":1188,"line_end":1188,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, 1.0_f64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025109,"byte_end":7025136,"line_start":1189,"line_end":1189,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025137,"byte_end":7025144,"line_start":1190,"line_end":1190,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025145,"byte_end":7025156,"line_start":1191,"line_end":1191,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025157,"byte_end":7025174,"line_start":1192,"line_end":1192,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025599,"byte_end":7025619,"line_start":1208,"line_end":1208,"column_start":8,"column_end":28},"name":"get_i32_from_m128d_s","qualname":"::x86_x64::sse2::get_i32_from_m128d_s","value":"pub fn get_i32_from_m128d_s(m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Converts the lower lane to an `i32` value.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.5]);\n let b = get_i32_from_m128d_s(a);\n assert_eq!(b, 1_i32);\n ```\n","sig":null,"attributes":[{"value":"/ Converts the lower lane to an `i32` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025313,"byte_end":7025359,"line_start":1198,"line_end":1198,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025360,"byte_end":7025367,"line_start":1199,"line_end":1199,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025368,"byte_end":7025391,"line_start":1200,"line_end":1200,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025392,"byte_end":7025434,"line_start":1201,"line_end":1201,"column_start":1,"column_end":43}},{"value":"/ let b = get_i32_from_m128d_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025435,"byte_end":7025471,"line_start":1202,"line_end":1202,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, 1_i32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025472,"byte_end":7025497,"line_start":1203,"line_end":1203,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025498,"byte_end":7025505,"line_start":1204,"line_end":1204,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025506,"byte_end":7025517,"line_start":1205,"line_end":1205,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025518,"byte_end":7025535,"line_start":1206,"line_end":1206,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025992,"byte_end":7026012,"line_start":1223,"line_end":1223,"column_start":8,"column_end":28},"name":"get_i64_from_m128d_s","qualname":"::x86_x64::sse2::get_i64_from_m128d_s","value":"pub fn get_i64_from_m128d_s(m128d) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Converts the lower lane to an `i64` value.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.5]);\n let b = get_i64_from_m128d_s(a);\n assert_eq!(b, 1_i64);\n ```\n","sig":null,"attributes":[{"value":"/ Converts the lower lane to an `i64` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025675,"byte_end":7025721,"line_start":1212,"line_end":1212,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025722,"byte_end":7025729,"line_start":1213,"line_end":1213,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025730,"byte_end":7025753,"line_start":1214,"line_end":1214,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025754,"byte_end":7025796,"line_start":1215,"line_end":1215,"column_start":1,"column_end":43}},{"value":"/ let b = get_i64_from_m128d_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025797,"byte_end":7025833,"line_start":1216,"line_end":1216,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, 1_i64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025834,"byte_end":7025859,"line_start":1217,"line_end":1217,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025860,"byte_end":7025867,"line_start":1218,"line_end":1218,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025868,"byte_end":7025879,"line_start":1219,"line_end":1219,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025880,"byte_end":7025897,"line_start":1220,"line_end":1220,"column_start":1,"column_end":18}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7025898,"byte_end":7025928,"line_start":1221,"line_end":1221,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":684},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026583,"byte_end":7026613,"line_start":1241,"line_end":1241,"column_start":8,"column_end":38},"name":"convert_m128d_s_replace_m128_s","qualname":"::x86_x64::sse2::convert_m128d_s_replace_m128_s","value":"pub fn convert_m128d_s_replace_m128_s(m128, m128d) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Converts the low `f64` to `f32` and replaces the low lane of the input.\n ```\n # use safe_arch::*;\n let a = m128::from_array([3.0, 4.0, 5.0, 6.0]);\n let b = m128d::from_array([1.0, 2.5]);\n let c = convert_m128d_s_replace_m128_s(a, b);\n assert_eq!(c.to_array(), [1.0, 4.0, 5.0, 6.0]);\n ```\n * **Intrinsic:** [`_mm_cvtsd_ss`]\n * **Assembly:** `cvtsd2ss xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Converts the low `f64` to `f32` and replaces the low lane of the input.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026068,"byte_end":7026143,"line_start":1227,"line_end":1227,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026144,"byte_end":7026151,"line_start":1228,"line_end":1228,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026152,"byte_end":7026175,"line_start":1229,"line_end":1229,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([3.0, 4.0, 5.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026176,"byte_end":7026227,"line_start":1230,"line_end":1230,"column_start":1,"column_end":52}},{"value":"/ let b = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026228,"byte_end":7026270,"line_start":1231,"line_end":1231,"column_start":1,"column_end":43}},{"value":"/ let c = convert_m128d_s_replace_m128_s(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026271,"byte_end":7026320,"line_start":1232,"line_end":1232,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c.to_array(), [1.0, 4.0, 5.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026321,"byte_end":7026372,"line_start":1233,"line_end":1233,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026373,"byte_end":7026380,"line_start":1234,"line_end":1234,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtsd_ss`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026381,"byte_end":7026418,"line_start":1235,"line_end":1235,"column_start":1,"column_end":38}},{"value":"/ * **Assembly:** `cvtsd2ss xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026419,"byte_end":7026458,"line_start":1236,"line_end":1236,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026459,"byte_end":7026470,"line_start":1237,"line_end":1237,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026471,"byte_end":7026488,"line_start":1238,"line_end":1238,"column_start":1,"column_end":18}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026489,"byte_end":7026519,"line_start":1239,"line_end":1239,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026970,"byte_end":7026990,"line_start":1255,"line_end":1255,"column_start":8,"column_end":28},"name":"get_i32_from_m128i_s","qualname":"::x86_x64::sse2::get_i32_from_m128i_s","value":"pub fn get_i32_from_m128i_s(m128i) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Converts the lower lane to an `i32` value.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 3, 5, 7]);\n let b = get_i32_from_m128i_s(a);\n assert_eq!(b, 1_i32);\n ```\n","sig":null,"attributes":[{"value":"/ Converts the lower lane to an `i32` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026688,"byte_end":7026734,"line_start":1245,"line_end":1245,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026735,"byte_end":7026742,"line_start":1246,"line_end":1246,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026743,"byte_end":7026766,"line_start":1247,"line_end":1247,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 3, 5, 7]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026767,"byte_end":7026805,"line_start":1248,"line_end":1248,"column_start":1,"column_end":39}},{"value":"/ let b = get_i32_from_m128i_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026806,"byte_end":7026842,"line_start":1249,"line_end":1249,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, 1_i32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026843,"byte_end":7026868,"line_start":1250,"line_end":1250,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026869,"byte_end":7026876,"line_start":1251,"line_end":1251,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026877,"byte_end":7026888,"line_start":1252,"line_end":1252,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7026889,"byte_end":7026906,"line_start":1253,"line_end":1253,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":686},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027360,"byte_end":7027380,"line_start":1270,"line_end":1270,"column_start":8,"column_end":28},"name":"get_i64_from_m128i_s","qualname":"::x86_x64::sse2::get_i64_from_m128i_s","value":"pub fn get_i64_from_m128i_s(m128i) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Converts the lower lane to an `i64` value.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i64, 3]);\n let b = get_i64_from_m128i_s(a);\n assert_eq!(b, 1_i64);\n ```\n","sig":null,"attributes":[{"value":"/ Converts the lower lane to an `i64` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027049,"byte_end":7027095,"line_start":1259,"line_end":1259,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027096,"byte_end":7027103,"line_start":1260,"line_end":1260,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027104,"byte_end":7027127,"line_start":1261,"line_end":1261,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i64, 3]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027128,"byte_end":7027164,"line_start":1262,"line_end":1262,"column_start":1,"column_end":37}},{"value":"/ let b = get_i64_from_m128i_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027165,"byte_end":7027201,"line_start":1263,"line_end":1263,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, 1_i64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027202,"byte_end":7027227,"line_start":1264,"line_end":1264,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027228,"byte_end":7027235,"line_start":1265,"line_end":1265,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027236,"byte_end":7027247,"line_start":1266,"line_end":1266,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027248,"byte_end":7027265,"line_start":1267,"line_end":1267,"column_start":1,"column_end":18}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027266,"byte_end":7027296,"line_start":1268,"line_end":1268,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":687},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027854,"byte_end":7027881,"line_start":1286,"line_end":1286,"column_start":8,"column_end":35},"name":"convert_i32_replace_m128d_s","qualname":"::x86_x64::sse2::convert_i32_replace_m128d_s","value":"pub fn convert_i32_replace_m128d_s(m128d, i32) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Convert `i32` to `f64` and replace the low lane of the input.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.0]);\n let b = convert_i32_replace_m128d_s(a, 5_i32);\n assert_eq!(b.to_array(), [5.0, 2.0]);\n ```\n * **Intrinsic:** [`_mm_cvtsi32_sd`]\n * **Assembly:** `cvtsi2sd xmm, r32`\n","sig":null,"attributes":[{"value":"/ Convert `i32` to `f64` and replace the low lane of the input.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027439,"byte_end":7027504,"line_start":1274,"line_end":1274,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027505,"byte_end":7027512,"line_start":1275,"line_end":1275,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027513,"byte_end":7027536,"line_start":1276,"line_end":1276,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027537,"byte_end":7027579,"line_start":1277,"line_end":1277,"column_start":1,"column_end":43}},{"value":"/ let b = convert_i32_replace_m128d_s(a, 5_i32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027580,"byte_end":7027630,"line_start":1278,"line_end":1278,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(b.to_array(), [5.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027631,"byte_end":7027672,"line_start":1279,"line_end":1279,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027673,"byte_end":7027680,"line_start":1280,"line_end":1280,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtsi32_sd`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027681,"byte_end":7027720,"line_start":1281,"line_end":1281,"column_start":1,"column_end":40}},{"value":"/ * **Assembly:** `cvtsi2sd xmm, r32`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027721,"byte_end":7027760,"line_start":1282,"line_end":1282,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027761,"byte_end":7027772,"line_start":1283,"line_end":1283,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027773,"byte_end":7027790,"line_start":1284,"line_end":1284,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":688},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028295,"byte_end":7028310,"line_start":1300,"line_end":1300,"column_start":8,"column_end":23},"name":"set_i32_m128i_s","qualname":"::x86_x64::sse2::set_i32_m128i_s","value":"pub fn set_i32_m128i_s(i32) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Set an `i32` as the low 32-bit lane of an `m128i`, other lanes blank.\n ```\n # use safe_arch::*;\n let a: [i32; 4] = set_i32_m128i_s(1_i32).into();\n let b: [i32; 4] = m128i::from([1, 0, 0, 0]).into();\n assert_eq!(a, b);\n ```\n","sig":null,"attributes":[{"value":"/ Set an `i32` as the low 32-bit lane of an `m128i`, other lanes blank.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7027957,"byte_end":7028030,"line_start":1290,"line_end":1290,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028031,"byte_end":7028038,"line_start":1291,"line_end":1291,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028039,"byte_end":7028062,"line_start":1292,"line_end":1292,"column_start":1,"column_end":24}},{"value":"/ let a: [i32; 4] = set_i32_m128i_s(1_i32).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028063,"byte_end":7028115,"line_start":1293,"line_end":1293,"column_start":1,"column_end":53}},{"value":"/ let b: [i32; 4] = m128i::from([1, 0, 0, 0]).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028116,"byte_end":7028171,"line_start":1294,"line_end":1294,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028172,"byte_end":7028193,"line_start":1295,"line_end":1295,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028194,"byte_end":7028201,"line_start":1296,"line_end":1296,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028202,"byte_end":7028213,"line_start":1297,"line_end":1297,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028214,"byte_end":7028231,"line_start":1298,"line_end":1298,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028820,"byte_end":7028847,"line_start":1317,"line_end":1317,"column_start":8,"column_end":35},"name":"convert_i64_replace_m128d_s","qualname":"::x86_x64::sse2::convert_i64_replace_m128d_s","value":"pub fn convert_i64_replace_m128d_s(m128d, i64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Convert `i64` to `f64` and replace the low lane of the input.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.0]);\n let b = convert_i64_replace_m128d_s(a, 5_i64);\n assert_eq!(b.to_array(), [5.0, 2.0]);\n ```\n * **Intrinsic:** [`_mm_cvtsi64_sd`]\n * **Assembly:** `cvtsi2sd xmm, r64`\n","sig":null,"attributes":[{"value":"/ Convert `i64` to `f64` and replace the low lane of the input.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028374,"byte_end":7028439,"line_start":1304,"line_end":1304,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028440,"byte_end":7028447,"line_start":1305,"line_end":1305,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028448,"byte_end":7028471,"line_start":1306,"line_end":1306,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028472,"byte_end":7028514,"line_start":1307,"line_end":1307,"column_start":1,"column_end":43}},{"value":"/ let b = convert_i64_replace_m128d_s(a, 5_i64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028515,"byte_end":7028565,"line_start":1308,"line_end":1308,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(b.to_array(), [5.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028566,"byte_end":7028607,"line_start":1309,"line_end":1309,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028608,"byte_end":7028615,"line_start":1310,"line_end":1310,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtsi64_sd`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028616,"byte_end":7028655,"line_start":1311,"line_end":1311,"column_start":1,"column_end":40}},{"value":"/ * **Assembly:** `cvtsi2sd xmm, r64`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028656,"byte_end":7028695,"line_start":1312,"line_end":1312,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028696,"byte_end":7028707,"line_start":1313,"line_end":1313,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028708,"byte_end":7028725,"line_start":1314,"line_end":1314,"column_start":1,"column_end":18}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028726,"byte_end":7028756,"line_start":1315,"line_end":1315,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":690},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029290,"byte_end":7029305,"line_start":1332,"line_end":1332,"column_start":8,"column_end":23},"name":"set_i64_m128i_s","qualname":"::x86_x64::sse2::set_i64_m128i_s","value":"pub fn set_i64_m128i_s(i64) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Set an `i64` as the low 64-bit lane of an `m128i`, other lanes blank.\n ```\n # use safe_arch::*;\n let a: [i64; 2] = set_i64_m128i_s(1_i64).into();\n let b: [i64; 2] = m128i::from([1_i64, 0]).into();\n assert_eq!(a, b);\n ```\n","sig":null,"attributes":[{"value":"/ Set an `i64` as the low 64-bit lane of an `m128i`, other lanes blank.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028923,"byte_end":7028996,"line_start":1321,"line_end":1321,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7028997,"byte_end":7029004,"line_start":1322,"line_end":1322,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029005,"byte_end":7029028,"line_start":1323,"line_end":1323,"column_start":1,"column_end":24}},{"value":"/ let a: [i64; 2] = set_i64_m128i_s(1_i64).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029029,"byte_end":7029081,"line_start":1324,"line_end":1324,"column_start":1,"column_end":53}},{"value":"/ let b: [i64; 2] = m128i::from([1_i64, 0]).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029082,"byte_end":7029135,"line_start":1325,"line_end":1325,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029136,"byte_end":7029157,"line_start":1326,"line_end":1326,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029158,"byte_end":7029165,"line_start":1327,"line_end":1327,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029166,"byte_end":7029177,"line_start":1328,"line_end":1328,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029178,"byte_end":7029195,"line_start":1329,"line_end":1329,"column_start":1,"column_end":18}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029196,"byte_end":7029226,"line_start":1330,"line_end":1330,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":691},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029843,"byte_end":7029873,"line_start":1349,"line_end":1349,"column_start":8,"column_end":38},"name":"convert_m128_s_replace_m128d_s","qualname":"::x86_x64::sse2::convert_m128_s_replace_m128d_s","value":"pub fn convert_m128_s_replace_m128d_s(m128d, m128) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Converts the lower `f32` to `f64` and replace the low lane of the input\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.5]);\n let b = m128::from_array([3.0, 4.0, 5.0, 6.0]);\n let c = convert_m128_s_replace_m128d_s(a, b);\n assert_eq!(c.to_array(), [3.0, 2.5]);\n ```\n * **Intrinsic:** [`_mm_cvtss_sd`]\n * **Assembly:** `cvtss2sd xmm, xmm`\n","sig":null,"attributes":[{"value":"/ Converts the lower `f32` to `f64` and replace the low lane of the input","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029369,"byte_end":7029444,"line_start":1336,"line_end":1336,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029445,"byte_end":7029452,"line_start":1337,"line_end":1337,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029453,"byte_end":7029476,"line_start":1338,"line_end":1338,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029477,"byte_end":7029519,"line_start":1339,"line_end":1339,"column_start":1,"column_end":43}},{"value":"/ let b = m128::from_array([3.0, 4.0, 5.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029520,"byte_end":7029571,"line_start":1340,"line_end":1340,"column_start":1,"column_end":52}},{"value":"/ let c = convert_m128_s_replace_m128d_s(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029572,"byte_end":7029621,"line_start":1341,"line_end":1341,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c.to_array(), [3.0, 2.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029622,"byte_end":7029663,"line_start":1342,"line_end":1342,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029664,"byte_end":7029671,"line_start":1343,"line_end":1343,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_cvtss_sd`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029672,"byte_end":7029709,"line_start":1344,"line_end":1344,"column_start":1,"column_end":38}},{"value":"/ * **Assembly:** `cvtss2sd xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029710,"byte_end":7029749,"line_start":1345,"line_end":1345,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029750,"byte_end":7029761,"line_start":1346,"line_end":1346,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029762,"byte_end":7029779,"line_start":1347,"line_end":1347,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":692},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030294,"byte_end":7030317,"line_start":1363,"line_end":1363,"column_start":8,"column_end":31},"name":"truncate_m128d_to_m128i","qualname":"::x86_x64::sse2::truncate_m128d_to_m128i","value":"pub fn truncate_m128d_to_m128i(m128d) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Truncate the `f64` lanes to the lower `i32` lanes (upper `i32` lanes 0).\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.1, 2.6]);\n let b = truncate_m128d_to_m128i(a);\n assert_eq!(<[i32; 4]>::from(b), [1, 2, 0, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Truncate the `f64` lanes to the lower `i32` lanes (upper `i32` lanes 0).","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7029950,"byte_end":7030026,"line_start":1353,"line_end":1353,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030027,"byte_end":7030034,"line_start":1354,"line_end":1354,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030035,"byte_end":7030058,"line_start":1355,"line_end":1355,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.1, 2.6]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030059,"byte_end":7030101,"line_start":1356,"line_end":1356,"column_start":1,"column_end":43}},{"value":"/ let b = truncate_m128d_to_m128i(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030102,"byte_end":7030141,"line_start":1357,"line_end":1357,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(<[i32; 4]>::from(b), [1, 2, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030142,"byte_end":7030192,"line_start":1358,"line_end":1358,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030193,"byte_end":7030200,"line_start":1359,"line_end":1359,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030201,"byte_end":7030212,"line_start":1360,"line_end":1360,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030213,"byte_end":7030230,"line_start":1361,"line_end":1361,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":693},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030704,"byte_end":7030726,"line_start":1377,"line_end":1377,"column_start":8,"column_end":30},"name":"truncate_m128_to_m128i","qualname":"::x86_x64::sse2::truncate_m128_to_m128i","value":"pub fn truncate_m128_to_m128i(m128) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Truncate the `f32` lanes to `i32` lanes.\n ```\n # use safe_arch::*;\n let a = m128::from_array([1.1, 2.6, 3.5, 4.0]);\n let b = truncate_m128_to_m128i(a);\n assert_eq!(<[i32; 4]>::from(b), [1, 2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ Truncate the `f32` lanes to `i32` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030384,"byte_end":7030428,"line_start":1367,"line_end":1367,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030429,"byte_end":7030436,"line_start":1368,"line_end":1368,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030437,"byte_end":7030460,"line_start":1369,"line_end":1369,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([1.1, 2.6, 3.5, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030461,"byte_end":7030512,"line_start":1370,"line_end":1370,"column_start":1,"column_end":52}},{"value":"/ let b = truncate_m128_to_m128i(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030513,"byte_end":7030551,"line_start":1371,"line_end":1371,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(<[i32; 4]>::from(b), [1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030552,"byte_end":7030602,"line_start":1372,"line_end":1372,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030603,"byte_end":7030610,"line_start":1373,"line_end":1373,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030611,"byte_end":7030622,"line_start":1374,"line_end":1374,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030623,"byte_end":7030640,"line_start":1375,"line_end":1375,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031062,"byte_end":7031085,"line_start":1390,"line_end":1390,"column_start":8,"column_end":31},"name":"truncate_to_i32_m128d_s","qualname":"::x86_x64::sse2::truncate_to_i32_m128d_s","value":"pub fn truncate_to_i32_m128d_s(m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Truncate the lower lane into an `i32`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.7, 2.6]);\n assert_eq!(truncate_to_i32_m128d_s(a), 1_i32);\n ```\n","sig":null,"attributes":[{"value":"/ Truncate the lower lane into an `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030792,"byte_end":7030834,"line_start":1381,"line_end":1381,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030835,"byte_end":7030842,"line_start":1382,"line_end":1382,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030843,"byte_end":7030866,"line_start":1383,"line_end":1383,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.7, 2.6]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030867,"byte_end":7030909,"line_start":1384,"line_end":1384,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(truncate_to_i32_m128d_s(a), 1_i32);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030910,"byte_end":7030960,"line_start":1385,"line_end":1385,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030961,"byte_end":7030968,"line_start":1386,"line_end":1386,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030969,"byte_end":7030980,"line_start":1387,"line_end":1387,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7030981,"byte_end":7030998,"line_start":1388,"line_end":1388,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":695},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031443,"byte_end":7031466,"line_start":1404,"line_end":1404,"column_start":8,"column_end":31},"name":"truncate_to_i64_m128d_s","qualname":"::x86_x64::sse2::truncate_to_i64_m128d_s","value":"pub fn truncate_to_i64_m128d_s(m128d) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Truncate the lower lane into an `i64`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.7, 2.6]);\n assert_eq!(truncate_to_i64_m128d_s(a), 1_i64);\n ```\n","sig":null,"attributes":[{"value":"/ Truncate the lower lane into an `i64`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031142,"byte_end":7031184,"line_start":1394,"line_end":1394,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031185,"byte_end":7031192,"line_start":1395,"line_end":1395,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031193,"byte_end":7031216,"line_start":1396,"line_end":1396,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.7, 2.6]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031217,"byte_end":7031259,"line_start":1397,"line_end":1397,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(truncate_to_i64_m128d_s(a), 1_i64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031260,"byte_end":7031310,"line_start":1398,"line_end":1398,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031311,"byte_end":7031318,"line_start":1399,"line_end":1399,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031319,"byte_end":7031330,"line_start":1400,"line_end":1400,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031331,"byte_end":7031348,"line_start":1401,"line_end":1401,"column_start":1,"column_end":18}},{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031349,"byte_end":7031379,"line_start":1402,"line_end":1402,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":696},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031842,"byte_end":7031851,"line_start":1419,"line_end":1419,"column_start":8,"column_end":17},"name":"div_m128d","qualname":"::x86_x64::sse2::div_m128d","value":"pub fn div_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a / b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 42.0]);\n let b = m128d::from_array([100.0, -6.0]);\n let c = div_m128d(a, b).to_array();\n assert_eq!(c, [0.92, -7.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a / b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031523,"byte_end":7031544,"line_start":1408,"line_end":1408,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031545,"byte_end":7031552,"line_start":1409,"line_end":1409,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031553,"byte_end":7031576,"line_start":1410,"line_end":1410,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 42.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031577,"byte_end":7031621,"line_start":1411,"line_end":1411,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031622,"byte_end":7031667,"line_start":1412,"line_end":1412,"column_start":1,"column_end":46}},{"value":"/ let c = div_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031668,"byte_end":7031707,"line_start":1413,"line_end":1413,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(c, [0.92, -7.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031708,"byte_end":7031740,"line_start":1414,"line_end":1414,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031741,"byte_end":7031748,"line_start":1415,"line_end":1415,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031749,"byte_end":7031760,"line_start":1416,"line_end":1416,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031761,"byte_end":7031778,"line_start":1417,"line_end":1417,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032274,"byte_end":7032285,"line_start":1434,"line_end":1434,"column_start":8,"column_end":19},"name":"div_m128d_s","qualname":"::x86_x64::sse2::div_m128d_s","value":"pub fn div_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lowest lane `a / b`, high lane unchanged.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -600.0]);\n let c = div_m128d_s(a, b).to_array();\n assert_eq!(c, [0.92, 87.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lowest lane `a / b`, high lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031927,"byte_end":7031972,"line_start":1423,"line_end":1423,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031973,"byte_end":7031980,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7031981,"byte_end":7032004,"line_start":1425,"line_end":1425,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032005,"byte_end":7032049,"line_start":1426,"line_end":1426,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -600.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032050,"byte_end":7032097,"line_start":1427,"line_end":1427,"column_start":1,"column_end":48}},{"value":"/ let c = div_m128d_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032098,"byte_end":7032139,"line_start":1428,"line_end":1428,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [0.92, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032140,"byte_end":7032172,"line_start":1429,"line_end":1429,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032173,"byte_end":7032180,"line_start":1430,"line_end":1430,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032181,"byte_end":7032192,"line_start":1431,"line_end":1431,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7032193,"byte_end":7032210,"line_start":1432,"line_end":1432,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":700},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034861,"byte_end":7034871,"line_start":1510,"line_end":1510,"column_start":8,"column_end":18},"name":"load_m128d","qualname":"::x86_x64::sse2::load_m128d","value":"pub fn load_m128d(&m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let b = load_m128d(&a);\n assert_eq!(a.to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034572,"byte_end":7034612,"line_start":1500,"line_end":1500,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034613,"byte_end":7034620,"line_start":1501,"line_end":1501,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034621,"byte_end":7034644,"line_start":1502,"line_end":1502,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034645,"byte_end":7034689,"line_start":1503,"line_end":1503,"column_start":1,"column_end":45}},{"value":"/ let b = load_m128d(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034690,"byte_end":7034717,"line_start":1504,"line_end":1504,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(a.to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034718,"byte_end":7034759,"line_start":1505,"line_end":1505,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034760,"byte_end":7034767,"line_start":1506,"line_end":1506,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034768,"byte_end":7034779,"line_start":1507,"line_end":1507,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034780,"byte_end":7034797,"line_start":1508,"line_end":1508,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035325,"byte_end":7035345,"line_start":1525,"line_end":1525,"column_start":8,"column_end":28},"name":"load_f64_splat_m128d","qualname":"::x86_x64::sse2::load_f64_splat_m128d","value":"pub fn load_f64_splat_m128d(&f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the `f64` reference into all lanes of a register.\n ```\n # use safe_arch::*;\n let a = 1.0;\n let b = load_f64_splat_m128d(&a);\n assert_eq!(m128d::from_array([1.0, 1.0]).to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the `f64` reference into all lanes of a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7034962,"byte_end":7035021,"line_start":1514,"line_end":1514,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035022,"byte_end":7035029,"line_start":1515,"line_end":1515,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035030,"byte_end":7035053,"line_start":1516,"line_end":1516,"column_start":1,"column_end":24}},{"value":"/ let a = 1.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035054,"byte_end":7035070,"line_start":1517,"line_end":1517,"column_start":1,"column_end":17}},{"value":"/ let b = load_f64_splat_m128d(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035071,"byte_end":7035108,"line_start":1518,"line_end":1518,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(m128d::from_array([1.0, 1.0]).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035109,"byte_end":7035178,"line_start":1519,"line_end":1519,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035179,"byte_end":7035186,"line_start":1520,"line_end":1520,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035187,"byte_end":7035198,"line_start":1521,"line_end":1521,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035199,"byte_end":7035216,"line_start":1522,"line_end":1522,"column_start":1,"column_end":18}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035217,"byte_end":7035261,"line_start":1523,"line_end":1523,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035763,"byte_end":7035779,"line_start":1540,"line_end":1540,"column_start":8,"column_end":24},"name":"load_f64_m128d_s","qualname":"::x86_x64::sse2::load_f64_m128d_s","value":"pub fn load_f64_m128d_s(&f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into the low lane of the register.\n ```\n # use safe_arch::*;\n let a = 1.0;\n let b = load_f64_m128d_s(&a);\n assert_eq!(m128d::from_array([1.0, 0.0]).to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into the low lane of the register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035405,"byte_end":7035463,"line_start":1529,"line_end":1529,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035464,"byte_end":7035471,"line_start":1530,"line_end":1530,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035472,"byte_end":7035495,"line_start":1531,"line_end":1531,"column_start":1,"column_end":24}},{"value":"/ let a = 1.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035496,"byte_end":7035512,"line_start":1532,"line_end":1532,"column_start":1,"column_end":17}},{"value":"/ let b = load_f64_m128d_s(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035513,"byte_end":7035546,"line_start":1533,"line_end":1533,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(m128d::from_array([1.0, 0.0]).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035547,"byte_end":7035616,"line_start":1534,"line_end":1534,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035617,"byte_end":7035624,"line_start":1535,"line_end":1535,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035625,"byte_end":7035636,"line_start":1536,"line_end":1536,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035637,"byte_end":7035654,"line_start":1537,"line_end":1537,"column_start":1,"column_end":18}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035655,"byte_end":7035699,"line_start":1538,"line_end":1538,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":703},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036137,"byte_end":7036147,"line_start":1554,"line_end":1554,"column_start":8,"column_end":18},"name":"load_m128i","qualname":"::x86_x64::sse2::load_m128i","value":"pub fn load_m128i(&m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = load_m128i(&a);\n assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035838,"byte_end":7035878,"line_start":1544,"line_end":1544,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035879,"byte_end":7035886,"line_start":1545,"line_end":1545,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035887,"byte_end":7035910,"line_start":1546,"line_end":1546,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035911,"byte_end":7035949,"line_start":1547,"line_end":1547,"column_start":1,"column_end":39}},{"value":"/ let b = load_m128i(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035950,"byte_end":7035977,"line_start":1548,"line_end":1548,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7035978,"byte_end":7036035,"line_start":1549,"line_end":1549,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036036,"byte_end":7036043,"line_start":1550,"line_end":1550,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036044,"byte_end":7036055,"line_start":1551,"line_end":1551,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036056,"byte_end":7036073,"line_start":1552,"line_end":1552,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":704},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036594,"byte_end":7036617,"line_start":1569,"line_end":1569,"column_start":8,"column_end":31},"name":"load_replace_high_m128d","qualname":"::x86_x64::sse2::load_replace_high_m128d","value":"pub fn load_replace_high_m128d(m128d, &f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register, replacing the high lane.\n ```\n # use safe_arch::*;\n let a = m128d::from([1.0, 2.0]);\n let double = 7.0;\n let b = load_replace_high_m128d(a, &double);\n assert_eq!(b.to_array(), [1.0, 7.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register, replacing the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036245,"byte_end":7036310,"line_start":1558,"line_end":1558,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036311,"byte_end":7036318,"line_start":1559,"line_end":1559,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036319,"byte_end":7036342,"line_start":1560,"line_end":1560,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036343,"byte_end":7036379,"line_start":1561,"line_end":1561,"column_start":1,"column_end":37}},{"value":"/ let double = 7.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036380,"byte_end":7036401,"line_start":1562,"line_end":1562,"column_start":1,"column_end":22}},{"value":"/ let b = load_replace_high_m128d(a, &double);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036402,"byte_end":7036450,"line_start":1563,"line_end":1563,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(b.to_array(), [1.0, 7.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036451,"byte_end":7036492,"line_start":1564,"line_end":1564,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036493,"byte_end":7036500,"line_start":1565,"line_end":1565,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036501,"byte_end":7036512,"line_start":1566,"line_end":1566,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036513,"byte_end":7036530,"line_start":1567,"line_end":1567,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":705},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036986,"byte_end":7037002,"line_start":1583,"line_end":1583,"column_start":8,"column_end":24},"name":"load_i64_m128i_s","qualname":"::x86_x64::sse2::load_i64_m128i_s","value":"pub fn load_i64_m128i_s(&m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Loads the low `i64` into a register.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i64, 2]);\n let b = load_i64_m128i_s(&a);\n assert_eq!([1_i64, 0], <[i64; 2]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Loads the low `i64` into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036692,"byte_end":7036732,"line_start":1573,"line_end":1573,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036733,"byte_end":7036740,"line_start":1574,"line_end":1574,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036741,"byte_end":7036764,"line_start":1575,"line_end":1575,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i64, 2]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036765,"byte_end":7036801,"line_start":1576,"line_end":1576,"column_start":1,"column_end":37}},{"value":"/ let b = load_i64_m128i_s(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036802,"byte_end":7036835,"line_start":1577,"line_end":1577,"column_start":1,"column_end":34}},{"value":"/ assert_eq!([1_i64, 0], <[i64; 2]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036836,"byte_end":7036884,"line_start":1578,"line_end":1578,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036885,"byte_end":7036892,"line_start":1579,"line_end":1579,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036893,"byte_end":7036904,"line_start":1580,"line_end":1580,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7036905,"byte_end":7036922,"line_start":1581,"line_end":1581,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":706},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037448,"byte_end":7037470,"line_start":1598,"line_end":1598,"column_start":8,"column_end":30},"name":"load_replace_low_m128d","qualname":"::x86_x64::sse2::load_replace_low_m128d","value":"pub fn load_replace_low_m128d(m128d, &f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register, replacing the low lane.\n ```\n # use safe_arch::*;\n let a = m128d::from([1.0, 2.0]);\n let double = 7.0;\n let b = load_replace_low_m128d(a, &double);\n assert_eq!(b.to_array(), [7.0, 2.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register, replacing the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037101,"byte_end":7037165,"line_start":1587,"line_end":1587,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037166,"byte_end":7037173,"line_start":1588,"line_end":1588,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037174,"byte_end":7037197,"line_start":1589,"line_end":1589,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037198,"byte_end":7037234,"line_start":1590,"line_end":1590,"column_start":1,"column_end":37}},{"value":"/ let double = 7.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037235,"byte_end":7037256,"line_start":1591,"line_end":1591,"column_start":1,"column_end":22}},{"value":"/ let b = load_replace_low_m128d(a, &double);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037257,"byte_end":7037304,"line_start":1592,"line_end":1592,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(b.to_array(), [7.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037305,"byte_end":7037346,"line_start":1593,"line_end":1593,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037347,"byte_end":7037354,"line_start":1594,"line_end":1594,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037355,"byte_end":7037366,"line_start":1595,"line_end":1595,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037367,"byte_end":7037384,"line_start":1596,"line_end":1596,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037892,"byte_end":7037910,"line_start":1612,"line_end":1612,"column_start":8,"column_end":26},"name":"load_reverse_m128d","qualname":"::x86_x64::sse2::load_reverse_m128d","value":"pub fn load_reverse_m128d(&m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register with reversed order.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let b = load_reverse_m128d(&a);\n assert_eq!(m128d::from_array([12.0, 10.0]).to_bits(), b.to_bits());\n ```\n","sig":null,"attributes":[{"value":"/ Loads the reference into a register with reversed order.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037545,"byte_end":7037605,"line_start":1602,"line_end":1602,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037606,"byte_end":7037613,"line_start":1603,"line_end":1603,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037614,"byte_end":7037637,"line_start":1604,"line_end":1604,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037638,"byte_end":7037682,"line_start":1605,"line_end":1605,"column_start":1,"column_end":45}},{"value":"/ let b = load_reverse_m128d(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037683,"byte_end":7037718,"line_start":1606,"line_end":1606,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(m128d::from_array([12.0, 10.0]).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037719,"byte_end":7037790,"line_start":1607,"line_end":1607,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037791,"byte_end":7037798,"line_start":1608,"line_end":1608,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037799,"byte_end":7037810,"line_start":1609,"line_end":1609,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7037811,"byte_end":7037828,"line_start":1610,"line_end":1610,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":708},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038478,"byte_end":7038498,"line_start":1630,"line_end":1630,"column_start":8,"column_end":28},"name":"load_unaligned_m128d","qualname":"::x86_x64::sse2::load_unaligned_m128d","value":"pub fn load_unaligned_m128d(&[f64; ]) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register.","sig":null,"attributes":[{"value":"/ Loads the reference into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038002,"byte_end":7038042,"line_start":1616,"line_end":1616,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038043,"byte_end":7038046,"line_start":1617,"line_end":1617,"column_start":1,"column_end":4}},{"value":"/ This generally has no speed penalty if the reference happens to be 16-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038047,"byte_end":7038125,"line_start":1618,"line_end":1618,"column_start":1,"column_end":79}},{"value":"/ aligned, but there is a slight speed penalty if the reference is only 8-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038126,"byte_end":7038206,"line_start":1619,"line_end":1619,"column_start":1,"column_end":81}},{"value":"/ aligned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038207,"byte_end":7038219,"line_start":1620,"line_end":1620,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038220,"byte_end":7038227,"line_start":1621,"line_end":1621,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038228,"byte_end":7038251,"line_start":1622,"line_end":1622,"column_start":1,"column_end":24}},{"value":"/ let a = [10.0, 12.0];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038252,"byte_end":7038277,"line_start":1623,"line_end":1623,"column_start":1,"column_end":26}},{"value":"/ let b = load_unaligned_m128d(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038278,"byte_end":7038315,"line_start":1624,"line_end":1624,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(m128d::from_array(a).to_bits(), b.to_bits());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038316,"byte_end":7038376,"line_start":1625,"line_end":1625,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038377,"byte_end":7038384,"line_start":1626,"line_end":1626,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038385,"byte_end":7038396,"line_start":1627,"line_end":1627,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038397,"byte_end":7038414,"line_start":1628,"line_end":1628,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":711},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039124,"byte_end":7039144,"line_start":1649,"line_end":1649,"column_start":8,"column_end":28},"name":"load_unaligned_m128i","qualname":"::x86_x64::sse2::load_unaligned_m128i","value":"pub fn load_unaligned_m128i(&[u8; ]) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Loads the reference into a register.","sig":null,"attributes":[{"value":"/ Loads the reference into a register.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038596,"byte_end":7038636,"line_start":1634,"line_end":1634,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038637,"byte_end":7038640,"line_start":1635,"line_end":1635,"column_start":1,"column_end":4}},{"value":"/ This generally has no speed penalty if the reference happens to be 16-byte","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038641,"byte_end":7038719,"line_start":1636,"line_end":1636,"column_start":1,"column_end":79}},{"value":"/ aligned, but there is a slight speed penalty if the reference is less","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038720,"byte_end":7038793,"line_start":1637,"line_end":1637,"column_start":1,"column_end":74}},{"value":"/ aligned.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038794,"byte_end":7038806,"line_start":1638,"line_end":1638,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038807,"byte_end":7038814,"line_start":1639,"line_end":1639,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038815,"byte_end":7038838,"line_start":1640,"line_end":1640,"column_start":1,"column_end":24}},{"value":"/ let a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038839,"byte_end":7038907,"line_start":1641,"line_end":1641,"column_start":1,"column_end":69}},{"value":"/ let b = load_unaligned_m128i(&a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038908,"byte_end":7038945,"line_start":1642,"line_end":1642,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(a, <[u8; 16]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038946,"byte_end":7038985,"line_start":1643,"line_end":1643,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038986,"byte_end":7038993,"line_start":1644,"line_end":1644,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7038994,"byte_end":7039005,"line_start":1645,"line_end":1645,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039006,"byte_end":7039023,"line_start":1646,"line_end":1646,"column_start":1,"column_end":18}},{"value":"allow(clippy :: cast_ptr_alignment)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039024,"byte_end":7039060,"line_start":1647,"line_end":1647,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":714},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039725,"byte_end":7039753,"line_start":1665,"line_end":1665,"column_start":8,"column_end":36},"name":"mul_i16_horizontal_add_m128i","qualname":"::x86_x64::sse2::mul_i16_horizontal_add_m128i","value":"pub fn mul_i16_horizontal_add_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Multiply `i16` lanes producing `i32` values, horizontal add pairs of `i32`\n values to produce the final output.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i32; 4] = mul_i16_horizontal_add_m128i(a, b).into();\n assert_eq!(c, [17, 53, 67, -81]);\n ```\n","sig":null,"attributes":[{"value":"/ Multiply `i16` lanes producing `i32` values, horizontal add pairs of `i32`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039249,"byte_end":7039327,"line_start":1653,"line_end":1653,"column_start":1,"column_end":79}},{"value":"/ values to produce the final output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039328,"byte_end":7039367,"line_start":1654,"line_end":1654,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039368,"byte_end":7039375,"line_start":1655,"line_end":1655,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039376,"byte_end":7039399,"line_start":1656,"line_end":1656,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039400,"byte_end":7039458,"line_start":1657,"line_end":1657,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039459,"byte_end":7039520,"line_start":1658,"line_end":1658,"column_start":1,"column_end":62}},{"value":"/ let c: [i32; 4] = mul_i16_horizontal_add_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039521,"byte_end":7039585,"line_start":1659,"line_end":1659,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(c, [17, 53, 67, -81]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039586,"byte_end":7039623,"line_start":1660,"line_end":1660,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039624,"byte_end":7039631,"line_start":1661,"line_end":1661,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039632,"byte_end":7039643,"line_start":1662,"line_end":1662,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039644,"byte_end":7039661,"line_start":1663,"line_end":1663,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":715},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040334,"byte_end":7040346,"line_start":1683,"line_end":1683,"column_start":8,"column_end":20},"name":"max_u8_m128i","qualname":"::x86_x64::sse2::max_u8_m128i","value":"pub fn max_u8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `max(a, b)` with lanes as `u8`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b = m128i::from([\n   0_u8, 11, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127,\n ]);\n let c: [u8; 16] = max_u8_m128i(a, b).into();\n assert_eq!(c, [0, 11, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `max(a, b)` with lanes as `u8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039833,"byte_end":7039877,"line_start":1669,"line_end":1669,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039878,"byte_end":7039885,"line_start":1670,"line_end":1670,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039886,"byte_end":7039909,"line_start":1671,"line_end":1671,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039910,"byte_end":7039921,"line_start":1672,"line_end":1672,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7039922,"byte_end":7039999,"line_start":1673,"line_end":1673,"column_start":1,"column_end":78}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040000,"byte_end":7040025,"line_start":1674,"line_end":1674,"column_start":1,"column_end":26}},{"value":"/   0_u8, 11, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040026,"byte_end":7040094,"line_start":1675,"line_end":1675,"column_start":1,"column_end":69}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040095,"byte_end":7040102,"line_start":1676,"line_end":1676,"column_start":1,"column_end":8}},{"value":"/ let c: [u8; 16] = max_u8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040103,"byte_end":7040151,"line_start":1677,"line_end":1677,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 11, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040152,"byte_end":7040232,"line_start":1678,"line_end":1678,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040233,"byte_end":7040240,"line_start":1679,"line_end":1679,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040241,"byte_end":7040252,"line_start":1680,"line_end":1680,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040253,"byte_end":7040270,"line_start":1681,"line_end":1681,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":716},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040827,"byte_end":7040840,"line_start":1698,"line_end":1698,"column_start":8,"column_end":21},"name":"max_i16_m128i","qualname":"::x86_x64::sse2::max_i16_m128i","value":"pub fn max_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `max(a, b)` with lanes as `i16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = max_i16_m128i(a, b).into();\n assert_eq!(c, [5_i16, 6, 7, 8, -1, -2, -3, 48]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `max(a, b)` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040424,"byte_end":7040469,"line_start":1687,"line_end":1687,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040470,"byte_end":7040477,"line_start":1688,"line_end":1688,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040478,"byte_end":7040501,"line_start":1689,"line_end":1689,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040502,"byte_end":7040560,"line_start":1690,"line_end":1690,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040561,"byte_end":7040622,"line_start":1691,"line_end":1691,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = max_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040623,"byte_end":7040672,"line_start":1692,"line_end":1692,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [5_i16, 6, 7, 8, -1, -2, -3, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040673,"byte_end":7040725,"line_start":1693,"line_end":1693,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040726,"byte_end":7040733,"line_start":1694,"line_end":1694,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040734,"byte_end":7040745,"line_start":1695,"line_end":1695,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040746,"byte_end":7040763,"line_start":1696,"line_end":1696,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":717},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041235,"byte_end":7041244,"line_start":1713,"line_end":1713,"column_start":8,"column_end":17},"name":"max_m128d","qualname":"::x86_x64::sse2::max_m128d","value":"pub fn max_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `max(a, b)`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([5.0, 2.0]);\n let b = m128d::from_array([1.0, 6.0]);\n let c = max_m128d(a, b).to_array();\n assert_eq!(c, [5.0, 6.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `max(a, b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040919,"byte_end":7040944,"line_start":1702,"line_end":1702,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040945,"byte_end":7040952,"line_start":1703,"line_end":1703,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040953,"byte_end":7040976,"line_start":1704,"line_end":1704,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([5.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7040977,"byte_end":7041019,"line_start":1705,"line_end":1705,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041020,"byte_end":7041062,"line_start":1706,"line_end":1706,"column_start":1,"column_end":43}},{"value":"/ let c = max_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041063,"byte_end":7041102,"line_start":1707,"line_end":1707,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(c, [5.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041103,"byte_end":7041133,"line_start":1708,"line_end":1708,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041134,"byte_end":7041141,"line_start":1709,"line_end":1709,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041142,"byte_end":7041153,"line_start":1710,"line_end":1710,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041154,"byte_end":7041171,"line_start":1711,"line_end":1711,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041663,"byte_end":7041674,"line_start":1728,"line_end":1728,"column_start":8,"column_end":19},"name":"max_m128d_s","qualname":"::x86_x64::sse2::max_m128d_s","value":"pub fn max_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `max(a, b)`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 12.0]);\n let b = m128d::from_array([5.0, 6.0]);\n let c = max_m128d_s(a, b).to_array();\n assert_eq!(c, [5.0, 12.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `max(a, b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041320,"byte_end":7041368,"line_start":1717,"line_end":1717,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041369,"byte_end":7041376,"line_start":1718,"line_end":1718,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041377,"byte_end":7041400,"line_start":1719,"line_end":1719,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041401,"byte_end":7041444,"line_start":1720,"line_end":1720,"column_start":1,"column_end":44}},{"value":"/ let b = m128d::from_array([5.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041445,"byte_end":7041487,"line_start":1721,"line_end":1721,"column_start":1,"column_end":43}},{"value":"/ let c = max_m128d_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041488,"byte_end":7041529,"line_start":1722,"line_end":1722,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [5.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041530,"byte_end":7041561,"line_start":1723,"line_end":1723,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041562,"byte_end":7041569,"line_start":1724,"line_end":1724,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041570,"byte_end":7041581,"line_start":1725,"line_end":1725,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041582,"byte_end":7041599,"line_start":1726,"line_end":1726,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":719},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042233,"byte_end":7042245,"line_start":1745,"line_end":1745,"column_start":8,"column_end":20},"name":"min_u8_m128i","qualname":"::x86_x64::sse2::min_u8_m128i","value":"pub fn min_u8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `min(a, b)` with lanes as `u8`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b =\n   m128i::from([0_u8, 11, 2, 13, 4, 15, 6, 17, 8, 0, 20, 0, 22, 0, 24, 0]);\n let c: [u8; 16] = min_u8_m128i(a, b).into();\n assert_eq!(c, [0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 0, 12, 0, 14, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `min(a, b)` with lanes as `u8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041750,"byte_end":7041794,"line_start":1732,"line_end":1732,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041795,"byte_end":7041802,"line_start":1733,"line_end":1733,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041803,"byte_end":7041826,"line_start":1734,"line_end":1734,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041827,"byte_end":7041838,"line_start":1735,"line_end":1735,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041839,"byte_end":7041916,"line_start":1736,"line_end":1736,"column_start":1,"column_end":78}},{"value":"/ let b =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041917,"byte_end":7041928,"line_start":1737,"line_end":1737,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_u8, 11, 2, 13, 4, 15, 6, 17, 8, 0, 20, 0, 22, 0, 24, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7041929,"byte_end":7042007,"line_start":1738,"line_end":1738,"column_start":1,"column_end":79}},{"value":"/ let c: [u8; 16] = min_u8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042008,"byte_end":7042056,"line_start":1739,"line_end":1739,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 0, 12, 0, 14, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042057,"byte_end":7042131,"line_start":1740,"line_end":1740,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042132,"byte_end":7042139,"line_start":1741,"line_end":1741,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042140,"byte_end":7042151,"line_start":1742,"line_end":1742,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042152,"byte_end":7042169,"line_start":1743,"line_end":1743,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":720},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042729,"byte_end":7042742,"line_start":1760,"line_end":1760,"column_start":8,"column_end":21},"name":"min_i16_m128i","qualname":"::x86_x64::sse2::min_i16_m128i","value":"pub fn min_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `min(a, b)` with lanes as `i16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = min_i16_m128i(a, b).into();\n assert_eq!(c, [1_i16, 2, 3, 4, -15, -26, -37, -4]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `min(a, b)` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042323,"byte_end":7042368,"line_start":1749,"line_end":1749,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042369,"byte_end":7042376,"line_start":1750,"line_end":1750,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042377,"byte_end":7042400,"line_start":1751,"line_end":1751,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042401,"byte_end":7042459,"line_start":1752,"line_end":1752,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042460,"byte_end":7042521,"line_start":1753,"line_end":1753,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = min_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042522,"byte_end":7042571,"line_start":1754,"line_end":1754,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [1_i16, 2, 3, 4, -15, -26, -37, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042572,"byte_end":7042627,"line_start":1755,"line_end":1755,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042628,"byte_end":7042635,"line_start":1756,"line_end":1756,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042636,"byte_end":7042647,"line_start":1757,"line_end":1757,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042648,"byte_end":7042665,"line_start":1758,"line_end":1758,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":721},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043138,"byte_end":7043147,"line_start":1775,"line_end":1775,"column_start":8,"column_end":17},"name":"min_m128d","qualname":"::x86_x64::sse2::min_m128d","value":"pub fn min_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `min(a, b)`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 12.0]);\n let b = m128d::from_array([5.0, 6.0]);\n let c = min_m128d(a, b).to_array();\n assert_eq!(c, [1.0, 6.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `min(a, b)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042821,"byte_end":7042846,"line_start":1764,"line_end":1764,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042847,"byte_end":7042854,"line_start":1765,"line_end":1765,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042855,"byte_end":7042878,"line_start":1766,"line_end":1766,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042879,"byte_end":7042922,"line_start":1767,"line_end":1767,"column_start":1,"column_end":44}},{"value":"/ let b = m128d::from_array([5.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042923,"byte_end":7042965,"line_start":1768,"line_end":1768,"column_start":1,"column_end":43}},{"value":"/ let c = min_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7042966,"byte_end":7043005,"line_start":1769,"line_end":1769,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(c, [1.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043006,"byte_end":7043036,"line_start":1770,"line_end":1770,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043037,"byte_end":7043044,"line_start":1771,"line_end":1771,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043045,"byte_end":7043056,"line_start":1772,"line_end":1772,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043057,"byte_end":7043074,"line_start":1773,"line_end":1773,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":722},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043566,"byte_end":7043577,"line_start":1790,"line_end":1790,"column_start":8,"column_end":19},"name":"min_m128d_s","qualname":"::x86_x64::sse2::min_m128d_s","value":"pub fn min_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `min(a, b)`, other lanes unchanged.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 12.0]);\n let b = m128d::from_array([0.0, 6.0]);\n let c = min_m128d_s(a, b).to_array();\n assert_eq!(c, [0.0, 12.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `min(a, b)`, other lanes unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043223,"byte_end":7043271,"line_start":1779,"line_end":1779,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043272,"byte_end":7043279,"line_start":1780,"line_end":1780,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043280,"byte_end":7043303,"line_start":1781,"line_end":1781,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043304,"byte_end":7043347,"line_start":1782,"line_end":1782,"column_start":1,"column_end":44}},{"value":"/ let b = m128d::from_array([0.0, 6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043348,"byte_end":7043390,"line_start":1783,"line_end":1783,"column_start":1,"column_end":43}},{"value":"/ let c = min_m128d_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043391,"byte_end":7043432,"line_start":1784,"line_end":1784,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [0.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043433,"byte_end":7043464,"line_start":1785,"line_end":1785,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043465,"byte_end":7043472,"line_start":1786,"line_end":1786,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043473,"byte_end":7043484,"line_start":1787,"line_end":1787,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043485,"byte_end":7043502,"line_start":1788,"line_end":1788,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043962,"byte_end":7043978,"line_start":1804,"line_end":1804,"column_start":8,"column_end":24},"name":"copy_i64_m128i_s","qualname":"::x86_x64::sse2::copy_i64_m128i_s","value":"pub fn copy_i64_m128i_s(m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Copy the low `i64` lane to a new register, upper bits 0.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i64, 2]);\n let b = copy_i64_m128i_s(a);\n assert_eq!(<[i64; 2]>::from(b), [1, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Copy the low `i64` lane to a new register, upper bits 0.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043653,"byte_end":7043713,"line_start":1794,"line_end":1794,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043714,"byte_end":7043721,"line_start":1795,"line_end":1795,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043722,"byte_end":7043745,"line_start":1796,"line_end":1796,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i64, 2]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043746,"byte_end":7043782,"line_start":1797,"line_end":1797,"column_start":1,"column_end":37}},{"value":"/ let b = copy_i64_m128i_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043783,"byte_end":7043815,"line_start":1798,"line_end":1798,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(<[i64; 2]>::from(b), [1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043816,"byte_end":7043860,"line_start":1799,"line_end":1799,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043861,"byte_end":7043868,"line_start":1800,"line_end":1800,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043869,"byte_end":7043880,"line_start":1801,"line_end":1801,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7043881,"byte_end":7043898,"line_start":1802,"line_end":1802,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":724},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044413,"byte_end":7044439,"line_start":1819,"line_end":1819,"column_start":8,"column_end":34},"name":"copy_replace_low_f64_m128d","qualname":"::x86_x64::sse2::copy_replace_low_f64_m128d","value":"pub fn copy_replace_low_f64_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Copies the `a` value and replaces the low lane with the low `b` value.\n ```\n # use safe_arch::*;\n let a = m128d::from([1.0, 2.0]);\n let b = m128d::from([3.0, 4.0]);\n let c = copy_replace_low_f64_m128d(a, b);\n assert_eq!(c.to_array(), [3.0, 2.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Copies the `a` value and replaces the low lane with the low `b` value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044043,"byte_end":7044117,"line_start":1808,"line_end":1808,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044118,"byte_end":7044125,"line_start":1809,"line_end":1809,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044126,"byte_end":7044149,"line_start":1810,"line_end":1810,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044150,"byte_end":7044186,"line_start":1811,"line_end":1811,"column_start":1,"column_end":37}},{"value":"/ let b = m128d::from([3.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044187,"byte_end":7044223,"line_start":1812,"line_end":1812,"column_start":1,"column_end":37}},{"value":"/ let c = copy_replace_low_f64_m128d(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044224,"byte_end":7044269,"line_start":1813,"line_end":1813,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c.to_array(), [3.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044270,"byte_end":7044311,"line_start":1814,"line_end":1814,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044312,"byte_end":7044319,"line_start":1815,"line_end":1815,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044320,"byte_end":7044331,"line_start":1816,"line_end":1816,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044332,"byte_end":7044349,"line_start":1817,"line_end":1817,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":725},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044943,"byte_end":7044961,"line_start":1837,"line_end":1837,"column_start":8,"column_end":26},"name":"move_mask_i8_m128i","qualname":"::x86_x64::sse2::move_mask_i8_m128i","value":"pub fn move_mask_i8_m128i(m128i) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Gathers the `i8` sign bit of each lane.","sig":null,"attributes":[{"value":"/ Gathers the `i8` sign bit of each lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044516,"byte_end":7044559,"line_start":1823,"line_end":1823,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044560,"byte_end":7044563,"line_start":1824,"line_end":1824,"column_start":1,"column_end":4}},{"value":"/ The output has lane 0 as bit 0, lane 1 as bit 1, and so on.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044564,"byte_end":7044627,"line_start":1825,"line_end":1825,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044628,"byte_end":7044635,"line_start":1826,"line_end":1826,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044636,"byte_end":7044659,"line_start":1827,"line_end":1827,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044660,"byte_end":7044685,"line_start":1828,"line_end":1828,"column_start":1,"column_end":26}},{"value":"/   0_i8, -11, -2, 13, 4, 15, -6, 17, 8, 19, -20, 21, 22, 23, -24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044686,"byte_end":7044759,"line_start":1829,"line_end":1829,"column_start":1,"column_end":74}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044760,"byte_end":7044767,"line_start":1830,"line_end":1830,"column_start":1,"column_end":8}},{"value":"/ let i = move_mask_i8_m128i(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044768,"byte_end":7044802,"line_start":1831,"line_end":1831,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(i, 0b0100010001000110);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044803,"byte_end":7044841,"line_start":1832,"line_end":1832,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044842,"byte_end":7044849,"line_start":1833,"line_end":1833,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044850,"byte_end":7044861,"line_start":1834,"line_end":1834,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7044862,"byte_end":7044879,"line_start":1835,"line_end":1835,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045351,"byte_end":7045366,"line_start":1853,"line_end":1853,"column_start":8,"column_end":23},"name":"move_mask_m128d","qualname":"::x86_x64::sse2::move_mask_m128d","value":"pub fn move_mask_m128d(m128d) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Gathers the sign bit of each lane.","sig":null,"attributes":[{"value":"/ Gathers the sign bit of each lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045020,"byte_end":7045058,"line_start":1841,"line_end":1841,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045059,"byte_end":7045062,"line_start":1842,"line_end":1842,"column_start":1,"column_end":4}},{"value":"/ The output has lane 0 as bit 0, lane 1 as bit 1.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045063,"byte_end":7045115,"line_start":1843,"line_end":1843,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045116,"byte_end":7045123,"line_start":1844,"line_end":1844,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045124,"byte_end":7045147,"line_start":1845,"line_end":1845,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([-1.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045148,"byte_end":7045192,"line_start":1846,"line_end":1846,"column_start":1,"column_end":45}},{"value":"/ let i = move_mask_m128d(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045193,"byte_end":7045224,"line_start":1847,"line_end":1847,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(i, 0b01);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045225,"byte_end":7045249,"line_start":1848,"line_end":1848,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045250,"byte_end":7045257,"line_start":1849,"line_end":1849,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045258,"byte_end":7045269,"line_start":1850,"line_end":1850,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045270,"byte_end":7045287,"line_start":1851,"line_end":1851,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":727},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045853,"byte_end":7045876,"line_start":1869,"line_end":1869,"column_start":8,"column_end":31},"name":"mul_widen_u32_odd_m128i","qualname":"::x86_x64::sse2::mul_widen_u32_odd_m128i","value":"pub fn mul_widen_u32_odd_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the odd `u32` lanes and gives the widened (`u64`) results.","sig":null,"attributes":[{"value":"/ Multiplies the odd `u32` lanes and gives the widened (`u64`) results.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045423,"byte_end":7045496,"line_start":1857,"line_end":1857,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045497,"byte_end":7045500,"line_start":1858,"line_end":1858,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045501,"byte_end":7045508,"line_start":1859,"line_end":1859,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045509,"byte_end":7045532,"line_start":1860,"line_end":1860,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 7, u32::MAX, 7]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045533,"byte_end":7045578,"line_start":1861,"line_end":1861,"column_start":1,"column_end":46}},{"value":"/ let b = m128i::from([5, 7, u32::MAX, 7]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045579,"byte_end":7045624,"line_start":1862,"line_end":1862,"column_start":1,"column_end":46}},{"value":"/ let c: [u64; 2] = mul_widen_u32_odd_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045625,"byte_end":7045684,"line_start":1863,"line_end":1863,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [(1 * 5), (u32::MAX as u64 * u32::MAX as u64)]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045685,"byte_end":7045751,"line_start":1864,"line_end":1864,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045752,"byte_end":7045759,"line_start":1865,"line_end":1865,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045760,"byte_end":7045771,"line_start":1866,"line_end":1866,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045772,"byte_end":7045789,"line_start":1867,"line_end":1867,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":728},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046278,"byte_end":7046287,"line_start":1884,"line_end":1884,"column_start":8,"column_end":17},"name":"mul_m128d","qualname":"::x86_x64::sse2::mul_m128d","value":"pub fn mul_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a * b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -6.0]);\n let c = mul_m128d(a, b).to_array();\n assert_eq!(c, [9200.0, -525.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a * b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045955,"byte_end":7045976,"line_start":1873,"line_end":1873,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045977,"byte_end":7045984,"line_start":1874,"line_end":1874,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7045985,"byte_end":7046008,"line_start":1875,"line_end":1875,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046009,"byte_end":7046053,"line_start":1876,"line_end":1876,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046054,"byte_end":7046099,"line_start":1877,"line_end":1877,"column_start":1,"column_end":46}},{"value":"/ let c = mul_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046100,"byte_end":7046139,"line_start":1878,"line_end":1878,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(c, [9200.0, -525.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046140,"byte_end":7046176,"line_start":1879,"line_end":1879,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046177,"byte_end":7046184,"line_start":1880,"line_end":1880,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046185,"byte_end":7046196,"line_start":1881,"line_end":1881,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046197,"byte_end":7046214,"line_start":1882,"line_end":1882,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":729},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046712,"byte_end":7046723,"line_start":1899,"line_end":1899,"column_start":8,"column_end":19},"name":"mul_m128d_s","qualname":"::x86_x64::sse2::mul_m128d_s","value":"pub fn mul_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lowest lane `a * b`, high lane unchanged.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -600.0]);\n let c = mul_m128d_s(a, b).to_array();\n assert_eq!(c, [9200.0, 87.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lowest lane `a * b`, high lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046363,"byte_end":7046408,"line_start":1888,"line_end":1888,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046409,"byte_end":7046416,"line_start":1889,"line_end":1889,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046417,"byte_end":7046440,"line_start":1890,"line_end":1890,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046441,"byte_end":7046485,"line_start":1891,"line_end":1891,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -600.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046486,"byte_end":7046533,"line_start":1892,"line_end":1892,"column_start":1,"column_end":48}},{"value":"/ let c = mul_m128d_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046534,"byte_end":7046575,"line_start":1893,"line_end":1893,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [9200.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046576,"byte_end":7046610,"line_start":1894,"line_end":1894,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046611,"byte_end":7046618,"line_start":1895,"line_end":1895,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046619,"byte_end":7046630,"line_start":1896,"line_end":1896,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046631,"byte_end":7046648,"line_start":1897,"line_end":1897,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":730},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047268,"byte_end":7047291,"line_start":1915,"line_end":1915,"column_start":8,"column_end":31},"name":"mul_i16_keep_high_m128i","qualname":"::x86_x64::sse2::mul_i16_keep_high_m128i","value":"pub fn mul_i16_keep_high_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a * b` with lanes as `i16`, keep the high bits of the `i32`\n intermediates.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 200, 300, 4568, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 600, 700, 8910, -15, -26, -37, 48]);\n let c: [i16; 8] = mul_i16_keep_high_m128i(a, b).into();\n assert_eq!(c, [0, 1, 3, 621, 0, 0, 0, -1]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a * b` with lanes as `i16`, keep the high bits of the `i32`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046799,"byte_end":7046872,"line_start":1903,"line_end":1903,"column_start":1,"column_end":74}},{"value":"/ intermediates.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046873,"byte_end":7046891,"line_start":1904,"line_end":1904,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046892,"byte_end":7046899,"line_start":1905,"line_end":1905,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046900,"byte_end":7046923,"line_start":1906,"line_end":1906,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 200, 300, 4568, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046924,"byte_end":7046989,"line_start":1907,"line_end":1907,"column_start":1,"column_end":66}},{"value":"/ let b = m128i::from([5_i16, 600, 700, 8910, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7046990,"byte_end":7047058,"line_start":1908,"line_end":1908,"column_start":1,"column_end":69}},{"value":"/ let c: [i16; 8] = mul_i16_keep_high_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047059,"byte_end":7047118,"line_start":1909,"line_end":1909,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [0, 1, 3, 621, 0, 0, 0, -1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047119,"byte_end":7047166,"line_start":1910,"line_end":1910,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047167,"byte_end":7047174,"line_start":1911,"line_end":1911,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047175,"byte_end":7047186,"line_start":1912,"line_end":1912,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047187,"byte_end":7047204,"line_start":1913,"line_end":1913,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":731},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047843,"byte_end":7047866,"line_start":1931,"line_end":1931,"column_start":8,"column_end":31},"name":"mul_u16_keep_high_m128i","qualname":"::x86_x64::sse2::mul_u16_keep_high_m128i","value":"pub fn mul_u16_keep_high_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a * b` with lanes as `u16`, keep the high bits of the `u32`\n intermediates.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_u16, 2003, 3005, 45687, 1, 2, 3, 4]);\n let b = m128i::from([5_u16, 6004, 7006, 8910, 15, 26, 37, 48]);\n let c: [u16; 8] = mul_u16_keep_high_m128i(a, b).into();\n assert_eq!(c, [0, 183, 321, 6211, 0, 0, 0, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a * b` with lanes as `u16`, keep the high bits of the `u32`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047372,"byte_end":7047445,"line_start":1919,"line_end":1919,"column_start":1,"column_end":74}},{"value":"/ intermediates.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047446,"byte_end":7047464,"line_start":1920,"line_end":1920,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047465,"byte_end":7047472,"line_start":1921,"line_end":1921,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047473,"byte_end":7047496,"line_start":1922,"line_end":1922,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u16, 2003, 3005, 45687, 1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047497,"byte_end":7047561,"line_start":1923,"line_end":1923,"column_start":1,"column_end":65}},{"value":"/ let b = m128i::from([5_u16, 6004, 7006, 8910, 15, 26, 37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047562,"byte_end":7047629,"line_start":1924,"line_end":1924,"column_start":1,"column_end":68}},{"value":"/ let c: [u16; 8] = mul_u16_keep_high_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047630,"byte_end":7047689,"line_start":1925,"line_end":1925,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [0, 183, 321, 6211, 0, 0, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047690,"byte_end":7047741,"line_start":1926,"line_end":1926,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047742,"byte_end":7047749,"line_start":1927,"line_end":1927,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047750,"byte_end":7047761,"line_start":1928,"line_end":1928,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047762,"byte_end":7047779,"line_start":1929,"line_end":1929,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048430,"byte_end":7048452,"line_start":1947,"line_end":1947,"column_start":8,"column_end":30},"name":"mul_i16_keep_low_m128i","qualname":"::x86_x64::sse2::mul_i16_keep_low_m128i","value":"pub fn mul_i16_keep_low_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a * b` with lanes as `i16`, keep the low bits of the `i32`\n intermediates.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 200, 300, 4568, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 600, 700, 8910, -15, -26, -37, 48]);\n let c: [i16; 8] = mul_i16_keep_low_m128i(a, b).into();\n assert_eq!(c, [5, -11072, 13392, 3024, 15, 52, 111, -192]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a * b` with lanes as `i16`, keep the low bits of the `i32`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7047947,"byte_end":7048019,"line_start":1935,"line_end":1935,"column_start":1,"column_end":73}},{"value":"/ intermediates.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048020,"byte_end":7048038,"line_start":1936,"line_end":1936,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048039,"byte_end":7048046,"line_start":1937,"line_end":1937,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048047,"byte_end":7048070,"line_start":1938,"line_end":1938,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 200, 300, 4568, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048071,"byte_end":7048136,"line_start":1939,"line_end":1939,"column_start":1,"column_end":66}},{"value":"/ let b = m128i::from([5_i16, 600, 700, 8910, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048137,"byte_end":7048205,"line_start":1940,"line_end":1940,"column_start":1,"column_end":69}},{"value":"/ let c: [i16; 8] = mul_i16_keep_low_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048206,"byte_end":7048264,"line_start":1941,"line_end":1941,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(c, [5, -11072, 13392, 3024, 15, 52, 111, -192]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048265,"byte_end":7048328,"line_start":1942,"line_end":1942,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048329,"byte_end":7048336,"line_start":1943,"line_end":1943,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048337,"byte_end":7048348,"line_start":1944,"line_end":1944,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048349,"byte_end":7048366,"line_start":1945,"line_end":1945,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":733},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048846,"byte_end":7048857,"line_start":1962,"line_end":1962,"column_start":8,"column_end":19},"name":"bitor_m128d","qualname":"::x86_x64::sse2::bitor_m128d","value":"pub fn bitor_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a | b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 0.0]);\n let b = m128d::from_array([1.0, 1.0]);\n let c = bitor_m128d(a, b).to_array();\n assert_eq!(c, [1.0, 1.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a | b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048533,"byte_end":7048553,"line_start":1951,"line_end":1951,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048554,"byte_end":7048561,"line_start":1952,"line_end":1952,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048562,"byte_end":7048585,"line_start":1953,"line_end":1953,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048586,"byte_end":7048628,"line_start":1954,"line_end":1954,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048629,"byte_end":7048671,"line_start":1955,"line_end":1955,"column_start":1,"column_end":43}},{"value":"/ let c = bitor_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048672,"byte_end":7048713,"line_start":1956,"line_end":1956,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048714,"byte_end":7048744,"line_start":1957,"line_end":1957,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048745,"byte_end":7048752,"line_start":1958,"line_end":1958,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048753,"byte_end":7048764,"line_start":1959,"line_end":1959,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048765,"byte_end":7048782,"line_start":1960,"line_end":1960,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049245,"byte_end":7049256,"line_start":1977,"line_end":1977,"column_start":8,"column_end":19},"name":"bitor_m128i","qualname":"::x86_x64::sse2::bitor_m128i","value":"pub fn bitor_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a | b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 0, 1, 0]);\n let b = m128i::from([1, 1, 0, 0]);\n let c: [i32; 4] = bitor_m128i(a, b).into();\n assert_eq!(c, [1, 1, 1, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a | b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048932,"byte_end":7048952,"line_start":1966,"line_end":1966,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048953,"byte_end":7048960,"line_start":1967,"line_end":1967,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048961,"byte_end":7048984,"line_start":1968,"line_end":1968,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 0, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7048985,"byte_end":7049023,"line_start":1969,"line_end":1969,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([1, 1, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049024,"byte_end":7049062,"line_start":1970,"line_end":1970,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = bitor_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049063,"byte_end":7049110,"line_start":1971,"line_end":1971,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [1, 1, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049111,"byte_end":7049143,"line_start":1972,"line_end":1972,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049144,"byte_end":7049151,"line_start":1973,"line_end":1973,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049152,"byte_end":7049163,"line_start":1974,"line_end":1974,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049164,"byte_end":7049181,"line_start":1975,"line_end":1975,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":735},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049779,"byte_end":7049799,"line_start":1992,"line_end":1992,"column_start":8,"column_end":28},"name":"pack_i16_to_i8_m128i","qualname":"::x86_x64::sse2::pack_i16_to_i8_m128i","value":"pub fn pack_i16_to_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Saturating convert `i16` to `i8`, and pack the values.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, 5, 6, 7, 8]);\n let b = m128i::from([9_i16, 10, 11, 12, 13, 14, 15, 16]);\n let c: [i8; 16] = pack_i16_to_i8_m128i(a, b).into();\n assert_eq!(c, [1_i8, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]);\n ```\n","sig":null,"attributes":[{"value":"/ Saturating convert `i16` to `i8`, and pack the values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049334,"byte_end":7049392,"line_start":1981,"line_end":1981,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049393,"byte_end":7049400,"line_start":1982,"line_end":1982,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049401,"byte_end":7049424,"line_start":1983,"line_end":1983,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049425,"byte_end":7049479,"line_start":1984,"line_end":1984,"column_start":1,"column_end":55}},{"value":"/ let b = m128i::from([9_i16, 10, 11, 12, 13, 14, 15, 16]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049480,"byte_end":7049541,"line_start":1985,"line_end":1985,"column_start":1,"column_end":62}},{"value":"/ let c: [i8; 16] = pack_i16_to_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049542,"byte_end":7049598,"line_start":1986,"line_end":1986,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [1_i8, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049599,"byte_end":7049677,"line_start":1987,"line_end":1987,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049678,"byte_end":7049685,"line_start":1988,"line_end":1988,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049686,"byte_end":7049697,"line_start":1989,"line_end":1989,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049698,"byte_end":7049715,"line_start":1990,"line_end":1990,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":736},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050266,"byte_end":7050287,"line_start":2007,"line_end":2007,"column_start":8,"column_end":29},"name":"pack_i32_to_i16_m128i","qualname":"::x86_x64::sse2::pack_i32_to_i16_m128i","value":"pub fn pack_i32_to_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Saturating convert `i32` to `i16`, and pack the values.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i32, 2, 3, 4]);\n let b = m128i::from([5_i32, 6, 7, 8]);\n let c: [i16; 8] = pack_i32_to_i16_m128i(a, b).into();\n assert_eq!(c, [1_i16, 2, 3, 4, 5, 6, 7, 8]);\n ```\n","sig":null,"attributes":[{"value":"/ Saturating convert `i32` to `i16`, and pack the values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049880,"byte_end":7049939,"line_start":1996,"line_end":1996,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049940,"byte_end":7049947,"line_start":1997,"line_end":1997,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049948,"byte_end":7049971,"line_start":1998,"line_end":1998,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i32, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7049972,"byte_end":7050014,"line_start":1999,"line_end":1999,"column_start":1,"column_end":43}},{"value":"/ let b = m128i::from([5_i32, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050015,"byte_end":7050057,"line_start":2000,"line_end":2000,"column_start":1,"column_end":43}},{"value":"/ let c: [i16; 8] = pack_i32_to_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050058,"byte_end":7050115,"line_start":2001,"line_end":2001,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [1_i16, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050116,"byte_end":7050164,"line_start":2002,"line_end":2002,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050165,"byte_end":7050172,"line_start":2003,"line_end":2003,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050173,"byte_end":7050184,"line_start":2004,"line_end":2004,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050185,"byte_end":7050202,"line_start":2005,"line_end":2005,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":737},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050847,"byte_end":7050867,"line_start":2025,"line_end":2025,"column_start":8,"column_end":28},"name":"pack_i16_to_u8_m128i","qualname":"::x86_x64::sse2::pack_i16_to_u8_m128i","value":"pub fn pack_i16_to_u8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Saturating convert `i16` to `u8`, and pack the values.\n ```\n # use safe_arch::*;\n let a = m128i::from([-1_i16, 2, -3, 4, -5, 6, -7, 8]);\n let b = m128i::from([9_i16, 10, 11, 12, 13, -14, 15, -16]);\n let c: [u8; 16] = pack_i16_to_i8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [255_u8, 2, 253, 4, 251, 6, 249, 8, 9, 10, 11, 12, 13, 242, 15, 240]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Saturating convert `i16` to `u8`, and pack the values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050368,"byte_end":7050426,"line_start":2011,"line_end":2011,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050427,"byte_end":7050434,"line_start":2012,"line_end":2012,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050435,"byte_end":7050458,"line_start":2013,"line_end":2013,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([-1_i16, 2, -3, 4, -5, 6, -7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050459,"byte_end":7050517,"line_start":2014,"line_end":2014,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([9_i16, 10, 11, 12, 13, -14, 15, -16]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050518,"byte_end":7050581,"line_start":2015,"line_end":2015,"column_start":1,"column_end":64}},{"value":"/ let c: [u8; 16] = pack_i16_to_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050582,"byte_end":7050638,"line_start":2016,"line_end":2016,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050639,"byte_end":7050654,"line_start":2017,"line_end":2017,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050655,"byte_end":7050663,"line_start":2018,"line_end":2018,"column_start":1,"column_end":9}},{"value":"/   [255_u8, 2, 253, 4, 251, 6, 249, 8, 9, 10, 11, 12, 13, 242, 15, 240]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050664,"byte_end":7050738,"line_start":2019,"line_end":2019,"column_start":1,"column_end":75}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050739,"byte_end":7050745,"line_start":2020,"line_end":2020,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050746,"byte_end":7050753,"line_start":2021,"line_end":2021,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050754,"byte_end":7050765,"line_start":2022,"line_end":2022,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050766,"byte_end":7050783,"line_start":2023,"line_end":2023,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051624,"byte_end":7051648,"line_start":2048,"line_end":2048,"column_start":8,"column_end":32},"name":"sum_of_u8_abs_diff_m128i","qualname":"::x86_x64::sse2::sum_of_u8_abs_diff_m128i","value":"pub fn sum_of_u8_abs_diff_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Compute \"sum of `u8` absolute differences\".","sig":null,"attributes":[{"value":"/ Compute \"sum of `u8` absolute differences\".","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050949,"byte_end":7050996,"line_start":2029,"line_end":2029,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7050997,"byte_end":7051000,"line_start":2030,"line_end":2030,"column_start":1,"column_end":4}},{"value":"/ * `u8` lanewise `abs(a - b)`, producing `u8` intermediate values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051001,"byte_end":7051070,"line_start":2031,"line_end":2031,"column_start":1,"column_end":70}},{"value":"/ * Sum the first eight and second eight values.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051071,"byte_end":7051121,"line_start":2032,"line_end":2032,"column_start":1,"column_end":51}},{"value":"/ * Place into the low 16 bits of two `u64` lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051122,"byte_end":7051174,"line_start":2033,"line_end":2033,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051175,"byte_end":7051182,"line_start":2034,"line_end":2034,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051183,"byte_end":7051206,"line_start":2035,"line_end":2035,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051207,"byte_end":7051232,"line_start":2036,"line_end":2036,"column_start":1,"column_end":26}},{"value":"/   0_u8, 11, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051233,"byte_end":7051301,"line_start":2037,"line_end":2037,"column_start":1,"column_end":69}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051302,"byte_end":7051309,"line_start":2038,"line_end":2038,"column_start":1,"column_end":8}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051310,"byte_end":7051335,"line_start":2039,"line_end":2039,"column_start":1,"column_end":26}},{"value":"/   20_u8, 110, 250, 103, 34, 105, 60, 217, 8, 19, 210, 201, 202, 203, 204, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051336,"byte_end":7051418,"line_start":2040,"line_end":2040,"column_start":1,"column_end":83}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051419,"byte_end":7051426,"line_start":2041,"line_end":2041,"column_start":1,"column_end":8}},{"value":"/ let c: [u64; 2] = sum_of_u8_abs_diff_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051427,"byte_end":7051487,"line_start":2042,"line_end":2042,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [831_u64, 910]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051488,"byte_end":7051522,"line_start":2043,"line_end":2043,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051523,"byte_end":7051530,"line_start":2044,"line_end":2044,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051531,"byte_end":7051542,"line_start":2045,"line_end":2045,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051543,"byte_end":7051560,"line_start":2046,"line_end":2046,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":739},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052231,"byte_end":7052243,"line_start":2065,"line_end":2065,"column_start":8,"column_end":20},"name":"set_i8_m128i","qualname":"::x86_x64::sse2::set_i8_m128i","value":"pub fn set_i8_m128i(i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8,\n                    i8, i8) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([15_i8, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]);\n let b = set_i8_m128i(0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n assert_eq!(<[i8; 16]>::from(a), <[i8; 16]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051726,"byte_end":7051788,"line_start":2052,"line_end":2052,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051789,"byte_end":7051796,"line_start":2053,"line_end":2053,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051797,"byte_end":7051820,"line_start":2054,"line_end":2054,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051821,"byte_end":7051832,"line_start":2055,"line_end":2055,"column_start":1,"column_end":12}},{"value":"/   m128i::from([15_i8, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051833,"byte_end":7051910,"line_start":2056,"line_end":2056,"column_start":1,"column_end":78}},{"value":"/ let b = set_i8_m128i(0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051911,"byte_end":7051993,"line_start":2057,"line_end":2057,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(<[i8; 16]>::from(a), <[i8; 16]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7051994,"byte_end":7052051,"line_start":2058,"line_end":2058,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052052,"byte_end":7052059,"line_start":2059,"line_end":2059,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052060,"byte_end":7052071,"line_start":2060,"line_end":2060,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052072,"byte_end":7052089,"line_start":2061,"line_end":2061,"column_start":1,"column_end":18}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052090,"byte_end":7052126,"line_start":2062,"line_end":2062,"column_start":1,"column_end":37}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052127,"byte_end":7052167,"line_start":2063,"line_end":2063,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":740},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052900,"byte_end":7052913,"line_start":2084,"line_end":2084,"column_start":8,"column_end":21},"name":"set_i16_m128i","qualname":"::x86_x64::sse2::set_i16_m128i","value":"pub fn set_i16_m128i(i16, i16, i16, i16, i16, i16, i16, i16) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a = m128i::from([7_i16, 6, 5, 4, 3, 2, 1, 0]);\n let b = set_i16_m128i(0_i16, 1, 2, 3, 4, 5, 6, 7);\n assert_eq!(<[i16; 8]>::from(a), <[i16; 8]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052458,"byte_end":7052520,"line_start":2072,"line_end":2072,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052521,"byte_end":7052528,"line_start":2073,"line_end":2073,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052529,"byte_end":7052552,"line_start":2074,"line_end":2074,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([7_i16, 6, 5, 4, 3, 2, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052553,"byte_end":7052607,"line_start":2075,"line_end":2075,"column_start":1,"column_end":55}},{"value":"/ let b = set_i16_m128i(0_i16, 1, 2, 3, 4, 5, 6, 7);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052608,"byte_end":7052662,"line_start":2076,"line_end":2076,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(<[i16; 8]>::from(a), <[i16; 8]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052663,"byte_end":7052720,"line_start":2077,"line_end":2077,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052721,"byte_end":7052728,"line_start":2078,"line_end":2078,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052729,"byte_end":7052740,"line_start":2079,"line_end":2079,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052741,"byte_end":7052758,"line_start":2080,"line_end":2080,"column_start":1,"column_end":18}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052759,"byte_end":7052795,"line_start":2081,"line_end":2081,"column_start":1,"column_end":37}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7052796,"byte_end":7052836,"line_start":2082,"line_end":2082,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":741},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053387,"byte_end":7053400,"line_start":2100,"line_end":2100,"column_start":8,"column_end":21},"name":"set_i32_m128i","qualname":"::x86_x64::sse2::set_i32_m128i","value":"pub fn set_i32_m128i(i32, i32, i32, i32) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a = m128i::from([3, 2, 1, 0]);\n let b = set_i32_m128i(0, 1, 2, 3);\n assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053055,"byte_end":7053117,"line_start":2090,"line_end":2090,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053118,"byte_end":7053125,"line_start":2091,"line_end":2091,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053126,"byte_end":7053149,"line_start":2092,"line_end":2092,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([3, 2, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053150,"byte_end":7053188,"line_start":2093,"line_end":2093,"column_start":1,"column_end":39}},{"value":"/ let b = set_i32_m128i(0, 1, 2, 3);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053189,"byte_end":7053227,"line_start":2094,"line_end":2094,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053228,"byte_end":7053285,"line_start":2095,"line_end":2095,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053286,"byte_end":7053293,"line_start":2096,"line_end":2096,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053294,"byte_end":7053305,"line_start":2097,"line_end":2097,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053306,"byte_end":7053323,"line_start":2098,"line_end":2098,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":742},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053817,"byte_end":7053830,"line_start":2114,"line_end":2114,"column_start":8,"column_end":21},"name":"set_i64_m128i","qualname":"::x86_x64::sse2::set_i64_m128i","value":"pub fn set_i64_m128i(i64, i64) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i64, 0]);\n let b = set_i64_m128i(0, 1);\n assert_eq!(<[i64; 2]>::from(a), <[i64; 2]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053493,"byte_end":7053555,"line_start":2104,"line_end":2104,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053556,"byte_end":7053563,"line_start":2105,"line_end":2105,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053564,"byte_end":7053587,"line_start":2106,"line_end":2106,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053588,"byte_end":7053624,"line_start":2107,"line_end":2107,"column_start":1,"column_end":37}},{"value":"/ let b = set_i64_m128i(0, 1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053625,"byte_end":7053657,"line_start":2108,"line_end":2108,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(<[i64; 2]>::from(a), <[i64; 2]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053658,"byte_end":7053715,"line_start":2109,"line_end":2109,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053716,"byte_end":7053723,"line_start":2110,"line_end":2110,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053724,"byte_end":7053735,"line_start":2111,"line_end":2111,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053736,"byte_end":7053753,"line_start":2112,"line_end":2112,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":743},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054218,"byte_end":7054227,"line_start":2128,"line_end":2128,"column_start":8,"column_end":17},"name":"set_m128d","qualname":"::x86_x64::sse2::set_m128d","value":"pub fn set_m128d(f64, f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128d`, first arg is the high lane.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 0.0]);\n let b = set_m128d(0.0, 1.0);\n assert_eq!(a.to_array(), b.to_array());\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128d`, first arg is the high lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053902,"byte_end":7053964,"line_start":2118,"line_end":2118,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053965,"byte_end":7053972,"line_start":2119,"line_end":2119,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053973,"byte_end":7053996,"line_start":2120,"line_end":2120,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7053997,"byte_end":7054039,"line_start":2121,"line_end":2121,"column_start":1,"column_end":43}},{"value":"/ let b = set_m128d(0.0, 1.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054040,"byte_end":7054072,"line_start":2122,"line_end":2122,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.to_array(), b.to_array());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054073,"byte_end":7054116,"line_start":2123,"line_end":2123,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054117,"byte_end":7054124,"line_start":2124,"line_end":2124,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054125,"byte_end":7054136,"line_start":2125,"line_end":2125,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054137,"byte_end":7054154,"line_start":2126,"line_end":2126,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":744},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054595,"byte_end":7054606,"line_start":2142,"line_end":2142,"column_start":8,"column_end":19},"name":"set_m128d_s","qualname":"::x86_x64::sse2::set_m128d_s","value":"pub fn set_m128d_s(f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into the low lane of a `m128d`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 0.0]);\n let b = set_m128d_s(1.0);\n assert_eq!(a.to_array(), b.to_array());\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into the low lane of a `m128d`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054295,"byte_end":7054344,"line_start":2132,"line_end":2132,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054345,"byte_end":7054352,"line_start":2133,"line_end":2133,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054353,"byte_end":7054376,"line_start":2134,"line_end":2134,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054377,"byte_end":7054419,"line_start":2135,"line_end":2135,"column_start":1,"column_end":43}},{"value":"/ let b = set_m128d_s(1.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054420,"byte_end":7054449,"line_start":2136,"line_end":2136,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.to_array(), b.to_array());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054450,"byte_end":7054493,"line_start":2137,"line_end":2137,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054494,"byte_end":7054501,"line_start":2138,"line_end":2138,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054502,"byte_end":7054513,"line_start":2139,"line_end":2139,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054514,"byte_end":7054531,"line_start":2140,"line_end":2140,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":745},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054969,"byte_end":7054984,"line_start":2156,"line_end":2156,"column_start":8,"column_end":23},"name":"set_splat_m128d","qualname":"::x86_x64::sse2::set_splat_m128d","value":"pub fn set_splat_m128d(f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Splats the args into both lanes of the `m128d`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 1.0]);\n let b = set_splat_m128d(1.0);\n assert_eq!(a.to_array(), b.to_array());\n ```\n","sig":null,"attributes":[{"value":"/ Splats the args into both lanes of the `m128d`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054663,"byte_end":7054714,"line_start":2146,"line_end":2146,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054715,"byte_end":7054722,"line_start":2147,"line_end":2147,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054723,"byte_end":7054746,"line_start":2148,"line_end":2148,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054747,"byte_end":7054789,"line_start":2149,"line_end":2149,"column_start":1,"column_end":43}},{"value":"/ let b = set_splat_m128d(1.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054790,"byte_end":7054823,"line_start":2150,"line_end":2150,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(a.to_array(), b.to_array());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054824,"byte_end":7054867,"line_start":2151,"line_end":2151,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054868,"byte_end":7054875,"line_start":2152,"line_end":2152,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054876,"byte_end":7054887,"line_start":2153,"line_end":2153,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7054888,"byte_end":7054905,"line_start":2154,"line_end":2154,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":746},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055395,"byte_end":7055413,"line_start":2170,"line_end":2170,"column_start":8,"column_end":26},"name":"set_splat_i8_m128i","qualname":"::x86_x64::sse2::set_splat_i8_m128i","value":"pub fn set_splat_i8_m128i(i8) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i8` to all lanes of the `m128i`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);\n let b = set_splat_i8_m128i(1);\n assert_eq!(<[i8; 16]>::from(a), <[i8; 16]>::from(a));\n ```\n","sig":null,"attributes":[{"value":"/ Splats the `i8` to all lanes of the `m128i`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055042,"byte_end":7055090,"line_start":2160,"line_end":2160,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055091,"byte_end":7055098,"line_start":2161,"line_end":2161,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055099,"byte_end":7055122,"line_start":2162,"line_end":2162,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055123,"byte_end":7055200,"line_start":2163,"line_end":2163,"column_start":1,"column_end":78}},{"value":"/ let b = set_splat_i8_m128i(1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055201,"byte_end":7055235,"line_start":2164,"line_end":2164,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(<[i8; 16]>::from(a), <[i8; 16]>::from(a));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055236,"byte_end":7055293,"line_start":2165,"line_end":2165,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055294,"byte_end":7055301,"line_start":2166,"line_end":2166,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055302,"byte_end":7055313,"line_start":2167,"line_end":2167,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055314,"byte_end":7055331,"line_start":2168,"line_end":2168,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":747},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055804,"byte_end":7055823,"line_start":2184,"line_end":2184,"column_start":8,"column_end":27},"name":"set_splat_i16_m128i","qualname":"::x86_x64::sse2::set_splat_i16_m128i","value":"pub fn set_splat_i16_m128i(i16) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i16` to all lanes of the `m128i`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 1, 1, 1, 1, 1, 1, 1]);\n let b = set_splat_i16_m128i(1);\n assert_eq!(<[i16; 8]>::from(a), <[i16; 8]>::from(a));\n ```\n","sig":null,"attributes":[{"value":"/ Splats the `i16` to all lanes of the `m128i`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055472,"byte_end":7055521,"line_start":2174,"line_end":2174,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055522,"byte_end":7055529,"line_start":2175,"line_end":2175,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055530,"byte_end":7055553,"line_start":2176,"line_end":2176,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 1, 1, 1, 1, 1, 1, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055554,"byte_end":7055608,"line_start":2177,"line_end":2177,"column_start":1,"column_end":55}},{"value":"/ let b = set_splat_i16_m128i(1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055609,"byte_end":7055644,"line_start":2178,"line_end":2178,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(<[i16; 8]>::from(a), <[i16; 8]>::from(a));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055645,"byte_end":7055702,"line_start":2179,"line_end":2179,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055703,"byte_end":7055710,"line_start":2180,"line_end":2180,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055711,"byte_end":7055722,"line_start":2181,"line_end":2181,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055723,"byte_end":7055740,"line_start":2182,"line_end":2182,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":748},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056200,"byte_end":7056219,"line_start":2198,"line_end":2198,"column_start":8,"column_end":27},"name":"set_splat_i32_m128i","qualname":"::x86_x64::sse2::set_splat_i32_m128i","value":"pub fn set_splat_i32_m128i(i32) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i32` to all lanes of the `m128i`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 1, 1, 1]);\n let b = set_splat_i32_m128i(1);\n assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(a));\n ```\n","sig":null,"attributes":[{"value":"/ Splats the `i32` to all lanes of the `m128i`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055884,"byte_end":7055933,"line_start":2188,"line_end":2188,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055934,"byte_end":7055941,"line_start":2189,"line_end":2189,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055942,"byte_end":7055965,"line_start":2190,"line_end":2190,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 1, 1, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7055966,"byte_end":7056004,"line_start":2191,"line_end":2191,"column_start":1,"column_end":39}},{"value":"/ let b = set_splat_i32_m128i(1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056005,"byte_end":7056040,"line_start":2192,"line_end":2192,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(a));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056041,"byte_end":7056098,"line_start":2193,"line_end":2193,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056099,"byte_end":7056106,"line_start":2194,"line_end":2194,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056107,"byte_end":7056118,"line_start":2195,"line_end":2195,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056119,"byte_end":7056136,"line_start":2196,"line_end":2196,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":749},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056595,"byte_end":7056614,"line_start":2212,"line_end":2212,"column_start":8,"column_end":27},"name":"set_splat_i64_m128i","qualname":"::x86_x64::sse2::set_splat_i64_m128i","value":"pub fn set_splat_i64_m128i(i64) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Splats the `i64` to both lanes of the `m128i`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i64, 1]);\n let b = set_splat_i64_m128i(1);\n assert_eq!(<[i64; 2]>::from(a), <[i64; 2]>::from(a));\n ```\n","sig":null,"attributes":[{"value":"/ Splats the `i64` to both lanes of the `m128i`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056280,"byte_end":7056330,"line_start":2202,"line_end":2202,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056331,"byte_end":7056338,"line_start":2203,"line_end":2203,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056339,"byte_end":7056362,"line_start":2204,"line_end":2204,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i64, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056363,"byte_end":7056399,"line_start":2205,"line_end":2205,"column_start":1,"column_end":37}},{"value":"/ let b = set_splat_i64_m128i(1);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056400,"byte_end":7056435,"line_start":2206,"line_end":2206,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(<[i64; 2]>::from(a), <[i64; 2]>::from(a));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056436,"byte_end":7056493,"line_start":2207,"line_end":2207,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056494,"byte_end":7056501,"line_start":2208,"line_end":2208,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056502,"byte_end":7056513,"line_start":2209,"line_end":2209,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056514,"byte_end":7056531,"line_start":2210,"line_end":2210,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":750},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057202,"byte_end":7057223,"line_start":2231,"line_end":2231,"column_start":8,"column_end":29},"name":"set_reversed_i8_m128i","qualname":"::x86_x64::sse2::set_reversed_i8_m128i","value":"pub fn set_reversed_i8_m128i(i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8,\n                             i8, i8, i8, i8) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the low lane.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b = set_reversed_i8_m128i(\n   0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n );\n assert_eq!(<[i8; 16]>::from(a), <[i8; 16]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056676,"byte_end":7056737,"line_start":2216,"line_end":2216,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056738,"byte_end":7056745,"line_start":2217,"line_end":2217,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056746,"byte_end":7056769,"line_start":2218,"line_end":2218,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056770,"byte_end":7056781,"line_start":2219,"line_end":2219,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056782,"byte_end":7056859,"line_start":2220,"line_end":2220,"column_start":1,"column_end":78}},{"value":"/ let b = set_reversed_i8_m128i(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056860,"byte_end":7056894,"line_start":2221,"line_end":2221,"column_start":1,"column_end":35}},{"value":"/   0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056895,"byte_end":7056957,"line_start":2222,"line_end":2222,"column_start":1,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056958,"byte_end":7056964,"line_start":2223,"line_end":2223,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(<[i8; 16]>::from(a), <[i8; 16]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7056965,"byte_end":7057022,"line_start":2224,"line_end":2224,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057023,"byte_end":7057030,"line_start":2225,"line_end":2225,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057031,"byte_end":7057042,"line_start":2226,"line_end":2226,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057043,"byte_end":7057060,"line_start":2227,"line_end":2227,"column_start":1,"column_end":18}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057061,"byte_end":7057097,"line_start":2228,"line_end":2228,"column_start":1,"column_end":37}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057098,"byte_end":7057138,"line_start":2229,"line_end":2229,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":751},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057895,"byte_end":7057917,"line_start":2252,"line_end":2252,"column_start":8,"column_end":30},"name":"set_reversed_i16_m128i","qualname":"::x86_x64::sse2::set_reversed_i16_m128i","value":"pub fn set_reversed_i16_m128i(i16, i16, i16, i16, i16, i16, i16, i16) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the low lane.\n ```\n # use safe_arch::*;\n let a = m128i::from([0_i16, 1, 2, 3, 4, 5, 6, 7]);\n let b = set_reversed_i16_m128i(0_i16, 1, 2, 3, 4, 5, 6, 7);\n assert_eq!(<[i16; 8]>::from(a), <[i16; 8]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057445,"byte_end":7057506,"line_start":2240,"line_end":2240,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057507,"byte_end":7057514,"line_start":2241,"line_end":2241,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057515,"byte_end":7057538,"line_start":2242,"line_end":2242,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([0_i16, 1, 2, 3, 4, 5, 6, 7]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057539,"byte_end":7057593,"line_start":2243,"line_end":2243,"column_start":1,"column_end":55}},{"value":"/ let b = set_reversed_i16_m128i(0_i16, 1, 2, 3, 4, 5, 6, 7);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057594,"byte_end":7057657,"line_start":2244,"line_end":2244,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(<[i16; 8]>::from(a), <[i16; 8]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057658,"byte_end":7057715,"line_start":2245,"line_end":2245,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057716,"byte_end":7057723,"line_start":2246,"line_end":2246,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057724,"byte_end":7057735,"line_start":2247,"line_end":2247,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057736,"byte_end":7057753,"line_start":2248,"line_end":2248,"column_start":1,"column_end":18}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057754,"byte_end":7057790,"line_start":2249,"line_end":2249,"column_start":1,"column_end":37}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7057791,"byte_end":7057831,"line_start":2250,"line_end":2250,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":752},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058400,"byte_end":7058422,"line_start":2268,"line_end":2268,"column_start":8,"column_end":30},"name":"set_reversed_i32_m128i","qualname":"::x86_x64::sse2::set_reversed_i32_m128i","value":"pub fn set_reversed_i32_m128i(i32, i32, i32, i32) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128i`, first arg is the low lane.\n ```\n # use safe_arch::*;\n let a = m128i::from([0, 1, 2, 3]);\n let b = set_reversed_i32_m128i(0, 1, 2, 3);\n assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(b));\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128i`, first arg is the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058060,"byte_end":7058121,"line_start":2258,"line_end":2258,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058122,"byte_end":7058129,"line_start":2259,"line_end":2259,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058130,"byte_end":7058153,"line_start":2260,"line_end":2260,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([0, 1, 2, 3]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058154,"byte_end":7058192,"line_start":2261,"line_end":2261,"column_start":1,"column_end":39}},{"value":"/ let b = set_reversed_i32_m128i(0, 1, 2, 3);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058193,"byte_end":7058240,"line_start":2262,"line_end":2262,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(<[i32; 4]>::from(a), <[i32; 4]>::from(b));","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058241,"byte_end":7058298,"line_start":2263,"line_end":2263,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058299,"byte_end":7058306,"line_start":2264,"line_end":2264,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058307,"byte_end":7058318,"line_start":2265,"line_end":2265,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058319,"byte_end":7058336,"line_start":2266,"line_end":2266,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":753},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058840,"byte_end":7058858,"line_start":2282,"line_end":2282,"column_start":8,"column_end":26},"name":"set_reversed_m128d","qualname":"::x86_x64::sse2::set_reversed_m128d","value":"pub fn set_reversed_m128d(f64, f64) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Sets the args into an `m128d`, first arg is the low lane.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([0.0, 1.0]);\n let b = set_reversed_m128d(0.0, 1.0);\n assert_eq!(a.to_array(), b.to_array());\n ```\n","sig":null,"attributes":[{"value":"/ Sets the args into an `m128d`, first arg is the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058516,"byte_end":7058577,"line_start":2272,"line_end":2272,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058578,"byte_end":7058585,"line_start":2273,"line_end":2273,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058586,"byte_end":7058609,"line_start":2274,"line_end":2274,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([0.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058610,"byte_end":7058652,"line_start":2275,"line_end":2275,"column_start":1,"column_end":43}},{"value":"/ let b = set_reversed_m128d(0.0, 1.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058653,"byte_end":7058694,"line_start":2276,"line_end":2276,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(a.to_array(), b.to_array());","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058695,"byte_end":7058738,"line_start":2277,"line_end":2277,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058739,"byte_end":7058746,"line_start":2278,"line_end":2278,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058747,"byte_end":7058758,"line_start":2279,"line_end":2279,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058759,"byte_end":7058776,"line_start":2280,"line_end":2280,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":754},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059142,"byte_end":7059154,"line_start":2295,"line_end":2295,"column_start":8,"column_end":20},"name":"zeroed_m128i","qualname":"::x86_x64::sse2::zeroed_m128i","value":"pub fn zeroed_m128i() -> m128i","parent":null,"children":[],"decl_id":null,"docs":" All lanes zero.\n ```\n # use safe_arch::*;\n let a = zeroed_m128i();\n assert_eq!(u128::from(a), 0);\n ```\n","sig":null,"attributes":[{"value":"/ All lanes zero.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058927,"byte_end":7058946,"line_start":2286,"line_end":2286,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058947,"byte_end":7058954,"line_start":2287,"line_end":2287,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058955,"byte_end":7058978,"line_start":2288,"line_end":2288,"column_start":1,"column_end":24}},{"value":"/ let a = zeroed_m128i();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7058979,"byte_end":7059006,"line_start":2289,"line_end":2289,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(u128::from(a), 0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059007,"byte_end":7059040,"line_start":2290,"line_end":2290,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059041,"byte_end":7059048,"line_start":2291,"line_end":2291,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059049,"byte_end":7059060,"line_start":2292,"line_end":2292,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059061,"byte_end":7059078,"line_start":2293,"line_end":2293,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":755},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059435,"byte_end":7059447,"line_start":2308,"line_end":2308,"column_start":8,"column_end":20},"name":"zeroed_m128d","qualname":"::x86_x64::sse2::zeroed_m128d","value":"pub fn zeroed_m128d() -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Both lanes zero.\n ```\n # use safe_arch::*;\n let a = zeroed_m128d();\n assert_eq!(a.to_array(), [0.0, 0.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Both lanes zero.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059211,"byte_end":7059231,"line_start":2299,"line_end":2299,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059232,"byte_end":7059239,"line_start":2300,"line_end":2300,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059240,"byte_end":7059263,"line_start":2301,"line_end":2301,"column_start":1,"column_end":24}},{"value":"/ let a = zeroed_m128d();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059264,"byte_end":7059291,"line_start":2302,"line_end":2302,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(a.to_array(), [0.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059292,"byte_end":7059333,"line_start":2303,"line_end":2303,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059334,"byte_end":7059341,"line_start":2304,"line_end":2304,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059342,"byte_end":7059353,"line_start":2305,"line_end":2305,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7059354,"byte_end":7059371,"line_start":2306,"line_end":2306,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":760},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064138,"byte_end":7064155,"line_start":2440,"line_end":2440,"column_start":8,"column_end":25},"name":"shl_all_u16_m128i","qualname":"::x86_x64::sse2::shl_all_u16_m128i","value":"pub fn shl_all_u16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift all `u16` lanes to the left by the `count` in the lower `u64` lane.","sig":null,"attributes":[{"value":"/ Shift all `u16` lanes to the left by the `count` in the lower `u64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063649,"byte_end":7063726,"line_start":2424,"line_end":2424,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063727,"byte_end":7063730,"line_start":2425,"line_end":2425,"column_start":1,"column_end":4}},{"value":"/ New bits are 0s.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063731,"byte_end":7063751,"line_start":2426,"line_end":2426,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063752,"byte_end":7063759,"line_start":2427,"line_end":2427,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063760,"byte_end":7063783,"line_start":2428,"line_end":2428,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u16, 2, 3, 4, 1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063784,"byte_end":7063838,"line_start":2429,"line_end":2429,"column_start":1,"column_end":55}},{"value":"/ let b = m128i::from([3_u64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063839,"byte_end":7063875,"line_start":2430,"line_end":2430,"column_start":1,"column_end":37}},{"value":"/ let c: [u16; 8] = shl_all_u16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063876,"byte_end":7063929,"line_start":2431,"line_end":2431,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063930,"byte_end":7063945,"line_start":2432,"line_end":2432,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063946,"byte_end":7063954,"line_start":2433,"line_end":2433,"column_start":1,"column_end":9}},{"value":"/   [1_u16 << 3, 2 << 3, 3 << 3, 4 << 3, 1 << 3, 2 << 3, 3 << 3, 4 << 3]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7063955,"byte_end":7064029,"line_start":2434,"line_end":2434,"column_start":1,"column_end":75}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064030,"byte_end":7064036,"line_start":2435,"line_end":2435,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064037,"byte_end":7064044,"line_start":2436,"line_end":2436,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064045,"byte_end":7064056,"line_start":2437,"line_end":2437,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064057,"byte_end":7064074,"line_start":2438,"line_end":2438,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":761},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064665,"byte_end":7064682,"line_start":2457,"line_end":2457,"column_start":8,"column_end":25},"name":"shl_all_u32_m128i","qualname":"::x86_x64::sse2::shl_all_u32_m128i","value":"pub fn shl_all_u32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift all `u32` lanes to the left by the `count` in the lower `u64` lane.","sig":null,"attributes":[{"value":"/ Shift all `u32` lanes to the left by the `count` in the lower `u64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064242,"byte_end":7064319,"line_start":2444,"line_end":2444,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064320,"byte_end":7064323,"line_start":2445,"line_end":2445,"column_start":1,"column_end":4}},{"value":"/ New bits are 0s.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064324,"byte_end":7064344,"line_start":2446,"line_end":2446,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064345,"byte_end":7064352,"line_start":2447,"line_end":2447,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064353,"byte_end":7064376,"line_start":2448,"line_end":2448,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u32, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064377,"byte_end":7064419,"line_start":2449,"line_end":2449,"column_start":1,"column_end":43}},{"value":"/ let b = m128i::from([3_u64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064420,"byte_end":7064456,"line_start":2450,"line_end":2450,"column_start":1,"column_end":37}},{"value":"/ let c: [u32; 4] = shl_all_u32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064457,"byte_end":7064510,"line_start":2451,"line_end":2451,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [1 << 3, 2 << 3, 3 << 3, 4 << 3]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064511,"byte_end":7064563,"line_start":2452,"line_end":2452,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064564,"byte_end":7064571,"line_start":2453,"line_end":2453,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064572,"byte_end":7064583,"line_start":2454,"line_end":2454,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064584,"byte_end":7064601,"line_start":2455,"line_end":2455,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":762},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7065170,"byte_end":7065187,"line_start":2474,"line_end":2474,"column_start":8,"column_end":25},"name":"shl_all_u64_m128i","qualname":"::x86_x64::sse2::shl_all_u64_m128i","value":"pub fn shl_all_u64_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift all `u64` lanes to the left by the `count` in the lower `u64` lane.","sig":null,"attributes":[{"value":"/ Shift all `u64` lanes to the left by the `count` in the lower `u64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064769,"byte_end":7064846,"line_start":2461,"line_end":2461,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064847,"byte_end":7064850,"line_start":2462,"line_end":2462,"column_start":1,"column_end":4}},{"value":"/ New bits are 0s.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064851,"byte_end":7064871,"line_start":2463,"line_end":2463,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064872,"byte_end":7064879,"line_start":2464,"line_end":2464,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064880,"byte_end":7064903,"line_start":2465,"line_end":2465,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u64, 2]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064904,"byte_end":7064940,"line_start":2466,"line_end":2466,"column_start":1,"column_end":37}},{"value":"/ let b = m128i::from([3_u64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064941,"byte_end":7064977,"line_start":2467,"line_end":2467,"column_start":1,"column_end":37}},{"value":"/ let c: [u64; 2] = shl_all_u64_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7064978,"byte_end":7065031,"line_start":2468,"line_end":2468,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [1 << 3, 2 << 3]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7065032,"byte_end":7065068,"line_start":2469,"line_end":2469,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7065069,"byte_end":7065076,"line_start":2470,"line_end":2470,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7065077,"byte_end":7065088,"line_start":2471,"line_end":2471,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7065089,"byte_end":7065106,"line_start":2472,"line_end":2472,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":766},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067525,"byte_end":7067535,"line_start":2554,"line_end":2554,"column_start":8,"column_end":18},"name":"sqrt_m128d","qualname":"::x86_x64::sse2::sqrt_m128d","value":"pub fn sqrt_m128d(m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `sqrt(a)`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([25.0, 16.0]);\n let b = sqrt_m128d(a).to_array();\n assert_eq!(b, [5.0, 4.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `sqrt(a)`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067254,"byte_end":7067277,"line_start":2544,"line_end":2544,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067278,"byte_end":7067285,"line_start":2545,"line_end":2545,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067286,"byte_end":7067309,"line_start":2546,"line_end":2546,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([25.0, 16.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067310,"byte_end":7067354,"line_start":2547,"line_end":2547,"column_start":1,"column_end":45}},{"value":"/ let b = sqrt_m128d(a).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067355,"byte_end":7067392,"line_start":2548,"line_end":2548,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(b, [5.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067393,"byte_end":7067423,"line_start":2549,"line_end":2549,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067424,"byte_end":7067431,"line_start":2550,"line_end":2550,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067432,"byte_end":7067443,"line_start":2551,"line_end":2551,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067444,"byte_end":7067461,"line_start":2552,"line_end":2552,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067949,"byte_end":7067961,"line_start":2569,"line_end":2569,"column_start":8,"column_end":20},"name":"sqrt_m128d_s","qualname":"::x86_x64::sse2::sqrt_m128d_s","value":"pub fn sqrt_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Low lane `sqrt(b)`, upper lane is unchanged from `a`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.0]);\n let b = m128d::from_array([25.0, 4.0]);\n let c = sqrt_m128d_s(a, b);\n assert_eq!(c.to_array(), [5.0, 2.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Low lane `sqrt(b)`, upper lane is unchanged from `a`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067597,"byte_end":7067654,"line_start":2558,"line_end":2558,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067655,"byte_end":7067662,"line_start":2559,"line_end":2559,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067663,"byte_end":7067686,"line_start":2560,"line_end":2560,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067687,"byte_end":7067729,"line_start":2561,"line_end":2561,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([25.0, 4.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067730,"byte_end":7067773,"line_start":2562,"line_end":2562,"column_start":1,"column_end":44}},{"value":"/ let c = sqrt_m128d_s(a, b);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067774,"byte_end":7067805,"line_start":2563,"line_end":2563,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(c.to_array(), [5.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067806,"byte_end":7067847,"line_start":2564,"line_end":2564,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067848,"byte_end":7067855,"line_start":2565,"line_end":2565,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067856,"byte_end":7067867,"line_start":2566,"line_end":2566,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7067868,"byte_end":7067885,"line_start":2567,"line_end":2567,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":768},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068546,"byte_end":7068563,"line_start":2589,"line_end":2589,"column_start":8,"column_end":25},"name":"shr_all_i16_m128i","qualname":"::x86_x64::sse2::shr_all_i16_m128i","value":"pub fn shr_all_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift each `i16` lane to the right by the `count` in the lower `i64` lane.","sig":null,"attributes":[{"value":"/ Shift each `i16` lane to the right by the `count` in the lower `i64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068038,"byte_end":7068116,"line_start":2573,"line_end":2573,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068117,"byte_end":7068120,"line_start":2574,"line_end":2574,"column_start":1,"column_end":4}},{"value":"/ New bits are the sign bit.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068121,"byte_end":7068151,"line_start":2575,"line_end":2575,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068152,"byte_end":7068159,"line_start":2576,"line_end":2576,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068160,"byte_end":7068183,"line_start":2577,"line_end":2577,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068184,"byte_end":7068242,"line_start":2578,"line_end":2578,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([3_i64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068243,"byte_end":7068279,"line_start":2579,"line_end":2579,"column_start":1,"column_end":37}},{"value":"/ let c: [i16; 8] = shr_all_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068280,"byte_end":7068333,"line_start":2580,"line_end":2580,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068334,"byte_end":7068349,"line_start":2581,"line_end":2581,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068350,"byte_end":7068358,"line_start":2582,"line_end":2582,"column_start":1,"column_end":9}},{"value":"/   [1_i16 >> 3, 2 >> 3, 3 >> 3, 4 >> 3, -1 >> 3, -2 >> 3, -3 >> 3, -4 >> 3]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068359,"byte_end":7068437,"line_start":2583,"line_end":2583,"column_start":1,"column_end":79}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068438,"byte_end":7068444,"line_start":2584,"line_end":2584,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068445,"byte_end":7068452,"line_start":2585,"line_end":2585,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068453,"byte_end":7068464,"line_start":2586,"line_end":2586,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068465,"byte_end":7068482,"line_start":2587,"line_end":2587,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":769},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7069088,"byte_end":7069105,"line_start":2606,"line_end":2606,"column_start":8,"column_end":25},"name":"shr_all_i32_m128i","qualname":"::x86_x64::sse2::shr_all_i32_m128i","value":"pub fn shr_all_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift each `i32` lane to the right by the `count` in the lower `i64` lane.","sig":null,"attributes":[{"value":"/ Shift each `i32` lane to the right by the `count` in the lower `i64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068650,"byte_end":7068728,"line_start":2593,"line_end":2593,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068729,"byte_end":7068732,"line_start":2594,"line_end":2594,"column_start":1,"column_end":4}},{"value":"/ New bits are the sign bit.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068733,"byte_end":7068763,"line_start":2595,"line_end":2595,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068764,"byte_end":7068771,"line_start":2596,"line_end":2596,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068772,"byte_end":7068795,"line_start":2597,"line_end":2597,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i32, 2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068796,"byte_end":7068840,"line_start":2598,"line_end":2598,"column_start":1,"column_end":45}},{"value":"/ let b = m128i::from([3_i64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068841,"byte_end":7068877,"line_start":2599,"line_end":2599,"column_start":1,"column_end":37}},{"value":"/ let c: [i32; 4] = shr_all_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068878,"byte_end":7068931,"line_start":2600,"line_end":2600,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [1 >> 3, 2 >> 3, -3 >> 3, -4 >> 3]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068932,"byte_end":7068986,"line_start":2601,"line_end":2601,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068987,"byte_end":7068994,"line_start":2602,"line_end":2602,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7068995,"byte_end":7069006,"line_start":2603,"line_end":2603,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7069007,"byte_end":7069024,"line_start":2604,"line_end":2604,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":772},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071186,"byte_end":7071203,"line_start":2683,"line_end":2683,"column_start":8,"column_end":25},"name":"shr_all_u16_m128i","qualname":"::x86_x64::sse2::shr_all_u16_m128i","value":"pub fn shr_all_u16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift each `u16` lane to the right by the `count` in the lower `u64` lane.","sig":null,"attributes":[{"value":"/ Shift each `u16` lane to the right by the `count` in the lower `u64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070628,"byte_end":7070706,"line_start":2659,"line_end":2659,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070707,"byte_end":7070710,"line_start":2660,"line_end":2660,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070711,"byte_end":7070718,"line_start":2661,"line_end":2661,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070719,"byte_end":7070742,"line_start":2662,"line_end":2662,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u16, 2, 3, 4, 100, 200, 300, 400]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070743,"byte_end":7070805,"line_start":2663,"line_end":2663,"column_start":1,"column_end":63}},{"value":"/ let b = m128i::from([3_u64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070806,"byte_end":7070842,"line_start":2664,"line_end":2664,"column_start":1,"column_end":37}},{"value":"/ let c: [u16; 8] = shr_all_u16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070843,"byte_end":7070896,"line_start":2665,"line_end":2665,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070897,"byte_end":7070912,"line_start":2666,"line_end":2666,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070913,"byte_end":7070921,"line_start":2667,"line_end":2667,"column_start":1,"column_end":9}},{"value":"/   [","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070922,"byte_end":7070929,"line_start":2668,"line_end":2668,"column_start":1,"column_end":8}},{"value":"/     1_u16 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070930,"byte_end":7070949,"line_start":2669,"line_end":2669,"column_start":1,"column_end":20}},{"value":"/     2 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070950,"byte_end":7070965,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"/     3 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070966,"byte_end":7070981,"line_start":2671,"line_end":2671,"column_start":1,"column_end":16}},{"value":"/     4 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070982,"byte_end":7070997,"line_start":2672,"line_end":2672,"column_start":1,"column_end":16}},{"value":"/     100 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7070998,"byte_end":7071015,"line_start":2673,"line_end":2673,"column_start":1,"column_end":18}},{"value":"/     200 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071016,"byte_end":7071033,"line_start":2674,"line_end":2674,"column_start":1,"column_end":18}},{"value":"/     300 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071034,"byte_end":7071051,"line_start":2675,"line_end":2675,"column_start":1,"column_end":18}},{"value":"/     400 >> 3,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071052,"byte_end":7071069,"line_start":2676,"line_end":2676,"column_start":1,"column_end":18}},{"value":"/   ]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071070,"byte_end":7071077,"line_start":2677,"line_end":2677,"column_start":1,"column_end":8}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071078,"byte_end":7071084,"line_start":2678,"line_end":2678,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071085,"byte_end":7071092,"line_start":2679,"line_end":2679,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071093,"byte_end":7071104,"line_start":2680,"line_end":2680,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071105,"byte_end":7071122,"line_start":2681,"line_end":2681,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":773},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071702,"byte_end":7071719,"line_start":2699,"line_end":2699,"column_start":8,"column_end":25},"name":"shr_all_u32_m128i","qualname":"::x86_x64::sse2::shr_all_u32_m128i","value":"pub fn shr_all_u32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift each `u32` lane to the right by the `count` in the lower `u64` lane.","sig":null,"attributes":[{"value":"/ Shift each `u32` lane to the right by the `count` in the lower `u64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071290,"byte_end":7071368,"line_start":2687,"line_end":2687,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071369,"byte_end":7071372,"line_start":2688,"line_end":2688,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071373,"byte_end":7071380,"line_start":2689,"line_end":2689,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071381,"byte_end":7071404,"line_start":2690,"line_end":2690,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u32, 2, 300, 400]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071405,"byte_end":7071451,"line_start":2691,"line_end":2691,"column_start":1,"column_end":47}},{"value":"/ let b = m128i::from([3_u64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071452,"byte_end":7071488,"line_start":2692,"line_end":2692,"column_start":1,"column_end":37}},{"value":"/ let c: [u32; 4] = shr_all_u32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071489,"byte_end":7071542,"line_start":2693,"line_end":2693,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [1 >> 3, 2 >> 3, 300 >> 3, 400 >> 3,]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071543,"byte_end":7071600,"line_start":2694,"line_end":2694,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071601,"byte_end":7071608,"line_start":2695,"line_end":2695,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071609,"byte_end":7071620,"line_start":2696,"line_end":2696,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071621,"byte_end":7071638,"line_start":2697,"line_end":2697,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":774},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7072210,"byte_end":7072227,"line_start":2716,"line_end":2716,"column_start":8,"column_end":25},"name":"shr_all_u64_m128i","qualname":"::x86_x64::sse2::shr_all_u64_m128i","value":"pub fn shr_all_u64_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shift each `u64` lane to the right by the `count` in the lower `u64` lane.","sig":null,"attributes":[{"value":"/ Shift each `u64` lane to the right by the `count` in the lower `u64` lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071806,"byte_end":7071884,"line_start":2703,"line_end":2703,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071885,"byte_end":7071888,"line_start":2704,"line_end":2704,"column_start":1,"column_end":4}},{"value":"/ New bits are 0s.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071889,"byte_end":7071909,"line_start":2705,"line_end":2705,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071910,"byte_end":7071917,"line_start":2706,"line_end":2706,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071918,"byte_end":7071941,"line_start":2707,"line_end":2707,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_u64, 56]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071942,"byte_end":7071979,"line_start":2708,"line_end":2708,"column_start":1,"column_end":38}},{"value":"/ let b = m128i::from([3_u64, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7071980,"byte_end":7072016,"line_start":2709,"line_end":2709,"column_start":1,"column_end":37}},{"value":"/ let c: [u64; 2] = shr_all_u64_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7072017,"byte_end":7072070,"line_start":2710,"line_end":2710,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(c, [1 >> 3, 56 >> 3]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7072071,"byte_end":7072108,"line_start":2711,"line_end":2711,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7072109,"byte_end":7072116,"line_start":2712,"line_end":2712,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7072117,"byte_end":7072128,"line_start":2713,"line_end":2713,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7072129,"byte_end":7072146,"line_start":2714,"line_end":2714,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074987,"byte_end":7074998,"line_start":2814,"line_end":2814,"column_start":8,"column_end":19},"name":"store_m128d","qualname":"::x86_x64::sse2::store_m128d","value":"pub fn store_m128d(&mut m128d, m128d)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let mut b = zeroed_m128d();\n store_m128d(&mut b, a);\n let c = b.to_array();\n assert_eq!(c, [10.0, 12.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074657,"byte_end":7074701,"line_start":2803,"line_end":2803,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074702,"byte_end":7074709,"line_start":2804,"line_end":2804,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074710,"byte_end":7074733,"line_start":2805,"line_end":2805,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074734,"byte_end":7074778,"line_start":2806,"line_end":2806,"column_start":1,"column_end":45}},{"value":"/ let mut b = zeroed_m128d();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074779,"byte_end":7074810,"line_start":2807,"line_end":2807,"column_start":1,"column_end":32}},{"value":"/ store_m128d(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074811,"byte_end":7074838,"line_start":2808,"line_end":2808,"column_start":1,"column_end":28}},{"value":"/ let c = b.to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074839,"byte_end":7074864,"line_start":2809,"line_end":2809,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(c, [10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074865,"byte_end":7074897,"line_start":2810,"line_end":2810,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074898,"byte_end":7074905,"line_start":2811,"line_end":2811,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7074906,"byte_end":7074923,"line_start":2812,"line_end":2812,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":779},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075385,"byte_end":7075398,"line_start":2828,"line_end":2828,"column_start":8,"column_end":21},"name":"store_m128d_s","qualname":"::x86_x64::sse2::store_m128d_s","value":"pub fn store_m128d_s(&mut f64, m128d)","parent":null,"children":[],"decl_id":null,"docs":" Stores the low lane value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let mut f = 0.0;\n store_m128d_s(&mut f, a);\n assert_eq!(f, 10.0);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the low lane value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075089,"byte_end":7075142,"line_start":2818,"line_end":2818,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075143,"byte_end":7075150,"line_start":2819,"line_end":2819,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075151,"byte_end":7075174,"line_start":2820,"line_end":2820,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075175,"byte_end":7075219,"line_start":2821,"line_end":2821,"column_start":1,"column_end":45}},{"value":"/ let mut f = 0.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075220,"byte_end":7075240,"line_start":2822,"line_end":2822,"column_start":1,"column_end":21}},{"value":"/ store_m128d_s(&mut f, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075241,"byte_end":7075270,"line_start":2823,"line_end":2823,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(f, 10.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075271,"byte_end":7075295,"line_start":2824,"line_end":2824,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075296,"byte_end":7075303,"line_start":2825,"line_end":2825,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075304,"byte_end":7075321,"line_start":2826,"line_end":2826,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":780},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075831,"byte_end":7075848,"line_start":2843,"line_end":2843,"column_start":8,"column_end":25},"name":"store_splat_m128d","qualname":"::x86_x64::sse2::store_splat_m128d","value":"pub fn store_splat_m128d(&mut m128d, m128d)","parent":null,"children":[],"decl_id":null,"docs":" Stores the low lane value to all lanes of the reference given.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let mut b = zeroed_m128d();\n store_splat_m128d(&mut b, a);\n let c = b.to_array();\n assert_eq!(c, [10.0, 10.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the low lane value to all lanes of the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075473,"byte_end":7075539,"line_start":2832,"line_end":2832,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075540,"byte_end":7075547,"line_start":2833,"line_end":2833,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075548,"byte_end":7075571,"line_start":2834,"line_end":2834,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075572,"byte_end":7075616,"line_start":2835,"line_end":2835,"column_start":1,"column_end":45}},{"value":"/ let mut b = zeroed_m128d();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075617,"byte_end":7075648,"line_start":2836,"line_end":2836,"column_start":1,"column_end":32}},{"value":"/ store_splat_m128d(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075649,"byte_end":7075682,"line_start":2837,"line_end":2837,"column_start":1,"column_end":34}},{"value":"/ let c = b.to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075683,"byte_end":7075708,"line_start":2838,"line_end":2838,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(c, [10.0, 10.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075709,"byte_end":7075741,"line_start":2839,"line_end":2839,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075742,"byte_end":7075749,"line_start":2840,"line_end":2840,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075750,"byte_end":7075767,"line_start":2841,"line_end":2841,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076270,"byte_end":7076281,"line_start":2858,"line_end":2858,"column_start":8,"column_end":19},"name":"store_m128i","qualname":"::x86_x64::sse2::store_m128i","value":"pub fn store_m128i(&mut m128i, m128i)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let mut b = zeroed_m128i();\n store_m128i(&mut b, a);\n let c: [i32; 4] = b.into();\n assert_eq!(c, [1, 2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075940,"byte_end":7075984,"line_start":2847,"line_end":2847,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075985,"byte_end":7075992,"line_start":2848,"line_end":2848,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7075993,"byte_end":7076016,"line_start":2849,"line_end":2849,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076017,"byte_end":7076055,"line_start":2850,"line_end":2850,"column_start":1,"column_end":39}},{"value":"/ let mut b = zeroed_m128i();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076056,"byte_end":7076087,"line_start":2851,"line_end":2851,"column_start":1,"column_end":32}},{"value":"/ store_m128i(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076088,"byte_end":7076115,"line_start":2852,"line_end":2852,"column_start":1,"column_end":28}},{"value":"/ let c: [i32; 4] = b.into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076116,"byte_end":7076147,"line_start":2853,"line_end":2853,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(c, [1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076148,"byte_end":7076180,"line_start":2854,"line_end":2854,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076181,"byte_end":7076188,"line_start":2855,"line_end":2855,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076189,"byte_end":7076206,"line_start":2856,"line_end":2856,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":782},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076658,"byte_end":7076676,"line_start":2872,"line_end":2872,"column_start":8,"column_end":26},"name":"store_high_m128d_s","qualname":"::x86_x64::sse2::store_high_m128d_s","value":"pub fn store_high_m128d_s(&mut f64, m128d)","parent":null,"children":[],"decl_id":null,"docs":" Stores the high lane value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let mut f = 0.0;\n store_high_m128d_s(&mut f, a);\n assert_eq!(f, 12.0);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the high lane value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076356,"byte_end":7076410,"line_start":2862,"line_end":2862,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076411,"byte_end":7076418,"line_start":2863,"line_end":2863,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076419,"byte_end":7076442,"line_start":2864,"line_end":2864,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076443,"byte_end":7076487,"line_start":2865,"line_end":2865,"column_start":1,"column_end":45}},{"value":"/ let mut f = 0.0;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076488,"byte_end":7076508,"line_start":2866,"line_end":2866,"column_start":1,"column_end":21}},{"value":"/ store_high_m128d_s(&mut f, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076509,"byte_end":7076543,"line_start":2867,"line_end":2867,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(f, 12.0);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076544,"byte_end":7076568,"line_start":2868,"line_end":2868,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076569,"byte_end":7076576,"line_start":2869,"line_end":2869,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076577,"byte_end":7076594,"line_start":2870,"line_end":2870,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":783},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077075,"byte_end":7077092,"line_start":2887,"line_end":2887,"column_start":8,"column_end":25},"name":"store_i64_m128i_s","qualname":"::x86_x64::sse2::store_i64_m128i_s","value":"pub fn store_i64_m128i_s(&mut i64, m128i)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i64, 2]);\n let mut b = 0_i64;\n store_i64_m128i_s(&mut b, a);\n assert_eq!(b, 1_i64);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076752,"byte_end":7076796,"line_start":2876,"line_end":2876,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076797,"byte_end":7076804,"line_start":2877,"line_end":2877,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076805,"byte_end":7076828,"line_start":2878,"line_end":2878,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i64, 2]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076829,"byte_end":7076865,"line_start":2879,"line_end":2879,"column_start":1,"column_end":37}},{"value":"/ let mut b = 0_i64;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076866,"byte_end":7076888,"line_start":2880,"line_end":2880,"column_start":1,"column_end":23}},{"value":"/ store_i64_m128i_s(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076889,"byte_end":7076922,"line_start":2881,"line_end":2881,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(b, 1_i64);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076923,"byte_end":7076948,"line_start":2882,"line_end":2882,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076949,"byte_end":7076956,"line_start":2883,"line_end":2883,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076957,"byte_end":7076974,"line_start":2884,"line_end":2884,"column_start":1,"column_end":18}},{"value":"allow(clippy :: cast_ptr_alignment)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7076975,"byte_end":7077011,"line_start":2885,"line_end":2885,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077526,"byte_end":7077546,"line_start":2902,"line_end":2902,"column_start":8,"column_end":28},"name":"store_reversed_m128d","qualname":"::x86_x64::sse2::store_reversed_m128d","value":"pub fn store_reversed_m128d(&mut m128d, m128d)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let mut b = zeroed_m128d();\n store_reversed_m128d(&mut b, a);\n let c = b.to_array();\n assert_eq!(c, [12.0, 10.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077187,"byte_end":7077231,"line_start":2891,"line_end":2891,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077232,"byte_end":7077239,"line_start":2892,"line_end":2892,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077240,"byte_end":7077263,"line_start":2893,"line_end":2893,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077264,"byte_end":7077308,"line_start":2894,"line_end":2894,"column_start":1,"column_end":45}},{"value":"/ let mut b = zeroed_m128d();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077309,"byte_end":7077340,"line_start":2895,"line_end":2895,"column_start":1,"column_end":32}},{"value":"/ store_reversed_m128d(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077341,"byte_end":7077377,"line_start":2896,"line_end":2896,"column_start":1,"column_end":37}},{"value":"/ let c = b.to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077378,"byte_end":7077403,"line_start":2897,"line_end":2897,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(c, [12.0, 10.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077404,"byte_end":7077436,"line_start":2898,"line_end":2898,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077437,"byte_end":7077444,"line_start":2899,"line_end":2899,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077445,"byte_end":7077462,"line_start":2900,"line_end":2900,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077948,"byte_end":7077969,"line_start":2916,"line_end":2916,"column_start":8,"column_end":29},"name":"store_unaligned_m128d","qualname":"::x86_x64::sse2::store_unaligned_m128d","value":"pub fn store_unaligned_m128d(&mut [f64; ], m128d)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 12.0]);\n let mut b = [0.0, 0.0];\n store_unaligned_m128d(&mut b, a);\n assert_eq!(b, [10.0, 12.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077638,"byte_end":7077682,"line_start":2906,"line_end":2906,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077683,"byte_end":7077690,"line_start":2907,"line_end":2907,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077691,"byte_end":7077714,"line_start":2908,"line_end":2908,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077715,"byte_end":7077759,"line_start":2909,"line_end":2909,"column_start":1,"column_end":45}},{"value":"/ let mut b = [0.0, 0.0];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077760,"byte_end":7077787,"line_start":2910,"line_end":2910,"column_start":1,"column_end":28}},{"value":"/ store_unaligned_m128d(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077788,"byte_end":7077825,"line_start":2911,"line_end":2911,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(b, [10.0, 12.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077826,"byte_end":7077858,"line_start":2912,"line_end":2912,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077859,"byte_end":7077866,"line_start":2913,"line_end":2913,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7077867,"byte_end":7077884,"line_start":2914,"line_end":2914,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078451,"byte_end":7078472,"line_start":2931,"line_end":2931,"column_start":8,"column_end":29},"name":"store_unaligned_m128i","qualname":"::x86_x64::sse2::store_unaligned_m128i","value":"pub fn store_unaligned_m128i(&mut [u8; ], m128i)","parent":null,"children":[],"decl_id":null,"docs":" Stores the value to the reference given.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let mut b = [0_u8; 16];\n store_unaligned_m128i(&mut b, a);\n assert_eq!(b, [0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n ```\n","sig":null,"attributes":[{"value":"/ Stores the value to the reference given.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078051,"byte_end":7078095,"line_start":2920,"line_end":2920,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078096,"byte_end":7078103,"line_start":2921,"line_end":2921,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078104,"byte_end":7078127,"line_start":2922,"line_end":2922,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078128,"byte_end":7078139,"line_start":2923,"line_end":2923,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078140,"byte_end":7078217,"line_start":2924,"line_end":2924,"column_start":1,"column_end":78}},{"value":"/ let mut b = [0_u8; 16];","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078218,"byte_end":7078245,"line_start":2925,"line_end":2925,"column_start":1,"column_end":28}},{"value":"/ store_unaligned_m128i(&mut b, a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078246,"byte_end":7078283,"line_start":2926,"line_end":2926,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(b, [0_u8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078284,"byte_end":7078361,"line_start":2927,"line_end":2927,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078362,"byte_end":7078369,"line_start":2928,"line_end":2928,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078370,"byte_end":7078387,"line_start":2929,"line_end":2929,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079090,"byte_end":7079102,"line_start":2952,"line_end":2952,"column_start":8,"column_end":20},"name":"sub_i8_m128i","qualname":"::x86_x64::sse2::sub_i8_m128i","value":"pub fn sub_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a - b` with lanes as `i8`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b = m128i::from([\n   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,\n ]);\n let c: [i8; 16] = sub_i8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [0, -10, 0, -10, 0, -10, 0, -10, 0, -10, 30, -10, -10, 36, -10, -112]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a - b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078564,"byte_end":7078604,"line_start":2935,"line_end":2935,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078605,"byte_end":7078612,"line_start":2936,"line_end":2936,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078613,"byte_end":7078636,"line_start":2937,"line_end":2937,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078637,"byte_end":7078648,"line_start":2938,"line_end":2938,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078649,"byte_end":7078726,"line_start":2939,"line_end":2939,"column_start":1,"column_end":78}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078727,"byte_end":7078752,"line_start":2940,"line_end":2940,"column_start":1,"column_end":26}},{"value":"/   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078753,"byte_end":7078823,"line_start":2941,"line_end":2941,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078824,"byte_end":7078831,"line_start":2942,"line_end":2942,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = sub_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078832,"byte_end":7078880,"line_start":2943,"line_end":2943,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078881,"byte_end":7078896,"line_start":2944,"line_end":2944,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078897,"byte_end":7078905,"line_start":2945,"line_end":2945,"column_start":1,"column_end":9}},{"value":"/   [0, -10, 0, -10, 0, -10, 0, -10, 0, -10, 30, -10, -10, 36, -10, -112]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078906,"byte_end":7078981,"line_start":2946,"line_end":2946,"column_start":1,"column_end":76}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078982,"byte_end":7078988,"line_start":2947,"line_end":2947,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078989,"byte_end":7078996,"line_start":2948,"line_end":2948,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7078997,"byte_end":7079008,"line_start":2949,"line_end":2949,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079009,"byte_end":7079026,"line_start":2950,"line_end":2950,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":790},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079588,"byte_end":7079601,"line_start":2967,"line_end":2967,"column_start":8,"column_end":21},"name":"sub_i16_m128i","qualname":"::x86_x64::sse2::sub_i16_m128i","value":"pub fn sub_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a - b` with lanes as `i16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([51_i16, 61, 71, 81, -15, -26, -37, 48]);\n let c: [i16; 8] = sub_i16_m128i(a, b).into();\n assert_eq!(c, [-50, -59, -68, -77, 14, 24, 34, -52]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a - b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079180,"byte_end":7079221,"line_start":2956,"line_end":2956,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079222,"byte_end":7079229,"line_start":2957,"line_end":2957,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079230,"byte_end":7079253,"line_start":2958,"line_end":2958,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079254,"byte_end":7079312,"line_start":2959,"line_end":2959,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([51_i16, 61, 71, 81, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079313,"byte_end":7079378,"line_start":2960,"line_end":2960,"column_start":1,"column_end":66}},{"value":"/ let c: [i16; 8] = sub_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079379,"byte_end":7079428,"line_start":2961,"line_end":2961,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [-50, -59, -68, -77, 14, 24, 34, -52]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079429,"byte_end":7079486,"line_start":2962,"line_end":2962,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079487,"byte_end":7079494,"line_start":2963,"line_end":2963,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079495,"byte_end":7079506,"line_start":2964,"line_end":2964,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079507,"byte_end":7079524,"line_start":2965,"line_end":2965,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":791},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080028,"byte_end":7080041,"line_start":2982,"line_end":2982,"column_start":8,"column_end":21},"name":"sub_i32_m128i","qualname":"::x86_x64::sse2::sub_i32_m128i","value":"pub fn sub_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a - b` with lanes as `i32`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = m128i::from([50, 60, 70, 87]);\n let c: [i32; 4] = sub_i32_m128i(a, b).into();\n assert_eq!(c, [-49, -58, -67, -83]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a - b` with lanes as `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079680,"byte_end":7079721,"line_start":2971,"line_end":2971,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079722,"byte_end":7079729,"line_start":2972,"line_end":2972,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079730,"byte_end":7079753,"line_start":2973,"line_end":2973,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079754,"byte_end":7079792,"line_start":2974,"line_end":2974,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([50, 60, 70, 87]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079793,"byte_end":7079835,"line_start":2975,"line_end":2975,"column_start":1,"column_end":43}},{"value":"/ let c: [i32; 4] = sub_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079836,"byte_end":7079885,"line_start":2976,"line_end":2976,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [-49, -58, -67, -83]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079886,"byte_end":7079926,"line_start":2977,"line_end":2977,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079927,"byte_end":7079934,"line_start":2978,"line_end":2978,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079935,"byte_end":7079946,"line_start":2979,"line_end":2979,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7079947,"byte_end":7079964,"line_start":2980,"line_end":2980,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":792},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080456,"byte_end":7080469,"line_start":2997,"line_end":2997,"column_start":8,"column_end":21},"name":"sub_i64_m128i","qualname":"::x86_x64::sse2::sub_i64_m128i","value":"pub fn sub_i64_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a - b` with lanes as `i64`.\n ```\n # use safe_arch::*;\n let a = m128i::from([92_i64, 87]);\n let b = m128i::from([-9001_i64, 1]);\n let c: [i64; 2] = sub_i64_m128i(a, b).into();\n assert_eq!(c, [9093, 86]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a - b` with lanes as `i64`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080120,"byte_end":7080161,"line_start":2986,"line_end":2986,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080162,"byte_end":7080169,"line_start":2987,"line_end":2987,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080170,"byte_end":7080193,"line_start":2988,"line_end":2988,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([92_i64, 87]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080194,"byte_end":7080232,"line_start":2989,"line_end":2989,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([-9001_i64, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080233,"byte_end":7080273,"line_start":2990,"line_end":2990,"column_start":1,"column_end":41}},{"value":"/ let c: [i64; 2] = sub_i64_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080274,"byte_end":7080323,"line_start":2991,"line_end":2991,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [9093, 86]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080324,"byte_end":7080354,"line_start":2992,"line_end":2992,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080355,"byte_end":7080362,"line_start":2993,"line_end":2993,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080363,"byte_end":7080374,"line_start":2994,"line_end":2994,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080375,"byte_end":7080392,"line_start":2995,"line_end":2995,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080867,"byte_end":7080876,"line_start":3012,"line_end":3012,"column_start":8,"column_end":17},"name":"sub_m128d","qualname":"::x86_x64::sse2::sub_m128d","value":"pub fn sub_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lanewise `a - b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -6.0]);\n let c = sub_m128d(a, b).to_array();\n assert_eq!(c, [-8.0, 93.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise `a - b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080548,"byte_end":7080569,"line_start":3001,"line_end":3001,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080570,"byte_end":7080577,"line_start":3002,"line_end":3002,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080578,"byte_end":7080601,"line_start":3003,"line_end":3003,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080602,"byte_end":7080646,"line_start":3004,"line_end":3004,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080647,"byte_end":7080692,"line_start":3005,"line_end":3005,"column_start":1,"column_end":46}},{"value":"/ let c = sub_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080693,"byte_end":7080732,"line_start":3006,"line_end":3006,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(c, [-8.0, 93.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080733,"byte_end":7080765,"line_start":3007,"line_end":3007,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080766,"byte_end":7080773,"line_start":3008,"line_end":3008,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080774,"byte_end":7080785,"line_start":3009,"line_end":3009,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080786,"byte_end":7080803,"line_start":3010,"line_end":3010,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":794},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081299,"byte_end":7081310,"line_start":3027,"line_end":3027,"column_start":8,"column_end":19},"name":"sub_m128d_s","qualname":"::x86_x64::sse2::sub_m128d_s","value":"pub fn sub_m128d_s(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Lowest lane `a - b`, high lane unchanged.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -600.0]);\n let c = sub_m128d_s(a, b).to_array();\n assert_eq!(c, [-8.0, 87.5]);\n ```\n","sig":null,"attributes":[{"value":"/ Lowest lane `a - b`, high lane unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080952,"byte_end":7080997,"line_start":3016,"line_end":3016,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7080998,"byte_end":7081005,"line_start":3017,"line_end":3017,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081006,"byte_end":7081029,"line_start":3018,"line_end":3018,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081030,"byte_end":7081074,"line_start":3019,"line_end":3019,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -600.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081075,"byte_end":7081122,"line_start":3020,"line_end":3020,"column_start":1,"column_end":48}},{"value":"/ let c = sub_m128d_s(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081123,"byte_end":7081164,"line_start":3021,"line_end":3021,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [-8.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081165,"byte_end":7081197,"line_start":3022,"line_end":3022,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081198,"byte_end":7081205,"line_start":3023,"line_end":3023,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081206,"byte_end":7081217,"line_start":3024,"line_end":3024,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081218,"byte_end":7081235,"line_start":3025,"line_end":3025,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":795},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081939,"byte_end":7081962,"line_start":3048,"line_end":3048,"column_start":8,"column_end":31},"name":"sub_saturating_i8_m128i","qualname":"::x86_x64::sse2::sub_saturating_i8_m128i","value":"pub fn sub_saturating_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a - b` with lanes as `i8`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_i8, -128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -127]);\n let b = m128i::from([\n   0_i8, 1, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,\n ]);\n let c: [i8; 16] = sub_saturating_i8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [0, -128, 0, -10, 0, -10, 0, -10, 0, -10, 30, -10, -10, 36, -10, -128]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a - b` with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081386,"byte_end":7081437,"line_start":3031,"line_end":3031,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081438,"byte_end":7081445,"line_start":3032,"line_end":3032,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081446,"byte_end":7081469,"line_start":3033,"line_end":3033,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081470,"byte_end":7081481,"line_start":3034,"line_end":3034,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, -128, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -127]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081482,"byte_end":7081564,"line_start":3035,"line_end":3035,"column_start":1,"column_end":83}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081565,"byte_end":7081590,"line_start":3036,"line_end":3036,"column_start":1,"column_end":26}},{"value":"/   0_i8, 1, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081591,"byte_end":7081660,"line_start":3037,"line_end":3037,"column_start":1,"column_end":70}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081661,"byte_end":7081668,"line_start":3038,"line_end":3038,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = sub_saturating_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081669,"byte_end":7081728,"line_start":3039,"line_end":3039,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081729,"byte_end":7081744,"line_start":3040,"line_end":3040,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081745,"byte_end":7081753,"line_start":3041,"line_end":3041,"column_start":1,"column_end":9}},{"value":"/   [0, -128, 0, -10, 0, -10, 0, -10, 0, -10, 30, -10, -10, 36, -10, -128]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081754,"byte_end":7081830,"line_start":3042,"line_end":3042,"column_start":1,"column_end":77}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081831,"byte_end":7081837,"line_start":3043,"line_end":3043,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081838,"byte_end":7081845,"line_start":3044,"line_end":3044,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081846,"byte_end":7081857,"line_start":3045,"line_end":3045,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7081858,"byte_end":7081875,"line_start":3046,"line_end":3046,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":796},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082480,"byte_end":7082504,"line_start":3063,"line_end":3063,"column_start":8,"column_end":32},"name":"sub_saturating_i16_m128i","qualname":"::x86_x64::sse2::sub_saturating_i16_m128i","value":"pub fn sub_saturating_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a - b` with lanes as `i16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([51_i16, 61, 71, 81, i16::MAX, -26, -37, 48]);\n let c: [i16; 8] = sub_saturating_i16_m128i(a, b).into();\n assert_eq!(c, [-50, -59, -68, -77, -32768, 24, 34, -52]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a - b` with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082041,"byte_end":7082093,"line_start":3052,"line_end":3052,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082094,"byte_end":7082101,"line_start":3053,"line_end":3053,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082102,"byte_end":7082125,"line_start":3054,"line_end":3054,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082126,"byte_end":7082184,"line_start":3055,"line_end":3055,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([51_i16, 61, 71, 81, i16::MAX, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082185,"byte_end":7082255,"line_start":3056,"line_end":3056,"column_start":1,"column_end":71}},{"value":"/ let c: [i16; 8] = sub_saturating_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082256,"byte_end":7082316,"line_start":3057,"line_end":3057,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [-50, -59, -68, -77, -32768, 24, 34, -52]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082317,"byte_end":7082378,"line_start":3058,"line_end":3058,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082379,"byte_end":7082386,"line_start":3059,"line_end":3059,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082387,"byte_end":7082398,"line_start":3060,"line_end":3060,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082399,"byte_end":7082416,"line_start":3061,"line_end":3061,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":797},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083094,"byte_end":7083117,"line_start":3080,"line_end":3080,"column_start":8,"column_end":31},"name":"sub_saturating_u8_m128i","qualname":"::x86_x64::sse2::sub_saturating_u8_m128i","value":"pub fn sub_saturating_u8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a - b` with lanes as `u8`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([10_u8, 255, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255]);\n let b =\n   m128i::from([1_u8, 1, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127]);\n let c: [u8; 16] = sub_saturating_u8_m128i(a, b).into();\n assert_eq!(c, [9_u8, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a - b` with lanes as `u8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082584,"byte_end":7082635,"line_start":3067,"line_end":3067,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082636,"byte_end":7082643,"line_start":3068,"line_end":3068,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082644,"byte_end":7082667,"line_start":3069,"line_end":3069,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082668,"byte_end":7082679,"line_start":3070,"line_end":3070,"column_start":1,"column_end":12}},{"value":"/   m128i::from([10_u8, 255, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082680,"byte_end":7082761,"line_start":3071,"line_end":3071,"column_start":1,"column_end":82}},{"value":"/ let b =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082762,"byte_end":7082773,"line_start":3072,"line_end":3072,"column_start":1,"column_end":12}},{"value":"/   m128i::from([1_u8, 1, 2, 13, 4, 15, 6, 17, 8, 19, 20, 21, 22, 23, 24, 127]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082774,"byte_end":7082856,"line_start":3073,"line_end":3073,"column_start":1,"column_end":83}},{"value":"/ let c: [u8; 16] = sub_saturating_u8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082857,"byte_end":7082916,"line_start":3074,"line_end":3074,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(c, [9_u8, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082917,"byte_end":7082992,"line_start":3075,"line_end":3075,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7082993,"byte_end":7083000,"line_start":3076,"line_end":3076,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083001,"byte_end":7083012,"line_start":3077,"line_end":3077,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083013,"byte_end":7083030,"line_start":3078,"line_end":3078,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":798},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083641,"byte_end":7083665,"line_start":3095,"line_end":3095,"column_start":8,"column_end":32},"name":"sub_saturating_u16_m128i","qualname":"::x86_x64::sse2::sub_saturating_u16_m128i","value":"pub fn sub_saturating_u16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise saturating `a - b` with lanes as `u16`.\n ```\n # use safe_arch::*;\n let a = m128i::from([51_u16, 61, 3, 4, u16::MAX, 2, 3, u16::MAX]);\n let b = m128i::from([5_u16, 2, 71, 81, u16::MAX, 26, 37, u16::MIN]);\n let c: [u16; 8] = sub_saturating_u16_m128i(a, b).into();\n assert_eq!(c, [46, 59, 0, 0, 0, 0, 0, u16::MAX]);\n ```\n","sig":null,"attributes":[{"value":"/ Lanewise saturating `a - b` with lanes as `u16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083196,"byte_end":7083248,"line_start":3084,"line_end":3084,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083249,"byte_end":7083256,"line_start":3085,"line_end":3085,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083257,"byte_end":7083280,"line_start":3086,"line_end":3086,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([51_u16, 61, 3, 4, u16::MAX, 2, 3, u16::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083281,"byte_end":7083351,"line_start":3087,"line_end":3087,"column_start":1,"column_end":71}},{"value":"/ let b = m128i::from([5_u16, 2, 71, 81, u16::MAX, 26, 37, u16::MIN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083352,"byte_end":7083424,"line_start":3088,"line_end":3088,"column_start":1,"column_end":73}},{"value":"/ let c: [u16; 8] = sub_saturating_u16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083425,"byte_end":7083485,"line_start":3089,"line_end":3089,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [46, 59, 0, 0, 0, 0, 0, u16::MAX]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083486,"byte_end":7083539,"line_start":3090,"line_end":3090,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083540,"byte_end":7083547,"line_start":3091,"line_end":3091,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083548,"byte_end":7083559,"line_start":3092,"line_end":3092,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083560,"byte_end":7083577,"line_start":3093,"line_end":3093,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":799},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084291,"byte_end":7084311,"line_start":3116,"line_end":3116,"column_start":8,"column_end":28},"name":"unpack_high_i8_m128i","qualname":"::x86_x64::sse2::unpack_high_i8_m128i","value":"pub fn unpack_high_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave high `i8` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b = m128i::from([\n   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,\n ]);\n let c: [i8; 16] = unpack_high_i8_m128i(a, b).into();\n assert_eq!(\n   c,\n   [8, 8, 9, 19, 10, -20, 11, 21, 12, 22, 13, -23, 14, 24, 15, 127]\n );\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave high `i8` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083745,"byte_end":7083802,"line_start":3099,"line_end":3099,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083803,"byte_end":7083810,"line_start":3100,"line_end":3100,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083811,"byte_end":7083834,"line_start":3101,"line_end":3101,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083835,"byte_end":7083846,"line_start":3102,"line_end":3102,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083847,"byte_end":7083924,"line_start":3103,"line_end":3103,"column_start":1,"column_end":78}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083925,"byte_end":7083950,"line_start":3104,"line_end":3104,"column_start":1,"column_end":26}},{"value":"/   0_i8, 11, 2, 13, 4, 15, 6, 17, 8, 19, -20, 21, 22, -23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7083951,"byte_end":7084021,"line_start":3105,"line_end":3105,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084022,"byte_end":7084029,"line_start":3106,"line_end":3106,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = unpack_high_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084030,"byte_end":7084086,"line_start":3107,"line_end":3107,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084087,"byte_end":7084102,"line_start":3108,"line_end":3108,"column_start":1,"column_end":16}},{"value":"/   c,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084103,"byte_end":7084111,"line_start":3109,"line_end":3109,"column_start":1,"column_end":9}},{"value":"/   [8, 8, 9, 19, 10, -20, 11, 21, 12, 22, 13, -23, 14, 24, 15, 127]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084112,"byte_end":7084182,"line_start":3110,"line_end":3110,"column_start":1,"column_end":71}},{"value":"/ );","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084183,"byte_end":7084189,"line_start":3111,"line_end":3111,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084190,"byte_end":7084197,"line_start":3112,"line_end":3112,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084198,"byte_end":7084209,"line_start":3113,"line_end":3113,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084210,"byte_end":7084227,"line_start":3114,"line_end":3114,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":800},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084821,"byte_end":7084842,"line_start":3131,"line_end":3131,"column_start":8,"column_end":29},"name":"unpack_high_i16_m128i","qualname":"::x86_x64::sse2::unpack_high_i16_m128i","value":"pub fn unpack_high_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave high `i16` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = unpack_high_i16_m128i(a, b).into();\n assert_eq!(c, [-1, -15, -2, -26, -3, -37, -4, 48]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave high `i16` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084394,"byte_end":7084452,"line_start":3120,"line_end":3120,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084453,"byte_end":7084460,"line_start":3121,"line_end":3121,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084461,"byte_end":7084484,"line_start":3122,"line_end":3122,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084485,"byte_end":7084543,"line_start":3123,"line_end":3123,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084544,"byte_end":7084605,"line_start":3124,"line_end":3124,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = unpack_high_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084606,"byte_end":7084663,"line_start":3125,"line_end":3125,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [-1, -15, -2, -26, -3, -37, -4, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084664,"byte_end":7084719,"line_start":3126,"line_end":3126,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084720,"byte_end":7084727,"line_start":3127,"line_end":3127,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084728,"byte_end":7084739,"line_start":3128,"line_end":3128,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084740,"byte_end":7084757,"line_start":3129,"line_end":3129,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":801},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085287,"byte_end":7085308,"line_start":3146,"line_end":3146,"column_start":8,"column_end":29},"name":"unpack_high_i32_m128i","qualname":"::x86_x64::sse2::unpack_high_i32_m128i","value":"pub fn unpack_high_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave high `i32` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = m128i::from([5, 6, 7, 8]);\n let c: [i32; 4] = unpack_high_i32_m128i(a, b).into();\n assert_eq!(c, [3, 7, 4, 8]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave high `i32` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084926,"byte_end":7084984,"line_start":3135,"line_end":3135,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084985,"byte_end":7084992,"line_start":3136,"line_end":3136,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7084993,"byte_end":7085016,"line_start":3137,"line_end":3137,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085017,"byte_end":7085055,"line_start":3138,"line_end":3138,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085056,"byte_end":7085094,"line_start":3139,"line_end":3139,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = unpack_high_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085095,"byte_end":7085152,"line_start":3140,"line_end":3140,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [3, 7, 4, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085153,"byte_end":7085185,"line_start":3141,"line_end":3141,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085186,"byte_end":7085193,"line_start":3142,"line_end":3142,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085194,"byte_end":7085205,"line_start":3143,"line_end":3143,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085206,"byte_end":7085223,"line_start":3144,"line_end":3144,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":802},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085750,"byte_end":7085771,"line_start":3161,"line_end":3161,"column_start":8,"column_end":29},"name":"unpack_high_i64_m128i","qualname":"::x86_x64::sse2::unpack_high_i64_m128i","value":"pub fn unpack_high_i64_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave high `i64` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([92_i64, 87]);\n let b = m128i::from([-9001_i64, 1]);\n let c: [i64; 2] = unpack_high_i64_m128i(a, b).into();\n assert_eq!(c, [87, 1]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave high `i64` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085392,"byte_end":7085450,"line_start":3150,"line_end":3150,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085451,"byte_end":7085458,"line_start":3151,"line_end":3151,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085459,"byte_end":7085482,"line_start":3152,"line_end":3152,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([92_i64, 87]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085483,"byte_end":7085521,"line_start":3153,"line_end":3153,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([-9001_i64, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085522,"byte_end":7085562,"line_start":3154,"line_end":3154,"column_start":1,"column_end":41}},{"value":"/ let c: [i64; 2] = unpack_high_i64_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085563,"byte_end":7085620,"line_start":3155,"line_end":3155,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(c, [87, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085621,"byte_end":7085648,"line_start":3156,"line_end":3156,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085649,"byte_end":7085656,"line_start":3157,"line_end":3157,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085657,"byte_end":7085668,"line_start":3158,"line_end":3158,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085669,"byte_end":7085686,"line_start":3159,"line_end":3159,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":803},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086213,"byte_end":7086230,"line_start":3176,"line_end":3176,"column_start":8,"column_end":25},"name":"unpack_high_m128d","qualname":"::x86_x64::sse2::unpack_high_m128d","value":"pub fn unpack_high_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave high lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -6.0]);\n let c = unpack_high_m128d(a, b).to_array();\n assert_eq!(c, [87.5, -6.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave high lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085855,"byte_end":7085907,"line_start":3165,"line_end":3165,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085908,"byte_end":7085915,"line_start":3166,"line_end":3166,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085916,"byte_end":7085939,"line_start":3167,"line_end":3167,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085940,"byte_end":7085984,"line_start":3168,"line_end":3168,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7085985,"byte_end":7086030,"line_start":3169,"line_end":3169,"column_start":1,"column_end":46}},{"value":"/ let c = unpack_high_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086031,"byte_end":7086078,"line_start":3170,"line_end":3170,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(c, [87.5, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086079,"byte_end":7086111,"line_start":3171,"line_end":3171,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086112,"byte_end":7086119,"line_start":3172,"line_end":3172,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086120,"byte_end":7086131,"line_start":3173,"line_end":3173,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086132,"byte_end":7086149,"line_start":3174,"line_end":3174,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":804},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086833,"byte_end":7086852,"line_start":3194,"line_end":3194,"column_start":8,"column_end":27},"name":"unpack_low_i8_m128i","qualname":"::x86_x64::sse2::unpack_low_i8_m128i","value":"pub fn unpack_low_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave low `i8` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a =\n   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n let b = m128i::from([\n   12_i8, 11, 22, 13, 99, 15, 16, 17, 8, 19, -20, 21, 22, -23, 24, 127,\n ]);\n let c: [i8; 16] = unpack_low_i8_m128i(a, b).into();\n assert_eq!(c, [0, 12, 1, 11, 2, 22, 3, 13, 4, 99, 5, 15, 6, 16, 7, 17]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave low `i8` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086311,"byte_end":7086367,"line_start":3180,"line_end":3180,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086368,"byte_end":7086375,"line_start":3181,"line_end":3181,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086376,"byte_end":7086399,"line_start":3182,"line_end":3182,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086400,"byte_end":7086411,"line_start":3183,"line_end":3183,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086412,"byte_end":7086489,"line_start":3184,"line_end":3184,"column_start":1,"column_end":78}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086490,"byte_end":7086515,"line_start":3185,"line_end":3185,"column_start":1,"column_end":26}},{"value":"/   12_i8, 11, 22, 13, 99, 15, 16, 17, 8, 19, -20, 21, 22, -23, 24, 127,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086516,"byte_end":7086590,"line_start":3186,"line_end":3186,"column_start":1,"column_end":75}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086591,"byte_end":7086598,"line_start":3187,"line_end":3187,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = unpack_low_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086599,"byte_end":7086654,"line_start":3188,"line_end":3188,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(c, [0, 12, 1, 11, 2, 22, 3, 13, 4, 99, 5, 15, 6, 16, 7, 17]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086655,"byte_end":7086731,"line_start":3189,"line_end":3189,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086732,"byte_end":7086739,"line_start":3190,"line_end":3190,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086740,"byte_end":7086751,"line_start":3191,"line_end":3191,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086752,"byte_end":7086769,"line_start":3192,"line_end":3192,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":805},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087349,"byte_end":7087369,"line_start":3209,"line_end":3209,"column_start":8,"column_end":28},"name":"unpack_low_i16_m128i","qualname":"::x86_x64::sse2::unpack_low_i16_m128i","value":"pub fn unpack_low_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave low `i16` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = unpack_low_i16_m128i(a, b).into();\n assert_eq!(c, [1, 5, 2, 6, 3, 7, 4, 8]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave low `i16` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086935,"byte_end":7086992,"line_start":3198,"line_end":3198,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7086993,"byte_end":7087000,"line_start":3199,"line_end":3199,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087001,"byte_end":7087024,"line_start":3200,"line_end":3200,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087025,"byte_end":7087083,"line_start":3201,"line_end":3201,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087084,"byte_end":7087145,"line_start":3202,"line_end":3202,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = unpack_low_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087146,"byte_end":7087202,"line_start":3203,"line_end":3203,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [1, 5, 2, 6, 3, 7, 4, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087203,"byte_end":7087247,"line_start":3204,"line_end":3204,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087248,"byte_end":7087255,"line_start":3205,"line_end":3205,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087256,"byte_end":7087267,"line_start":3206,"line_end":3206,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087268,"byte_end":7087285,"line_start":3207,"line_end":3207,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087812,"byte_end":7087832,"line_start":3224,"line_end":3224,"column_start":8,"column_end":28},"name":"unpack_low_i32_m128i","qualname":"::x86_x64::sse2::unpack_low_i32_m128i","value":"pub fn unpack_low_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave low `i32` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = m128i::from([5, 6, 7, 8]);\n let c: [i32; 4] = unpack_low_i32_m128i(a, b).into();\n assert_eq!(c, [1, 5, 2, 6]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave low `i32` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087453,"byte_end":7087510,"line_start":3213,"line_end":3213,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087511,"byte_end":7087518,"line_start":3214,"line_end":3214,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087519,"byte_end":7087542,"line_start":3215,"line_end":3215,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087543,"byte_end":7087581,"line_start":3216,"line_end":3216,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087582,"byte_end":7087620,"line_start":3217,"line_end":3217,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = unpack_low_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087621,"byte_end":7087677,"line_start":3218,"line_end":3218,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [1, 5, 2, 6]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087678,"byte_end":7087710,"line_start":3219,"line_end":3219,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087711,"byte_end":7087718,"line_start":3220,"line_end":3220,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087719,"byte_end":7087730,"line_start":3221,"line_end":3221,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087731,"byte_end":7087748,"line_start":3222,"line_end":3222,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":807},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088276,"byte_end":7088296,"line_start":3239,"line_end":3239,"column_start":8,"column_end":28},"name":"unpack_low_i64_m128i","qualname":"::x86_x64::sse2::unpack_low_i64_m128i","value":"pub fn unpack_low_i64_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave low `i64` lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([92_i64, 87]);\n let b = m128i::from([-9001_i64, 1]);\n let c: [i64; 2] = unpack_low_i64_m128i(a, b).into();\n assert_eq!(c, [92, -9001]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave low `i64` lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087916,"byte_end":7087973,"line_start":3228,"line_end":3228,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087974,"byte_end":7087981,"line_start":3229,"line_end":3229,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7087982,"byte_end":7088005,"line_start":3230,"line_end":3230,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([92_i64, 87]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088006,"byte_end":7088044,"line_start":3231,"line_end":3231,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([-9001_i64, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088045,"byte_end":7088085,"line_start":3232,"line_end":3232,"column_start":1,"column_end":41}},{"value":"/ let c: [i64; 2] = unpack_low_i64_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088086,"byte_end":7088142,"line_start":3233,"line_end":3233,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [92, -9001]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088143,"byte_end":7088174,"line_start":3234,"line_end":3234,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088175,"byte_end":7088182,"line_start":3235,"line_end":3235,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088183,"byte_end":7088194,"line_start":3236,"line_end":3236,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088195,"byte_end":7088212,"line_start":3237,"line_end":3237,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088737,"byte_end":7088753,"line_start":3254,"line_end":3254,"column_start":8,"column_end":24},"name":"unpack_low_m128d","qualname":"::x86_x64::sse2::unpack_low_m128d","value":"pub fn unpack_low_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Unpack and interleave low lanes of `a` and `b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([92.0, 87.5]);\n let b = m128d::from_array([100.0, -6.0]);\n let c = unpack_low_m128d(a, b).to_array();\n assert_eq!(c, [92.0, 100.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Unpack and interleave low lanes of `a` and `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088380,"byte_end":7088431,"line_start":3243,"line_end":3243,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088432,"byte_end":7088439,"line_start":3244,"line_end":3244,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088440,"byte_end":7088463,"line_start":3245,"line_end":3245,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([92.0, 87.5]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088464,"byte_end":7088508,"line_start":3246,"line_end":3246,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, -6.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088509,"byte_end":7088554,"line_start":3247,"line_end":3247,"column_start":1,"column_end":46}},{"value":"/ let c = unpack_low_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088555,"byte_end":7088601,"line_start":3248,"line_end":3248,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [92.0, 100.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088602,"byte_end":7088635,"line_start":3249,"line_end":3249,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088636,"byte_end":7088643,"line_start":3250,"line_end":3250,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088644,"byte_end":7088655,"line_start":3251,"line_end":3251,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088656,"byte_end":7088673,"line_start":3252,"line_end":3252,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089148,"byte_end":7089160,"line_start":3269,"line_end":3269,"column_start":8,"column_end":20},"name":"bitxor_m128d","qualname":"::x86_x64::sse2::bitxor_m128d","value":"pub fn bitxor_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a ^ b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 0.0]);\n let b = m128d::from_array([1.0, 1.0]);\n let c = bitxor_m128d(a, b).to_array();\n assert_eq!(c, [0.0, 1.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a ^ b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088834,"byte_end":7088854,"line_start":3258,"line_end":3258,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088855,"byte_end":7088862,"line_start":3259,"line_end":3259,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088863,"byte_end":7088886,"line_start":3260,"line_end":3260,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 0.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088887,"byte_end":7088929,"line_start":3261,"line_end":3261,"column_start":1,"column_end":43}},{"value":"/ let b = m128d::from_array([1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088930,"byte_end":7088972,"line_start":3262,"line_end":3262,"column_start":1,"column_end":43}},{"value":"/ let c = bitxor_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7088973,"byte_end":7089015,"line_start":3263,"line_end":3263,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(c, [0.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089016,"byte_end":7089046,"line_start":3264,"line_end":3264,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089047,"byte_end":7089054,"line_start":3265,"line_end":3265,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089055,"byte_end":7089066,"line_start":3266,"line_end":3266,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089067,"byte_end":7089084,"line_start":3267,"line_end":3267,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":810},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089550,"byte_end":7089562,"line_start":3284,"line_end":3284,"column_start":8,"column_end":20},"name":"bitxor_m128i","qualname":"::x86_x64::sse2::bitxor_m128i","value":"pub fn bitxor_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Bitwise `a ^ b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 0, 1, 0]);\n let b = m128i::from([1, 1, 0, 0]);\n let c: [i32; 4] = bitxor_m128i(a, b).into();\n assert_eq!(c, [0, 1, 1, 0]);\n ```\n","sig":null,"attributes":[{"value":"/ Bitwise `a ^ b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089236,"byte_end":7089256,"line_start":3273,"line_end":3273,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089257,"byte_end":7089264,"line_start":3274,"line_end":3274,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089265,"byte_end":7089288,"line_start":3275,"line_end":3275,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 0, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089289,"byte_end":7089327,"line_start":3276,"line_end":3276,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([1, 1, 0, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089328,"byte_end":7089366,"line_start":3277,"line_end":3277,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = bitxor_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089367,"byte_end":7089415,"line_start":3278,"line_end":3278,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(c, [0, 1, 1, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089416,"byte_end":7089448,"line_start":3279,"line_end":3279,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089449,"byte_end":7089456,"line_start":3280,"line_end":3280,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089457,"byte_end":7089468,"line_start":3281,"line_end":3281,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7089469,"byte_end":7089486,"line_start":3282,"line_end":3282,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":881},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098570,"byte_end":7098582,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"addsub_m128d","qualname":"::x86_x64::sse3::addsub_m128d","value":"pub fn addsub_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Add the high lane and subtract the low lane.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 50.0]);\n let b = m128d::from_array([100.0, 500.0]);\n let c = addsub_m128d(a, b).to_array();\n assert_eq!(c, [-90.0, 550.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Add the high lane and subtract the low lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098218,"byte_end":7098266,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098267,"byte_end":7098274,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098275,"byte_end":7098298,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 50.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098299,"byte_end":7098343,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, 500.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098344,"byte_end":7098390,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ let c = addsub_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098391,"byte_end":7098433,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(c, [-90.0, 550.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098434,"byte_end":7098468,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098469,"byte_end":7098476,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098477,"byte_end":7098488,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098489,"byte_end":7098506,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":882},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099070,"byte_end":7099081,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"addsub_m128","qualname":"::x86_x64::sse3::addsub_m128","value":"pub fn addsub_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Alternately, from the top, add a lane and then subtract a lane.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 20.0, 30.0, 40.0]);\n let b = m128::from_array([100.0, 200.0, 300.0, 400.0]);\n let c = addsub_m128(a, b).to_array();\n assert_eq!(c, [-90.0, 220.0, -270.0, 440.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Alternately, from the top, add a lane and then subtract a lane.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098661,"byte_end":7098728,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098729,"byte_end":7098736,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098737,"byte_end":7098760,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 20.0, 30.0, 40.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098761,"byte_end":7098816,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ let b = m128::from_array([100.0, 200.0, 300.0, 400.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098817,"byte_end":7098876,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/ let c = addsub_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098877,"byte_end":7098918,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(c, [-90.0, 220.0, -270.0, 440.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098919,"byte_end":7098968,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098969,"byte_end":7098976,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098977,"byte_end":7098988,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7098989,"byte_end":7099006,"line_start":29,"line_end":29,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":883},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099532,"byte_end":7099552,"line_start":46,"line_end":46,"column_start":8,"column_end":28},"name":"add_horizontal_m128d","qualname":"::x86_x64::sse3::add_horizontal_m128d","value":"pub fn add_horizontal_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Add each lane horizontally, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 50.0]);\n let b = m128d::from_array([100.0, 500.0]);\n let c = add_horizontal_m128d(a, b).to_array();\n assert_eq!(c, [60.0, 600.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Add each lane horizontally, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099156,"byte_end":7099221,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099222,"byte_end":7099229,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099230,"byte_end":7099253,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 50.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099254,"byte_end":7099298,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, 500.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099299,"byte_end":7099345,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ let c = add_horizontal_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099346,"byte_end":7099396,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(c, [60.0, 600.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099397,"byte_end":7099430,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099431,"byte_end":7099438,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099439,"byte_end":7099450,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099451,"byte_end":7099468,"line_start":44,"line_end":44,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":884},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100041,"byte_end":7100060,"line_start":61,"line_end":61,"column_start":8,"column_end":27},"name":"add_horizontal_m128","qualname":"::x86_x64::sse3::add_horizontal_m128","value":"pub fn add_horizontal_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Add each lane horizontally, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 20.0, 30.0, 40.0]);\n let b = m128::from_array([100.0, 200.0, 300.0, 400.0]);\n let c = add_horizontal_m128(a, b).to_array();\n assert_eq!(c, [30.0, 70.0, 300.0, 700.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Add each lane horizontally, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099629,"byte_end":7099694,"line_start":50,"line_end":50,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099695,"byte_end":7099702,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099703,"byte_end":7099726,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 20.0, 30.0, 40.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099727,"byte_end":7099782,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ let b = m128::from_array([100.0, 200.0, 300.0, 400.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099783,"byte_end":7099842,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"/ let c = add_horizontal_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099843,"byte_end":7099892,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [30.0, 70.0, 300.0, 700.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099893,"byte_end":7099939,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099940,"byte_end":7099947,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099948,"byte_end":7099959,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7099960,"byte_end":7099977,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":885},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100516,"byte_end":7100536,"line_start":76,"line_end":76,"column_start":8,"column_end":28},"name":"sub_horizontal_m128d","qualname":"::x86_x64::sse3::sub_horizontal_m128d","value":"pub fn sub_horizontal_m128d(m128d, m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Subtract each lane horizontally, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([10.0, 50.0]);\n let b = m128d::from_array([100.0, 500.0]);\n let c = sub_horizontal_m128d(a, b).to_array();\n assert_eq!(c, [-40.0, -400.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Subtract each lane horizontally, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100133,"byte_end":7100203,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100204,"byte_end":7100211,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100212,"byte_end":7100235,"line_start":67,"line_end":67,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([10.0, 50.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100236,"byte_end":7100280,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/ let b = m128d::from_array([100.0, 500.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100281,"byte_end":7100327,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/ let c = sub_horizontal_m128d(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100328,"byte_end":7100378,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(c, [-40.0, -400.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100379,"byte_end":7100414,"line_start":71,"line_end":71,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100415,"byte_end":7100422,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100423,"byte_end":7100434,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100435,"byte_end":7100452,"line_start":74,"line_end":74,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":886},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101034,"byte_end":7101053,"line_start":91,"line_end":91,"column_start":8,"column_end":27},"name":"sub_horizontal_m128","qualname":"::x86_x64::sse3::sub_horizontal_m128","value":"pub fn sub_horizontal_m128(m128, m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Subtract each lane horizontally, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128::from_array([10.0, 20.0, 30.0, 45.0]);\n let b = m128::from_array([100.0, 200.0, 300.0, 450.0]);\n let c = sub_horizontal_m128(a, b).to_array();\n assert_eq!(c, [-10.0, -15.0, -100.0, -150.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Subtract each lane horizontally, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100613,"byte_end":7100683,"line_start":80,"line_end":80,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100684,"byte_end":7100691,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100692,"byte_end":7100715,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([10.0, 20.0, 30.0, 45.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100716,"byte_end":7100771,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/ let b = m128::from_array([100.0, 200.0, 300.0, 450.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100772,"byte_end":7100831,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ let c = sub_horizontal_m128(a, b).to_array();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100832,"byte_end":7100881,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(c, [-10.0, -15.0, -100.0, -150.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100882,"byte_end":7100932,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100933,"byte_end":7100940,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100941,"byte_end":7100952,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7100953,"byte_end":7100970,"line_start":89,"line_end":89,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":887},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101451,"byte_end":7101477,"line_start":105,"line_end":105,"column_start":8,"column_end":34},"name":"duplicate_low_lane_m128d_s","qualname":"::x86_x64::sse3::duplicate_low_lane_m128d_s","value":"pub fn duplicate_low_lane_m128d_s(m128d) -> m128d","parent":null,"children":[],"decl_id":null,"docs":" Copy the low lane of the input to both lanes of the output.\n ```\n # use safe_arch::*;\n let a = m128d::from_array([1.0, 2.0]);\n let b = duplicate_low_lane_m128d_s(a);\n assert_eq!(b.to_array(), [1.0, 1.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Copy the low lane of the input to both lanes of the output.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101126,"byte_end":7101189,"line_start":95,"line_end":95,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101190,"byte_end":7101197,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101198,"byte_end":7101221,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/ let a = m128d::from_array([1.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101222,"byte_end":7101264,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/ let b = duplicate_low_lane_m128d_s(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101265,"byte_end":7101307,"line_start":99,"line_end":99,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(b.to_array(), [1.0, 1.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101308,"byte_end":7101349,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101350,"byte_end":7101357,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101358,"byte_end":7101369,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101370,"byte_end":7101387,"line_start":103,"line_end":103,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":888},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101867,"byte_end":7101891,"line_start":119,"line_end":119,"column_start":8,"column_end":32},"name":"duplicate_odd_lanes_m128","qualname":"::x86_x64::sse3::duplicate_odd_lanes_m128","value":"pub fn duplicate_odd_lanes_m128(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Duplicate the odd lanes to the even lanes.\n ```\n # use safe_arch::*;\n let a = m128::from_array([0.0, 1.0, 2.0, 3.0]);\n let b = duplicate_odd_lanes_m128(a);\n assert_eq!(b.to_array(), [1.0, 1.0, 3.0, 3.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Duplicate the odd lanes to the even lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101542,"byte_end":7101588,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101589,"byte_end":7101596,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101597,"byte_end":7101620,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.0, 1.0, 2.0, 3.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101621,"byte_end":7101672,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ let b = duplicate_odd_lanes_m128(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101673,"byte_end":7101713,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(b.to_array(), [1.0, 1.0, 3.0, 3.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101714,"byte_end":7101765,"line_start":114,"line_end":114,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101766,"byte_end":7101773,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101774,"byte_end":7101785,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101786,"byte_end":7101803,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102280,"byte_end":7102305,"line_start":133,"line_end":133,"column_start":8,"column_end":33},"name":"duplicate_even_lanes_m128","qualname":"::x86_x64::sse3::duplicate_even_lanes_m128","value":"pub fn duplicate_even_lanes_m128(m128) -> m128","parent":null,"children":[],"decl_id":null,"docs":" Duplicate the odd lanes to the even lanes.\n ```\n # use safe_arch::*;\n let a = m128::from_array([0.0, 1.0, 2.0, 3.0]);\n let b = duplicate_even_lanes_m128(a);\n assert_eq!(b.to_array(), [0.0, 0.0, 2.0, 2.0]);\n ```\n","sig":null,"attributes":[{"value":"/ Duplicate the odd lanes to the even lanes.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7101954,"byte_end":7102000,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102001,"byte_end":7102008,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102009,"byte_end":7102032,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/ let a = m128::from_array([0.0, 1.0, 2.0, 3.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102033,"byte_end":7102084,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ let b = duplicate_even_lanes_m128(a);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102085,"byte_end":7102126,"line_start":127,"line_end":127,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(b.to_array(), [0.0, 0.0, 2.0, 2.0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102127,"byte_end":7102178,"line_start":128,"line_end":128,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102179,"byte_end":7102186,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102187,"byte_end":7102198,"line_start":130,"line_end":130,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse3.rs","byte_start":7102199,"byte_end":7102216,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103046,"byte_end":7103058,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"abs_i8_m128i","qualname":"::x86_x64::ssse3::abs_i8_m128i","value":"pub fn abs_i8_m128i(m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise absolute value with lanes as `i8`.","sig":null,"attributes":[{"value":"/ Lanewise absolute value with lanes as `i8`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102553,"byte_end":7102600,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102601,"byte_end":7102604,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is a \"wrapping\" absolute value, so `i8::MIN` stays as `i8::MIN`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102605,"byte_end":7102678,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102679,"byte_end":7102686,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102687,"byte_end":7102710,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102711,"byte_end":7102736,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/   0_i8, -1, 2, -3, 4, -5, 6, -7, -8, 9, -10, 11, -12, 13, -14, -128,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102737,"byte_end":7102809,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102810,"byte_end":7102817,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ let c: [i8; 16] = abs_i8_m128i(a).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102818,"byte_end":7102863,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(c, [0_i8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -128]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102864,"byte_end":7102943,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102944,"byte_end":7102951,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102952,"byte_end":7102963,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7102964,"byte_end":7102981,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103549,"byte_end":7103562,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"abs_i16_m128i","qualname":"::x86_x64::ssse3::abs_i16_m128i","value":"pub fn abs_i16_m128i(m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise absolute value with lanes as `i16`.","sig":null,"attributes":[{"value":"/ Lanewise absolute value with lanes as `i16`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103121,"byte_end":7103169,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103170,"byte_end":7103173,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is a \"wrapping\" absolute value, so `i16::MIN` stays as `i16::MIN`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103174,"byte_end":7103249,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103250,"byte_end":7103257,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103258,"byte_end":7103281,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([0_i16, 1, 2, 3, 4, 5, 6, i16::MIN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103282,"byte_end":7103343,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = abs_i16_m128i(a).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103344,"byte_end":7103390,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [0_i16, 1, 2, 3, 4, 5, 6, i16::MIN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103391,"byte_end":7103446,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103447,"byte_end":7103454,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103455,"byte_end":7103466,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103467,"byte_end":7103484,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7104023,"byte_end":7104036,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"abs_i32_m128i","qualname":"::x86_x64::ssse3::abs_i32_m128i","value":"pub fn abs_i32_m128i(m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Lanewise absolute value with lanes as `i32`.","sig":null,"attributes":[{"value":"/ Lanewise absolute value with lanes as `i32`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103626,"byte_end":7103674,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103675,"byte_end":7103678,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This is a \"wrapping\" absolute value, so `i32::MIN` stays as `i32::MIN`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103679,"byte_end":7103754,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103755,"byte_end":7103762,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103763,"byte_end":7103786,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([0, -1, 2, i32::MIN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103787,"byte_end":7103833,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ let c: [i32; 4] = abs_i32_m128i(a).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103834,"byte_end":7103880,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(c, [0, 1, 2, i32::MIN]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103881,"byte_end":7103920,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103921,"byte_end":7103928,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103929,"byte_end":7103940,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7103941,"byte_end":7103958,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105892,"byte_end":7105916,"line_start":102,"line_end":102,"column_start":8,"column_end":32},"name":"add_horizontal_i16_m128i","qualname":"::x86_x64::ssse3::add_horizontal_i16_m128i","value":"pub fn add_horizontal_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Add horizontal pairs of `i16` values, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = add_horizontal_i16_m128i(a, b).into();\n assert_eq!(c, [3, 7, -3, -7, 11, 15, -41, 11]);\n ```\n","sig":null,"attributes":[{"value":"/ Add horizontal pairs of `i16` values, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105448,"byte_end":7105523,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105524,"byte_end":7105531,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105532,"byte_end":7105555,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105556,"byte_end":7105614,"line_start":94,"line_end":94,"column_start":1,"column_end":59}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105615,"byte_end":7105676,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = add_horizontal_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105677,"byte_end":7105737,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [3, 7, -3, -7, 11, 15, -41, 11]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105738,"byte_end":7105789,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105790,"byte_end":7105797,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105798,"byte_end":7105809,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105810,"byte_end":7105827,"line_start":100,"line_end":100,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":898},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106380,"byte_end":7106404,"line_start":117,"line_end":117,"column_start":8,"column_end":32},"name":"add_horizontal_i32_m128i","qualname":"::x86_x64::ssse3::add_horizontal_i32_m128i","value":"pub fn add_horizontal_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Add horizontal pairs of `i32` values, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 2, 3, 4]);\n let b = m128i::from([5, 6, 7, 8]);\n let c: [i32; 4] = add_horizontal_i32_m128i(a, b).into();\n assert_eq!(c, [3, 7, 11, 15]);\n ```\n","sig":null,"attributes":[{"value":"/ Add horizontal pairs of `i32` values, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7105996,"byte_end":7106071,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106072,"byte_end":7106079,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106080,"byte_end":7106103,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, 3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106104,"byte_end":7106142,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/ let b = m128i::from([5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106143,"byte_end":7106181,"line_start":110,"line_end":110,"column_start":1,"column_end":39}},{"value":"/ let c: [i32; 4] = add_horizontal_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106182,"byte_end":7106242,"line_start":111,"line_end":111,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [3, 7, 11, 15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106243,"byte_end":7106277,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106278,"byte_end":7106285,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106286,"byte_end":7106297,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106298,"byte_end":7106315,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":899},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106972,"byte_end":7107007,"line_start":133,"line_end":133,"column_start":8,"column_end":43},"name":"add_horizontal_saturating_i16_m128i","qualname":"::x86_x64::ssse3::add_horizontal_saturating_i16_m128i","value":"pub fn add_horizontal_saturating_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Add horizontal pairs of `i16` values, saturating, pack the outputs as `a`\n then `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([i16::MAX, i16::MAX, 3, 4, -1, -2, -3, -4]);\n let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);\n let c: [i16; 8] = add_horizontal_saturating_i16_m128i(a, b).into();\n assert_eq!(c, [i16::MAX, 7, -3, -7, 11, 15, -41, 11]);\n ```\n","sig":null,"attributes":[{"value":"/ Add horizontal pairs of `i16` values, saturating, pack the outputs as `a`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106484,"byte_end":7106561,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/ then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106562,"byte_end":7106575,"line_start":122,"line_end":122,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106576,"byte_end":7106583,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106584,"byte_end":7106607,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([i16::MAX, i16::MAX, 3, 4, -1, -2, -3, -4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106608,"byte_end":7106676,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/ let b = m128i::from([5_i16, 6, 7, 8, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106677,"byte_end":7106738,"line_start":126,"line_end":126,"column_start":1,"column_end":62}},{"value":"/ let c: [i16; 8] = add_horizontal_saturating_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106739,"byte_end":7106810,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(c, [i16::MAX, 7, -3, -7, 11, 15, -41, 11]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106811,"byte_end":7106869,"line_start":128,"line_end":128,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106870,"byte_end":7106877,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106878,"byte_end":7106889,"line_start":130,"line_end":130,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7106890,"byte_end":7106907,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107553,"byte_end":7107577,"line_start":148,"line_end":148,"column_start":8,"column_end":32},"name":"sub_horizontal_i16_m128i","qualname":"::x86_x64::ssse3::sub_horizontal_i16_m128i","value":"pub fn sub_horizontal_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Subtract horizontal pairs of `i16` values, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1_i16, 29, 3, 64, -18, -23, -73, -14]);\n let b = m128i::from([50_i16, 76, 72, 89, -15, -26, -37, 48]);\n let c: [i16; 8] = sub_horizontal_i16_m128i(a, b).into();\n assert_eq!(c, [-28, -61, 5, -59, -26, -17, 11, -85]);\n ```\n","sig":null,"attributes":[{"value":"/ Subtract horizontal pairs of `i16` values, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107088,"byte_end":7107168,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107169,"byte_end":7107176,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107177,"byte_end":7107200,"line_start":139,"line_end":139,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 29, 3, 64, -18, -23, -73, -14]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107201,"byte_end":7107265,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ let b = m128i::from([50_i16, 76, 72, 89, -15, -26, -37, 48]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107266,"byte_end":7107331,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"/ let c: [i16; 8] = sub_horizontal_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107332,"byte_end":7107392,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [-28, -61, 5, -59, -26, -17, 11, -85]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107393,"byte_end":7107450,"line_start":143,"line_end":143,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107451,"byte_end":7107458,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107459,"byte_end":7107470,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107471,"byte_end":7107488,"line_start":146,"line_end":146,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":901},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108056,"byte_end":7108080,"line_start":163,"line_end":163,"column_start":8,"column_end":32},"name":"sub_horizontal_i32_m128i","qualname":"::x86_x64::ssse3::sub_horizontal_i32_m128i","value":"pub fn sub_horizontal_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Subtract horizontal pairs of `i32` values, pack the outputs as `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([1, 29, 3, 42]);\n let b = m128i::from([5, 96, 7, 84]);\n let c: [i32; 4] = sub_horizontal_i32_m128i(a, b).into();\n assert_eq!(c, [-28, -39, -91, -77]);\n ```\n","sig":null,"attributes":[{"value":"/ Subtract horizontal pairs of `i32` values, pack the outputs as `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107657,"byte_end":7107737,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107738,"byte_end":7107745,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107746,"byte_end":7107769,"line_start":154,"line_end":154,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 29, 3, 42]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107770,"byte_end":7107810,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ let b = m128i::from([5, 96, 7, 84]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107811,"byte_end":7107851,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/ let c: [i32; 4] = sub_horizontal_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107852,"byte_end":7107912,"line_start":157,"line_end":157,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [-28, -39, -91, -77]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107913,"byte_end":7107953,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107954,"byte_end":7107961,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107962,"byte_end":7107973,"line_start":160,"line_end":160,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7107974,"byte_end":7107991,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":902},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108669,"byte_end":7108704,"line_start":179,"line_end":179,"column_start":8,"column_end":43},"name":"sub_horizontal_saturating_i16_m128i","qualname":"::x86_x64::ssse3::sub_horizontal_saturating_i16_m128i","value":"pub fn sub_horizontal_saturating_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Subtract horizontal pairs of `i16` values, saturating, pack the outputs as\n `a` then `b`.\n ```\n # use safe_arch::*;\n let a = m128i::from([i16::MIN, 1, 3, 49, -1, -27, -3, -412]);\n let b = m128i::from([5_i16, 699, 7, 877, -15, -2664, -37, 4008]);\n let c: [i16; 8] = sub_horizontal_saturating_i16_m128i(a, b).into();\n assert_eq!(c, [i16::MIN, -46, 26, 409, -694, -870, 2649, -4045]);\n ```\n","sig":null,"attributes":[{"value":"/ Subtract horizontal pairs of `i16` values, saturating, pack the outputs as","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108160,"byte_end":7108238,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/ `a` then `b`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108239,"byte_end":7108256,"line_start":168,"line_end":168,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108257,"byte_end":7108264,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108265,"byte_end":7108288,"line_start":170,"line_end":170,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([i16::MIN, 1, 3, 49, -1, -27, -3, -412]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108289,"byte_end":7108354,"line_start":171,"line_end":171,"column_start":1,"column_end":66}},{"value":"/ let b = m128i::from([5_i16, 699, 7, 877, -15, -2664, -37, 4008]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108355,"byte_end":7108424,"line_start":172,"line_end":172,"column_start":1,"column_end":70}},{"value":"/ let c: [i16; 8] = sub_horizontal_saturating_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108425,"byte_end":7108496,"line_start":173,"line_end":173,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(c, [i16::MIN, -46, 26, 409, -694, -870, 2649, -4045]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108497,"byte_end":7108566,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108567,"byte_end":7108574,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108575,"byte_end":7108586,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108587,"byte_end":7108604,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109516,"byte_end":7109556,"line_start":203,"line_end":203,"column_start":8,"column_end":48},"name":"mul_u8i8_add_horizontal_saturating_m128i","qualname":"::x86_x64::ssse3::mul_u8i8_add_horizontal_saturating_m128i","value":"pub fn mul_u8i8_add_horizontal_saturating_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" This is dumb and weird.","sig":null,"attributes":[{"value":"/ This is dumb and weird.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108785,"byte_end":7108812,"line_start":183,"line_end":183,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108813,"byte_end":7108816,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ * Vertically multiplies each `u8` lane from `a` with an `i8` lane from `b`,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108817,"byte_end":7108896,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/   producing an `i16` intermediate value.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108897,"byte_end":7108941,"line_start":186,"line_end":186,"column_start":1,"column_end":45}},{"value":"/ * These intermediate `i16` values are horizontally added with saturation.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7108942,"byte_end":7109019,"line_start":187,"line_end":187,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109020,"byte_end":7109023,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109024,"byte_end":7109031,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109032,"byte_end":7109055,"line_start":190,"line_end":190,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109056,"byte_end":7109081,"line_start":191,"line_end":191,"column_start":1,"column_end":26}},{"value":"/   255_u8, 255, 0, 0, 255, 255, 1, 1, 8, 9, 10, 11, 12, 13, 14, 15,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109082,"byte_end":7109152,"line_start":192,"line_end":192,"column_start":1,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109153,"byte_end":7109160,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/ let b = m128i::from([","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109161,"byte_end":7109186,"line_start":194,"line_end":194,"column_start":1,"column_end":26}},{"value":"/   127_i8, 127, 0, 0, -127, -127, 1, 1, 24, 25, 26, 27, 28, 29, 30, 31,","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109187,"byte_end":7109261,"line_start":195,"line_end":195,"column_start":1,"column_end":75}},{"value":"/ ]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109262,"byte_end":7109269,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/ let c: [i16; 8] = mul_u8i8_add_horizontal_saturating_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109270,"byte_end":7109346,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(c, [i16::MAX, 0, i16::MIN, 2, 417, 557, 713, 885]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109347,"byte_end":7109413,"line_start":198,"line_end":198,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109414,"byte_end":7109421,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109422,"byte_end":7109433,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109434,"byte_end":7109451,"line_start":201,"line_end":201,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":904},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110270,"byte_end":7110295,"line_start":222,"line_end":222,"column_start":8,"column_end":33},"name":"mul_i16_scale_round_m128i","qualname":"::x86_x64::ssse3::mul_i16_scale_round_m128i","value":"pub fn mul_i16_scale_round_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Multiply `i16` lanes into `i32` intermediates, keep the high 18 bits, round\n by adding 1, right shift by 1.","sig":null,"attributes":[{"value":"/ Multiply `i16` lanes into `i32` intermediates, keep the high 18 bits, round","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109639,"byte_end":7109718,"line_start":207,"line_end":207,"column_start":1,"column_end":80}},{"value":"/ by adding 1, right shift by 1.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109719,"byte_end":7109753,"line_start":208,"line_end":208,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109754,"byte_end":7109757,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ This is `_mm_mulhrs_epi16`, which I can only assume is named for something","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109758,"byte_end":7109836,"line_start":210,"line_end":210,"column_start":1,"column_end":79}},{"value":"/ like \"high bits rounded and scaled\".","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109837,"byte_end":7109877,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109878,"byte_end":7109885,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109886,"byte_end":7109909,"line_start":213,"line_end":213,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([0_i16, 100, 200, 300, 400, 500, 600, 700]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109910,"byte_end":7109978,"line_start":214,"line_end":214,"column_start":1,"column_end":69}},{"value":"/ let b = m128i::from([800_i16, 900, 1000, 1100, 1200, 1300, 1400, 1500]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7109979,"byte_end":7110055,"line_start":215,"line_end":215,"column_start":1,"column_end":77}},{"value":"/ let c: [i16; 8] = mul_i16_scale_round_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110056,"byte_end":7110117,"line_start":216,"line_end":216,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(c, [0, 3, 6, 10, 15, 20, 26, 32]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110118,"byte_end":7110167,"line_start":217,"line_end":217,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110168,"byte_end":7110175,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110176,"byte_end":7110187,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110188,"byte_end":7110205,"line_start":220,"line_end":220,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111032,"byte_end":7111056,"line_start":243,"line_end":243,"column_start":8,"column_end":32},"name":"shuffle_av_i8z_all_m128i","qualname":"::x86_x64::ssse3::shuffle_av_i8z_all_m128i","value":"pub fn shuffle_av_i8z_all_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Shuffle `i8` lanes in `a` using `i8` values in `v`.","sig":null,"attributes":[{"value":"/ Shuffle `i8` lanes in `a` using `i8` values in `v`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110377,"byte_end":7110432,"line_start":226,"line_end":226,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110433,"byte_end":7110436,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ If a lane in `v` is negative, that output is zeroed.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110437,"byte_end":7110493,"line_start":228,"line_end":228,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110494,"byte_end":7110501,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110502,"byte_end":7110525,"line_start":230,"line_end":230,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110526,"byte_end":7110537,"line_start":231,"line_end":231,"column_start":1,"column_end":12}},{"value":"/   m128i::from([70_i8, 1, 2, 3, 4, 5, 6, 7, 8, 99, 100, 11, 12, 13, 14, 55]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110538,"byte_end":7110618,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ let v =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110619,"byte_end":7110630,"line_start":233,"line_end":233,"column_start":1,"column_end":12}},{"value":"/   m128i::from([-1_i8, 5, 4, 1, 3, 0, 9, 10, 2, 14, 6, 7, 15, 12, 13, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110631,"byte_end":7110708,"line_start":234,"line_end":234,"column_start":1,"column_end":78}},{"value":"/ let c: [i8; 16] = shuffle_av_i8z_all_m128i(a, v).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110709,"byte_end":7110769,"line_start":235,"line_end":235,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(c, [0_i8, 5, 4, 1, 3, 70, 99, 100, 2, 14, 6, 7, 55, 12, 13, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110770,"byte_end":7110849,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110850,"byte_end":7110857,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ * **Intrinsic:** [`_mm_shuffle_epi8`]","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110858,"byte_end":7110899,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/ * **Assembly:** `pshufb xmm, xmm`","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110900,"byte_end":7110937,"line_start":239,"line_end":239,"column_start":1,"column_end":38}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110938,"byte_end":7110949,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7110950,"byte_end":7110967,"line_start":241,"line_end":241,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":906},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111793,"byte_end":7111812,"line_start":263,"line_end":263,"column_start":8,"column_end":27},"name":"sign_apply_i8_m128i","qualname":"::x86_x64::ssse3::sign_apply_i8_m128i","value":"pub fn sign_apply_i8_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Applies the sign of `i8` values in `b` to the values in `a`.","sig":null,"attributes":[{"value":"/ Applies the sign of `i8` values in `b` to the values in `a`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111138,"byte_end":7111202,"line_start":247,"line_end":247,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111203,"byte_end":7111206,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ * If `b` is negative: the `a` value is negated.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111207,"byte_end":7111258,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/ * Else If `b` is 0: the `a` value becomes 0.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111259,"byte_end":7111307,"line_start":250,"line_end":250,"column_start":1,"column_end":49}},{"value":"/ * Else the `a` value is unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111308,"byte_end":7111346,"line_start":251,"line_end":251,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111347,"byte_end":7111354,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111355,"byte_end":7111378,"line_start":253,"line_end":253,"column_start":1,"column_end":24}},{"value":"/ let a =","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111379,"byte_end":7111390,"line_start":254,"line_end":254,"column_start":1,"column_end":12}},{"value":"/   m128i::from([0_i8, 1, -2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, -15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111391,"byte_end":7111470,"line_start":255,"line_end":255,"column_start":1,"column_end":80}},{"value":"/ let b = m128i::from([-1_i8, 1, 1, -1, -1, 1, 1, 1, 1, 0, 0, -1, -1, 0, 0, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111471,"byte_end":7111553,"line_start":256,"line_end":256,"column_start":1,"column_end":83}},{"value":"/ let c: [i8; 16] = sign_apply_i8_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111554,"byte_end":7111609,"line_start":257,"line_end":257,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(c, [0_i8, 1, -2, -3, -4, 5, 6, 7, 8, 0, 0, -11, -12, 0, 0, -15]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111610,"byte_end":7111690,"line_start":258,"line_end":258,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111691,"byte_end":7111698,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111699,"byte_end":7111710,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111711,"byte_end":7111728,"line_start":261,"line_end":261,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":907},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112455,"byte_end":7112475,"line_start":282,"line_end":282,"column_start":8,"column_end":28},"name":"sign_apply_i16_m128i","qualname":"::x86_x64::ssse3::sign_apply_i16_m128i","value":"pub fn sign_apply_i16_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Applies the sign of `i16` values in `b` to the values in `a`.","sig":null,"attributes":[{"value":"/ Applies the sign of `i16` values in `b` to the values in `a`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111891,"byte_end":7111956,"line_start":267,"line_end":267,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111957,"byte_end":7111960,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ * If `b` is negative: the `a` value is negated.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7111961,"byte_end":7112012,"line_start":269,"line_end":269,"column_start":1,"column_end":52}},{"value":"/ * Else If `b` is 0: the `a` value becomes 0.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112013,"byte_end":7112061,"line_start":270,"line_end":270,"column_start":1,"column_end":49}},{"value":"/ * Else the `a` value is unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112062,"byte_end":7112100,"line_start":271,"line_end":271,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112101,"byte_end":7112108,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112109,"byte_end":7112132,"line_start":273,"line_end":273,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1_i16, 2, -3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112133,"byte_end":7112188,"line_start":274,"line_end":274,"column_start":1,"column_end":56}},{"value":"/ let b = m128i::from([5_i16, -6, 7, 0, 1, 1, 0, 1]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112189,"byte_end":7112244,"line_start":275,"line_end":275,"column_start":1,"column_end":56}},{"value":"/ let c: [i16; 8] = sign_apply_i16_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112245,"byte_end":7112301,"line_start":276,"line_end":276,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [1_i16, -2, -3, 0, 5, 6, 0, 8]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112302,"byte_end":7112352,"line_start":277,"line_end":277,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112353,"byte_end":7112360,"line_start":278,"line_end":278,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112361,"byte_end":7112372,"line_start":279,"line_end":279,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112373,"byte_end":7112390,"line_start":280,"line_end":280,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":908},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7113071,"byte_end":7113091,"line_start":301,"line_end":301,"column_start":8,"column_end":28},"name":"sign_apply_i32_m128i","qualname":"::x86_x64::ssse3::sign_apply_i32_m128i","value":"pub fn sign_apply_i32_m128i(m128i, m128i) -> m128i","parent":null,"children":[],"decl_id":null,"docs":" Applies the sign of `i32` values in `b` to the values in `a`.","sig":null,"attributes":[{"value":"/ Applies the sign of `i32` values in `b` to the values in `a`.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112555,"byte_end":7112620,"line_start":286,"line_end":286,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112621,"byte_end":7112624,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ * If `b` is negative: the `a` value is negated.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112625,"byte_end":7112676,"line_start":288,"line_end":288,"column_start":1,"column_end":52}},{"value":"/ * Else If `b` is 0: the `a` value becomes 0.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112677,"byte_end":7112725,"line_start":289,"line_end":289,"column_start":1,"column_end":49}},{"value":"/ * Else the `a` value is unchanged.","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112726,"byte_end":7112764,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112765,"byte_end":7112772,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ # use safe_arch::*;","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112773,"byte_end":7112796,"line_start":292,"line_end":292,"column_start":1,"column_end":24}},{"value":"/ let a = m128i::from([1, 2, -3, 4]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112797,"byte_end":7112836,"line_start":293,"line_end":293,"column_start":1,"column_end":40}},{"value":"/ let b = m128i::from([5, -6, 7, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112837,"byte_end":7112876,"line_start":294,"line_end":294,"column_start":1,"column_end":40}},{"value":"/ let c: [i32; 4] = sign_apply_i32_m128i(a, b).into();","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112877,"byte_end":7112933,"line_start":295,"line_end":295,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(c, [1, -2, -3, 0]);","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112934,"byte_end":7112968,"line_start":296,"line_end":296,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112969,"byte_end":7112976,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112977,"byte_end":7112988,"line_start":298,"line_end":298,"column_start":1,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/ssse3.rs","byte_start":7112989,"byte_end":7113006,"line_start":299,"line_end":299,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":87},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":10563,"byte_end":10585,"line_start":238,"line_end":238,"column_start":10,"column_end":32},"name":"read_timestamp_counter","qualname":"::x86_x64::read_timestamp_counter","value":"pub fn read_timestamp_counter() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU's timestamp counter value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":11430,"byte_end":11454,"line_start":258,"line_end":258,"column_start":10,"column_end":34},"name":"read_timestamp_counter_p","qualname":"::x86_x64::read_timestamp_counter_p","value":"pub fn read_timestamp_counter_p(&mut u32) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU's timestamp counter value and store the processor signature.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":11745,"byte_end":11758,"line_start":270,"line_end":270,"column_start":10,"column_end":23},"name":"byte_swap_i32","qualname":"::x86_x64::byte_swap_i32","value":"pub fn byte_swap_i32(i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Swap the bytes of the given 32-bit value.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":12089,"byte_end":12102,"line_start":283,"line_end":283,"column_start":10,"column_end":23},"name":"byte_swap_i64","qualname":"::x86_x64::byte_swap_i64","value":"pub fn byte_swap_i64(i64) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Swap the bytes of the given 64-bit value.","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":12051,"byte_end":12079,"line_start":282,"line_end":282,"column_start":3,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903356,"byte_end":6903360,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903423,"byte_end":6903427,"line_start":21,"line_end":21,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903513,"byte_end":6903517,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903663,"byte_end":6903667,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904685,"byte_end":6904689,"line_start":72,"line_end":72,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904784,"byte_end":6904788,"line_start":79,"line_end":79,"column_start":15,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904810,"byte_end":6904814,"line_start":81,"line_end":81,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904942,"byte_end":6904946,"line_start":89,"line_end":89,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6905544,"byte_end":6905548,"line_start":113,"line_end":113,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6906010,"byte_end":6906014,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6906503,"byte_end":6906507,"line_start":151,"line_end":151,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6907004,"byte_end":6907008,"line_start":170,"line_end":170,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6907469,"byte_end":6907473,"line_start":189,"line_end":189,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6907934,"byte_end":6907938,"line_start":208,"line_end":208,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6908439,"byte_end":6908443,"line_start":227,"line_end":227,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6908941,"byte_end":6908945,"line_start":246,"line_end":246,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910353,"byte_end":6910358,"line_start":19,"line_end":19,"column_start":36,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910421,"byte_end":6910426,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910513,"byte_end":6910518,"line_start":23,"line_end":23,"column_start":55,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910667,"byte_end":6910672,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911687,"byte_end":6911692,"line_start":72,"line_end":72,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911787,"byte_end":6911792,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911814,"byte_end":6911819,"line_start":81,"line_end":81,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911947,"byte_end":6911952,"line_start":89,"line_end":89,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6912552,"byte_end":6912557,"line_start":113,"line_end":113,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6912972,"byte_end":6912977,"line_start":130,"line_end":130,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6913423,"byte_end":6913428,"line_start":147,"line_end":147,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6913890,"byte_end":6913895,"line_start":164,"line_end":164,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6914310,"byte_end":6914315,"line_start":181,"line_end":181,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6914730,"byte_end":6914735,"line_start":198,"line_end":198,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6915203,"byte_end":6915208,"line_start":215,"line_end":215,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6915673,"byte_end":6915678,"line_start":232,"line_end":232,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917191,"byte_end":6917196,"line_start":22,"line_end":22,"column_start":36,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917259,"byte_end":6917264,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917351,"byte_end":6917356,"line_start":26,"line_end":26,"column_start":55,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917515,"byte_end":6917520,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917615,"byte_end":6917620,"line_start":41,"line_end":41,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917642,"byte_end":6917647,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917785,"byte_end":6917790,"line_start":53,"line_end":53,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918076,"byte_end":6918081,"line_start":69,"line_end":69,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918378,"byte_end":6918383,"line_start":87,"line_end":87,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918669,"byte_end":6918674,"line_start":103,"line_end":103,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918971,"byte_end":6918976,"line_start":121,"line_end":121,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6919262,"byte_end":6919267,"line_start":137,"line_end":137,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6919564,"byte_end":6919569,"line_start":155,"line_end":155,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6919855,"byte_end":6919860,"line_start":171,"line_end":171,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6920154,"byte_end":6920159,"line_start":189,"line_end":189,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6920429,"byte_end":6920434,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6920769,"byte_end":6920774,"line_start":225,"line_end":225,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6921235,"byte_end":6921240,"line_start":244,"line_end":244,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6921734,"byte_end":6921739,"line_start":263,"line_end":263,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6922193,"byte_end":6922198,"line_start":282,"line_end":282,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6922664,"byte_end":6922669,"line_start":301,"line_end":301,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6923135,"byte_end":6923140,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6923598,"byte_end":6923603,"line_start":339,"line_end":339,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6924058,"byte_end":6924063,"line_start":358,"line_end":358,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925538,"byte_end":6925542,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925605,"byte_end":6925609,"line_start":21,"line_end":21,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925695,"byte_end":6925699,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925845,"byte_end":6925849,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926863,"byte_end":6926867,"line_start":70,"line_end":70,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926962,"byte_end":6926966,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926988,"byte_end":6926992,"line_start":79,"line_end":79,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6927120,"byte_end":6927124,"line_start":87,"line_end":87,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6927722,"byte_end":6927726,"line_start":111,"line_end":111,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6928208,"byte_end":6928212,"line_start":130,"line_end":130,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6928713,"byte_end":6928717,"line_start":149,"line_end":149,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6929226,"byte_end":6929230,"line_start":168,"line_end":168,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6929711,"byte_end":6929715,"line_start":187,"line_end":187,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6930196,"byte_end":6930200,"line_start":206,"line_end":206,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6930713,"byte_end":6930717,"line_start":225,"line_end":225,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6931227,"byte_end":6931231,"line_start":244,"line_end":244,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932650,"byte_end":6932655,"line_start":19,"line_end":19,"column_start":36,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932718,"byte_end":6932723,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932810,"byte_end":6932815,"line_start":23,"line_end":23,"column_start":55,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932964,"byte_end":6932969,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933984,"byte_end":6933989,"line_start":72,"line_end":72,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934084,"byte_end":6934089,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934111,"byte_end":6934116,"line_start":81,"line_end":81,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934244,"byte_end":6934249,"line_start":89,"line_end":89,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934849,"byte_end":6934854,"line_start":113,"line_end":113,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6935269,"byte_end":6935274,"line_start":130,"line_end":130,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6935720,"byte_end":6935725,"line_start":147,"line_end":147,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6936187,"byte_end":6936192,"line_start":164,"line_end":164,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6936607,"byte_end":6936612,"line_start":181,"line_end":181,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6937027,"byte_end":6937032,"line_start":198,"line_end":198,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6937500,"byte_end":6937505,"line_start":215,"line_end":215,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6937970,"byte_end":6937975,"line_start":232,"line_end":232,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939488,"byte_end":6939493,"line_start":22,"line_end":22,"column_start":36,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939556,"byte_end":6939561,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939648,"byte_end":6939653,"line_start":26,"line_end":26,"column_start":55,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939812,"byte_end":6939817,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939912,"byte_end":6939917,"line_start":41,"line_end":41,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939939,"byte_end":6939944,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940082,"byte_end":6940087,"line_start":53,"line_end":53,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940373,"byte_end":6940378,"line_start":69,"line_end":69,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940676,"byte_end":6940681,"line_start":87,"line_end":87,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940970,"byte_end":6940975,"line_start":103,"line_end":103,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6941274,"byte_end":6941279,"line_start":121,"line_end":121,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6941565,"byte_end":6941570,"line_start":137,"line_end":137,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6941867,"byte_end":6941872,"line_start":155,"line_end":155,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6942158,"byte_end":6942163,"line_start":171,"line_end":171,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6942462,"byte_end":6942467,"line_start":189,"line_end":189,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6942752,"byte_end":6942757,"line_start":205,"line_end":205,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6943102,"byte_end":6943107,"line_start":225,"line_end":225,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6943580,"byte_end":6943585,"line_start":244,"line_end":244,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6944091,"byte_end":6944096,"line_start":263,"line_end":263,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6944562,"byte_end":6944567,"line_start":282,"line_end":282,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6945053,"byte_end":6945058,"line_start":301,"line_end":301,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6945544,"byte_end":6945549,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6946019,"byte_end":6946024,"line_start":339,"line_end":339,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6946491,"byte_end":6946496,"line_start":358,"line_end":358,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986570,"byte_end":6986574,"line_start":1307,"line_end":1307,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986718,"byte_end":6986722,"line_start":1315,"line_end":1315,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986833,"byte_end":6986837,"line_start":1322,"line_end":1322,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986990,"byte_end":6986994,"line_start":1330,"line_end":1330,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987107,"byte_end":6987111,"line_start":1337,"line_end":1337,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987261,"byte_end":6987265,"line_start":1345,"line_end":1345,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987378,"byte_end":6987382,"line_start":1352,"line_end":1352,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987535,"byte_end":6987539,"line_start":1360,"line_end":1360,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987650,"byte_end":6987654,"line_start":1367,"line_end":1367,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987798,"byte_end":6987802,"line_start":1375,"line_end":1375,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987910,"byte_end":6987914,"line_start":1382,"line_end":1382,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988058,"byte_end":6988062,"line_start":1390,"line_end":1390,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988170,"byte_end":6988174,"line_start":1397,"line_end":1397,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988312,"byte_end":6988316,"line_start":1406,"line_end":1406,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988679,"byte_end":6988683,"line_start":1420,"line_end":1420,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988827,"byte_end":6988831,"line_start":1428,"line_end":1428,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988945,"byte_end":6988949,"line_start":1435,"line_end":1435,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090293,"byte_end":7090298,"line_start":3301,"line_end":3301,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090443,"byte_end":7090448,"line_start":3309,"line_end":3309,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090559,"byte_end":7090564,"line_start":3316,"line_end":3316,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090718,"byte_end":7090723,"line_start":3324,"line_end":3324,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090836,"byte_end":7090841,"line_start":3331,"line_end":3331,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090992,"byte_end":7090997,"line_start":3339,"line_end":3339,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091110,"byte_end":7091115,"line_start":3346,"line_end":3346,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091269,"byte_end":7091274,"line_start":3354,"line_end":3354,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091385,"byte_end":7091390,"line_start":3361,"line_end":3361,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091535,"byte_end":7091540,"line_start":3369,"line_end":3369,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091648,"byte_end":7091653,"line_start":3376,"line_end":3376,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091798,"byte_end":7091803,"line_start":3384,"line_end":3384,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091911,"byte_end":7091916,"line_start":3391,"line_end":3391,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092056,"byte_end":7092061,"line_start":3400,"line_end":3400,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092425,"byte_end":7092430,"line_start":3414,"line_end":3414,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092575,"byte_end":7092580,"line_start":3422,"line_end":3422,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092694,"byte_end":7092699,"line_start":3429,"line_end":3429,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093109,"byte_end":7093114,"line_start":3442,"line_end":3442,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093268,"byte_end":7093273,"line_start":3450,"line_end":3450,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093386,"byte_end":7093391,"line_start":3457,"line_end":3457,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093542,"byte_end":7093547,"line_start":3465,"line_end":3465,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093660,"byte_end":7093665,"line_start":3472,"line_end":3472,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093819,"byte_end":7093824,"line_start":3480,"line_end":3480,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093935,"byte_end":7093940,"line_start":3487,"line_end":3487,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7094292,"byte_end":7094297,"line_start":3501,"line_end":3501,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7094647,"byte_end":7094652,"line_start":3512,"line_end":3512,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/lib.rs","byte_start":7113,"byte_end":7131,"line_start":138,"line_end":138,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":82}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903356,"byte_end":6903360,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":94},"to":{"krate":4,"index":165}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903423,"byte_end":6903427,"line_start":21,"line_end":21,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":94},"to":{"krate":4,"index":262}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903513,"byte_end":6903517,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":94},"to":{"krate":4,"index":329}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6903663,"byte_end":6903667,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904685,"byte_end":6904689,"line_start":72,"line_end":72,"column_start":16,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904784,"byte_end":6904788,"line_start":79,"line_end":79,"column_start":15,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904810,"byte_end":6904814,"line_start":81,"line_end":81,"column_start":18,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6904942,"byte_end":6904946,"line_start":89,"line_end":89,"column_start":25,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6905544,"byte_end":6905548,"line_start":113,"line_end":113,"column_start":16,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6906010,"byte_end":6906014,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6906503,"byte_end":6906507,"line_start":151,"line_end":151,"column_start":17,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8712}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6907004,"byte_end":6907008,"line_start":170,"line_end":170,"column_start":19,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8720}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6907469,"byte_end":6907473,"line_start":189,"line_end":189,"column_start":19,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6907934,"byte_end":6907938,"line_start":208,"line_end":208,"column_start":19,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6908439,"byte_end":6908443,"line_start":227,"line_end":227,"column_start":19,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128_.rs","byte_start":6908941,"byte_end":6908945,"line_start":246,"line_end":246,"column_start":16,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":8710}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910353,"byte_end":6910358,"line_start":19,"line_end":19,"column_start":36,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":140},"to":{"krate":4,"index":165}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910421,"byte_end":6910426,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":140},"to":{"krate":4,"index":262}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910513,"byte_end":6910518,"line_start":23,"line_end":23,"column_start":55,"column_end":60},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":140},"to":{"krate":4,"index":329}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6910667,"byte_end":6910672,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911687,"byte_end":6911692,"line_start":72,"line_end":72,"column_start":16,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911787,"byte_end":6911792,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911814,"byte_end":6911819,"line_start":81,"line_end":81,"column_start":18,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6911947,"byte_end":6911952,"line_start":89,"line_end":89,"column_start":25,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6912552,"byte_end":6912557,"line_start":113,"line_end":113,"column_start":16,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6912972,"byte_end":6912977,"line_start":130,"line_end":130,"column_start":18,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6913423,"byte_end":6913428,"line_start":147,"line_end":147,"column_start":17,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8712}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6913890,"byte_end":6913895,"line_start":164,"line_end":164,"column_start":19,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8720}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6914310,"byte_end":6914315,"line_start":181,"line_end":181,"column_start":19,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6914730,"byte_end":6914735,"line_start":198,"line_end":198,"column_start":19,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6915203,"byte_end":6915208,"line_start":215,"line_end":215,"column_start":19,"column_end":24},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128d_.rs","byte_start":6915673,"byte_end":6915678,"line_start":232,"line_end":232,"column_start":16,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":8710}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917191,"byte_end":6917196,"line_start":22,"line_end":22,"column_start":36,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":186},"to":{"krate":4,"index":165}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917259,"byte_end":6917264,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":186},"to":{"krate":4,"index":262}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917351,"byte_end":6917356,"line_start":26,"line_end":26,"column_start":55,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":186},"to":{"krate":4,"index":329}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917515,"byte_end":6917520,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917615,"byte_end":6917620,"line_start":41,"line_end":41,"column_start":15,"column_end":20},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917642,"byte_end":6917647,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6917785,"byte_end":6917790,"line_start":53,"line_end":53,"column_start":25,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918076,"byte_end":6918081,"line_start":69,"line_end":69,"column_start":25,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918378,"byte_end":6918383,"line_start":87,"line_end":87,"column_start":25,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918669,"byte_end":6918674,"line_start":103,"line_end":103,"column_start":25,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6918971,"byte_end":6918976,"line_start":121,"line_end":121,"column_start":25,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6919262,"byte_end":6919267,"line_start":137,"line_end":137,"column_start":25,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6919564,"byte_end":6919569,"line_start":155,"line_end":155,"column_start":25,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6919855,"byte_end":6919860,"line_start":171,"line_end":171,"column_start":25,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6920154,"byte_end":6920159,"line_start":189,"line_end":189,"column_start":21,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6920429,"byte_end":6920434,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6920769,"byte_end":6920774,"line_start":225,"line_end":225,"column_start":16,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6921235,"byte_end":6921240,"line_start":244,"line_end":244,"column_start":18,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6921734,"byte_end":6921739,"line_start":263,"line_end":263,"column_start":17,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8712}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6922193,"byte_end":6922198,"line_start":282,"line_end":282,"column_start":19,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8720}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6922664,"byte_end":6922669,"line_start":301,"line_end":301,"column_start":19,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6923135,"byte_end":6923140,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6923598,"byte_end":6923603,"line_start":339,"line_end":339,"column_start":19,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m128i_.rs","byte_start":6924058,"byte_end":6924063,"line_start":358,"line_end":358,"column_start":16,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":8710}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925538,"byte_end":6925542,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":288},"to":{"krate":4,"index":165}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925605,"byte_end":6925609,"line_start":21,"line_end":21,"column_start":31,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":288},"to":{"krate":4,"index":262}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925695,"byte_end":6925699,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":288},"to":{"krate":4,"index":329}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6925845,"byte_end":6925849,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926863,"byte_end":6926867,"line_start":70,"line_end":70,"column_start":16,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926962,"byte_end":6926966,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6926988,"byte_end":6926992,"line_start":79,"line_end":79,"column_start":18,"column_end":22},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6927120,"byte_end":6927124,"line_start":87,"line_end":87,"column_start":25,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6927722,"byte_end":6927726,"line_start":111,"line_end":111,"column_start":16,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6928208,"byte_end":6928212,"line_start":130,"line_end":130,"column_start":18,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6928713,"byte_end":6928717,"line_start":149,"line_end":149,"column_start":17,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8712}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6929226,"byte_end":6929230,"line_start":168,"line_end":168,"column_start":19,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8720}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6929711,"byte_end":6929715,"line_start":187,"line_end":187,"column_start":19,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6930196,"byte_end":6930200,"line_start":206,"line_end":206,"column_start":19,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6930713,"byte_end":6930717,"line_start":225,"line_end":225,"column_start":19,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256_.rs","byte_start":6931227,"byte_end":6931231,"line_start":244,"line_end":244,"column_start":16,"column_end":20},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":8710}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932650,"byte_end":6932655,"line_start":19,"line_end":19,"column_start":36,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":334},"to":{"krate":4,"index":165}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932718,"byte_end":6932723,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":334},"to":{"krate":4,"index":262}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932810,"byte_end":6932815,"line_start":23,"line_end":23,"column_start":55,"column_end":60},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":334},"to":{"krate":4,"index":329}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6932964,"byte_end":6932969,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6933984,"byte_end":6933989,"line_start":72,"line_end":72,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934084,"byte_end":6934089,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934111,"byte_end":6934116,"line_start":81,"line_end":81,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934244,"byte_end":6934249,"line_start":89,"line_end":89,"column_start":25,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6934849,"byte_end":6934854,"line_start":113,"line_end":113,"column_start":16,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6935269,"byte_end":6935274,"line_start":130,"line_end":130,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6935720,"byte_end":6935725,"line_start":147,"line_end":147,"column_start":17,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8712}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6936187,"byte_end":6936192,"line_start":164,"line_end":164,"column_start":19,"column_end":24},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8720}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6936607,"byte_end":6936612,"line_start":181,"line_end":181,"column_start":19,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6937027,"byte_end":6937032,"line_start":198,"line_end":198,"column_start":19,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6937500,"byte_end":6937505,"line_start":215,"line_end":215,"column_start":19,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256d_.rs","byte_start":6937970,"byte_end":6937975,"line_start":232,"line_end":232,"column_start":16,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":8710}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939488,"byte_end":6939493,"line_start":22,"line_end":22,"column_start":36,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":380},"to":{"krate":4,"index":165}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939556,"byte_end":6939561,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":380},"to":{"krate":4,"index":262}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939648,"byte_end":6939653,"line_start":26,"line_end":26,"column_start":55,"column_end":60},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":380},"to":{"krate":4,"index":329}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939812,"byte_end":6939817,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2447}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939912,"byte_end":6939917,"line_start":41,"line_end":41,"column_start":15,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6939939,"byte_end":6939944,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2800}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940082,"byte_end":6940087,"line_start":53,"line_end":53,"column_start":25,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940373,"byte_end":6940378,"line_start":69,"line_end":69,"column_start":25,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940676,"byte_end":6940681,"line_start":87,"line_end":87,"column_start":26,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6940970,"byte_end":6940975,"line_start":103,"line_end":103,"column_start":26,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6941274,"byte_end":6941279,"line_start":121,"line_end":121,"column_start":25,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6941565,"byte_end":6941570,"line_start":137,"line_end":137,"column_start":25,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6941867,"byte_end":6941872,"line_start":155,"line_end":155,"column_start":25,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6942158,"byte_end":6942163,"line_start":171,"line_end":171,"column_start":25,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6942462,"byte_end":6942467,"line_start":189,"line_end":189,"column_start":26,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6942752,"byte_end":6942757,"line_start":205,"line_end":205,"column_start":26,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6943102,"byte_end":6943107,"line_start":225,"line_end":225,"column_start":16,"column_end":21},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8701}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6943580,"byte_end":6943585,"line_start":244,"line_end":244,"column_start":18,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8708}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6944091,"byte_end":6944096,"line_start":263,"line_end":263,"column_start":17,"column_end":22},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8712}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6944562,"byte_end":6944567,"line_start":282,"line_end":282,"column_start":19,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8720}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6945053,"byte_end":6945058,"line_start":301,"line_end":301,"column_start":19,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8722}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6945544,"byte_end":6945549,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8714}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6946019,"byte_end":6946024,"line_start":339,"line_end":339,"column_start":19,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8716}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/m256i_.rs","byte_start":6946491,"byte_end":6946496,"line_start":358,"line_end":358,"column_start":16,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":8710}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986570,"byte_end":6986574,"line_start":1307,"line_end":1307,"column_start":14,"column_end":18},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2889}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986718,"byte_end":6986722,"line_start":1315,"line_end":1315,"column_start":20,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986833,"byte_end":6986837,"line_start":1322,"line_end":1322,"column_start":17,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6986990,"byte_end":6986994,"line_start":1330,"line_end":1330,"column_start":23,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2972}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987107,"byte_end":6987111,"line_start":1337,"line_end":1337,"column_start":16,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987261,"byte_end":6987265,"line_start":1345,"line_end":1345,"column_start":22,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2976}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987378,"byte_end":6987382,"line_start":1352,"line_end":1352,"column_start":17,"column_end":21},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987535,"byte_end":6987539,"line_start":1360,"line_end":1360,"column_start":23,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2980}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987650,"byte_end":6987654,"line_start":1367,"line_end":1367,"column_start":14,"column_end":18},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987798,"byte_end":6987802,"line_start":1375,"line_end":1375,"column_start":20,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6987910,"byte_end":6987914,"line_start":1382,"line_end":1382,"column_start":14,"column_end":18},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988058,"byte_end":6988062,"line_start":1390,"line_end":1390,"column_start":20,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988170,"byte_end":6988174,"line_start":1397,"line_end":1397,"column_start":14,"column_end":18},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988312,"byte_end":6988316,"line_start":1406,"line_end":1406,"column_start":14,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988679,"byte_end":6988683,"line_start":1420,"line_end":1420,"column_start":14,"column_end":18},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988827,"byte_end":6988831,"line_start":1428,"line_end":1428,"column_start":20,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse.rs","byte_start":6988945,"byte_end":6988949,"line_start":1435,"line_end":1435,"column_start":20,"column_end":24},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":94},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090293,"byte_end":7090298,"line_start":3301,"line_end":3301,"column_start":14,"column_end":19},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2889}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090443,"byte_end":7090448,"line_start":3309,"line_end":3309,"column_start":20,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090559,"byte_end":7090564,"line_start":3316,"line_end":3316,"column_start":17,"column_end":22},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090718,"byte_end":7090723,"line_start":3324,"line_end":3324,"column_start":23,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2972}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090836,"byte_end":7090841,"line_start":3331,"line_end":3331,"column_start":16,"column_end":21},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7090992,"byte_end":7090997,"line_start":3339,"line_end":3339,"column_start":22,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2976}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091110,"byte_end":7091115,"line_start":3346,"line_end":3346,"column_start":17,"column_end":22},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091269,"byte_end":7091274,"line_start":3354,"line_end":3354,"column_start":23,"column_end":28},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2980}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091385,"byte_end":7091390,"line_start":3361,"line_end":3361,"column_start":14,"column_end":19},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091535,"byte_end":7091540,"line_start":3369,"line_end":3369,"column_start":20,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091648,"byte_end":7091653,"line_start":3376,"line_end":3376,"column_start":14,"column_end":19},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091798,"byte_end":7091803,"line_start":3384,"line_end":3384,"column_start":20,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7091911,"byte_end":7091916,"line_start":3391,"line_end":3391,"column_start":14,"column_end":19},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092056,"byte_end":7092061,"line_start":3400,"line_end":3400,"column_start":14,"column_end":19},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092425,"byte_end":7092430,"line_start":3414,"line_end":3414,"column_start":14,"column_end":19},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092575,"byte_end":7092580,"line_start":3422,"line_end":3422,"column_start":20,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7092694,"byte_end":7092699,"line_start":3429,"line_end":3429,"column_start":20,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093109,"byte_end":7093114,"line_start":3442,"line_end":3442,"column_start":17,"column_end":22},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2945}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093268,"byte_end":7093273,"line_start":3450,"line_end":3450,"column_start":23,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2972}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093386,"byte_end":7093391,"line_start":3457,"line_end":3457,"column_start":16,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2950}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093542,"byte_end":7093547,"line_start":3465,"line_end":3465,"column_start":22,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2976}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093660,"byte_end":7093665,"line_start":3472,"line_end":3472,"column_start":17,"column_end":22},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093819,"byte_end":7093824,"line_start":3480,"line_end":3480,"column_start":23,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2980}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7093935,"byte_end":7093940,"line_start":3487,"line_end":3487,"column_start":14,"column_end":19},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2941}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7094292,"byte_end":7094297,"line_start":3501,"line_end":3501,"column_start":20,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2477}},{"span":{"file_name":"/Users/raylee/.cargo/registry/src/github.com-1ecc6299db9ec823/safe_arch-0.5.2/src/x86_x64/sse2.rs","byte_start":7094647,"byte_end":7094652,"line_start":3512,"line_end":3512,"column_start":13,"column_end":18},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":2482}}]}